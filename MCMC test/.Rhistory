if (theta < 0){
theta_r[1] = theta
}else{
theta_r[2] = theta
}
}
theta = runif(1,theta_r[1],theta_r[2])
}
}
curP = B$parameters*0
A = as.vector(B$parameters)
A[3] = log(A[3])
A[4] = log(A[4])
analytic_slice(doses,y,curP,prior,A,B$covariance)
for (ii in 1:3000){
curP = analytic_slice(doses,y,curP,prior,A,B$covariance*10)
saved_parms[ii,] = curP
}
plot(saved_parms[,1])
plot(saved_parms[,4])
likelihood_hill <- function(parms,doses,y){
cont_hill_f <- function(parms,d){
g  <- parms[1]
nu <- parms[2]
k  <- exp(parms[3]);
n  <- exp(parms[4]);
rval <- g + nu*d^n/(k^n+d^n)
return (rval)
}
hill_mean <- cont_hill_f(parms,doses)
return(sum(dnorm(y,hill_mean,sd = sqrt(exp(parms[5])),log=TRUE)))
}
for (ii in 1:3000){
curP = analytic_slice(doses,y,curP,prior,A,B$covariance*10)
saved_parms[ii,] = curP
}
plot(saved_parms[,4])
plot(saved_parms[,3])
stan_model = "
data {
int<lower=0> N;
vector[N] d;
vector[N] y;
}
parameters {
real alpha;
real beta;
real log_n;
real log_k;
realsigma;
}
transformed parameters {
real k;
real n;
n  = exp(log_n); k = exp(log_k);
}
model {
alpha ~ normal(0,10);
beta  ~ normal(0,10);
log_n     ~ normal(0,0.5);
log_k     ~ normal(0,0.5);
sigma2 ~ normal(0,1)
y ~ normal(alpha + beta * d^n/(k^n+d^n), exp(0.5*sigma2));
}
"
library(rstan)
data_v   <- list(d = doses,y = y, N = length(y))
stan_fit <- stan(model_code = stan_model,data = data_v)
stan_model = "
data {
int<lower=0> N;
vector[N] d;
vector[N] y;
}
parameters {
real alpha;
real beta;
real log_n;
real log_k;
real sigma;
}
transformed parameters {
real k;
real n;
n  = exp(log_n); k = exp(log_k);
}
model {
alpha ~ normal(0,10);
beta  ~ normal(0,10);
log_n     ~ normal(0,0.5);
log_k     ~ normal(0,0.5);
sigma2 ~ normal(0,1)
y ~ normal(alpha + beta * d^n/(k^n+d^n), exp(0.5*sigma2));
}
"
library(rstan)
data_v   <- list(d = doses,y = y, N = length(y))
stan_fit <- stan(model_code = stan_model,data = data_v)
stan_model = "
data {
int<lower=0> N;
vector[N] d;
vector[N] y;
}
parameters {
real alpha;
real beta;
real log_n;
real log_k;
real sigma;
}
transformed parameters {
real k;
real n;
n  = exp(log_n); k = exp(log_k);
}
model {
alpha ~ normal(0,10);
beta  ~ normal(0,10);
log_n     ~ normal(0,0.5);
log_k     ~ normal(0,0.5);
sigma ~ normal(0,1)
y ~ normal(alpha + beta * d^n/(k^n+d^n), exp(0.5*sigma));
}
"
library(rstan)
data_v   <- list(d = doses,y = y, N = length(y))
stan_fit <- stan(model_code = stan_model,data = data_v)
stan_model = "
data {
int<lower=0> N;
vector[N] d;
vector[N] y;
}
parameters {
real alpha;
real beta;
real log_n;
real log_k;
real sigma;
}
transformed parameters {
real k;
real n;
n  = exp(log_n); k = exp(log_k);
}
model {
alpha ~ normal(0,10);
beta  ~ normal(0,10);
log_n     ~ normal(0,0.5);
log_k     ~ normal(0,0.5);
sigma  ~ normal(0,1);
y ~ normal(alpha + beta * d^n/(k^n+d^n), exp(0.5*sigma));
}
"
library(rstan)
data_v   <- list(d = doses,y = y, N = length(y))
stan_fit <- stan(model_code = stan_model,data = data_v)
stan_model = "
data {
int<lower=0> N;
vector[N] d;
vector[N] y;
}
parameters {
real alpha;
real beta;
real log_n;
real log_k;
real sigma;
}
transformed parameters {
real k;
real n;
n  = exp(log_n); k = exp(log_k);
}
model {
alpha ~ normal(0,10);
beta  ~ normal(0,10);
log_n     ~ normal(0,0.5);
log_k     ~ normal(0,0.5);
sigma  ~ normal(0,1);
y ~ normal(alpha + beta * pow(d,n)/(pow(k,n)+pow(d,n)), exp(0.5*sigma));
}
"
library(rstan)
data_v   <- list(d = doses,y = y, N = length(y))
stan_fit <- stan(model_code = stan_model,data = data_v)
stan_model = "
data {
int<lower=0> N;
vector[N] d;
vector[N] y;
}
parameters {
real alpha;
real beta;
real log_n;
real log_k;
real sigma;
}
transformed parameters {
real k;
real n;
n  = exp(log_n); k = exp(log_k);
}
model {
alpha ~ normal(0,10);
beta  ~ normal(0,10);
log_n     ~ normal(0,0.5);
log_k     ~ normal(0,0.5);
sigma  ~ normal(0,1);
for (n in 1:N){
y[n] ~ normal(alpha + beta * pow(d[n],n)/(pow(k,n)+pow(d[n],n)), exp(0.5*sigma));
}
}
"
library(rstan)
data_v   <- list(d = doses,y = y, N = length(y))
stan_fit <- stan(model_code = stan_model,data = data_v)
stan_model = "
data {
int<lower=0> N;
vector[N] d;
vector[N] y;
}
parameters {
real alpha;
real beta;
real log_n;
real log_k;
real sigma;
}
transformed parameters {
real k;
real n;
n  = exp(log_n); k = exp(log_k);
}
model {
alpha ~ normal(0,10);
beta  ~ normal(0,10);
log_n     ~ normal(0,0.5);
log_k     ~ normal(0,0.5);
sigma  ~ normal(0,1);
for (j in 1:N){
y[j] ~ normal(alpha + beta * pow(d[j],n)/(pow(k,n)+pow(d[j],n)), exp(0.5*sigma));
}
}
"
library(rstan)
data_v   <- list(d = doses,y = y, N = length(y))
stan_fit <- stan(model_code = stan_model,data = data_v)
print(stan_fit)
mean(saved_parms[,4])
mean(saved_parms[,2])
mean(saved_parms[,3])
var(saved_parms[,3])
sd(saved_parms[,3])
sd(saved_parms[,4])
library(coda)
effectiveSize(saved_parms[,4])
effectiveSize(saved_parms[,3])
saved_parms <- matrix(0,ncol=5,nrow=4000)
for (ii in 1:4000){
curP = analytic_slice(doses,y,curP,prior,A,B$covariance*2)
saved_parms[ii,] = curP
}
saved_parms <- matrix(0,ncol=5,nrow=4000)
for (ii in 1:4000){
curP = analytic_slice(doses,y,curP,prior,A,B$covariance*2)
saved_parms[ii,] = curP
}
effectiveSize(saved_parms[,3])
effectiveSize(saved_parms[,4])
effectiveSize(saved_parms[,1])
plot(saved_parms[,1])
print(stan_fit)
saved_parms <- matrix(0,ncol=5,nrow=8000)
for (ii in 1:8000){
curP = analytic_slice(doses,y,curP,prior,A,B$covariance*2)
saved_parms[ii,] = curP
}
effectiveSize(saved_parms[,1])
effectiveSize(saved_parms[,2])
effectiveSize(saved_parms[,3])
effectiveSize(saved_parms[,4])
plot(saved_parms[,4])
plot(saved_parms[,3])
plot(saved_parms[,4])
plot(saved_parms[,5])
plot(saved_parms[,1])
plot(saved_parms[,2])
library(rstan)
library(ToxicR)
y <- c(13.184152,12.8906975,12.359554,13.073001,12.861814,12.967434,12.88052,
13.249991,	12.992931,	13.022338,	13.614057,	13.287018,	13.449239,	13.950747,
13.239134,	13.82321,	15.080262,	14.85966,	14.7805395,	15.238369,	14.749196,
14.913585,	15.181719,	15.051697,	15.065641,	15.16396,	15.484345,	16.493923,
15.633442,	15.96033,	15.388061)
prior <- create_prior_list(lnormprior(0,0.5,0,100),
normprior( 0, 1,-100,100),#normprior(1,2,-18,18),
lnormprior(0 ,1,0,100),
lnormprior(log(1.5),0.2,0,18),
normprior(0,2,-18,18));
hill_p <- create_continuous_prior(prior,"hill","normal")
doses	<- c(0,	0,	0,	0,	0.156,	0.156,	0.156,	0.3125,	0.3125,	0.3125,
0.625,	0.625,	0.625,	1.25,	1.25,	1.25,	2.5,	2.5,	2.5,	5,5,
5,	5,	10,	10,	10,	10,	20,	20,	20,	20)
doses <- doses/20
scale = mean(y[doses==0])
dataF = list(N = length(y),
scale = scale,
y = y,
x = doses)
t<-single_continuous_fit(as.matrix(doses),as.matrix(y),prior = hill_p,fit_type = "mcmc",samples = 50000)
r<-single_continuous_fit(as.matrix(doses),as.matrix(y),model_type = ,fit_type = "mcmc",samples = 50000)
r$prior
prior <- create_prior_list(lnormprior(0,0.5,0,100),
normprior( 0, 1,-100,100),#normprior(1,2,-18,18),
lnormprior(0 ,1,0,100),
lnormprior(log(1.5),0.2,0,18),
lnormprior(0,0.75),
normprior(0,2,-18,18));
hill_p <- create_continuous_prior(prior,"hill","normal-ncv")
doses	<- c(0,	0,	0,	0,	0.156,	0.156,	0.156,	0.3125,	0.3125,	0.3125,
0.625,	0.625,	0.625,	1.25,	1.25,	1.25,	2.5,	2.5,	2.5,	5,5,
5,	5,	10,	10,	10,	10,	20,	20,	20,	20)
doses <- doses/20
scale = mean(y[doses==0])
dataF = list(N = length(y),
scale = scale,
y = y,
x = doses)
t<-single_continuous_fit(as.matrix(doses),as.matrix(y),prior = hill_p,fit_type = "mcmc",samples = 50000)
t$prior
log(1.5)
stan.fit <- stan(file="con_hill_stan.stan",data=dataF,iter = 10000)
B = extract(stan.fit)
setwd("~/Documents/r_packages/RBMDS/RBMDS/MCMC test")
stan.fit <- stan(file="con_hill_stan.stan",data=dataF,iter = 10000)
B = extract(stan.fit)
stan.fit <- stan(file="con_hill_stan_ncv.stan",data=dataF,iter = 10000)
B = extract(stan.fit)
hist(B$rho)
hist(t$mcmc_result$PARM_samples[,5])
mean(t$mcmc_result$PARM_samples[,5])
mean(B$rho)
mean(B$a)
mean(t$mcmc_result$PARM_samples[,1])
mean(t$mcmc_result$PARM_samples[,2])
mean(B$b)
stan.fit <- stan(file="con_hill_stan_ncv.stan",data=dataF,iter = 10000)
B = extract(stan.fit)
mean(B$rho)
mean(t$fitted_model$parameters[,5])
mean(t$mcmc_result$PARM_samples[,5])
t<-single_continuous_fit(as.matrix(doses),as.matrix(y),prior = hill_p,fit_type = "mcmc",samples = 75000)
mean(t$mcmc_result$PARM_samples[,5])
stan.fit <- stan(file="con_hill_stan_ncv.stan",data=dataF,iter = 20000)
B = extract(stan.fit)
mean(B$rho)
t<-single_continuous_fit(as.matrix(doses),as.matrix(y),prior = hill_p,fit_type = "mcmc",samples = 75000)
mean(t$mcmc_result$PARM_samples[,5])
var(t$mcmc_result$PARM_samples[,5])
var(B$rho)
plot(B$rho)
points(t$mcmc_result$PARM_samples[10000:59999,5],col=2)
plot(B$d)
points(t$mcmc_result$PARM_samples[10000:59999,4],col=2)
quantile(t$mcmc_result$PARM_samples[,4],col=2,c(0.05,0.25,0.5,0.75,0.95))
quantile(B$d,col=2,c(0.05,0.25,0.5,0.75,0.95))
quantile(B$c,col=2,c(0.05,0.25,0.5,0.75,0.95))
quantile(t$mcmc_result$PARM_samples[,3],col=2,c(0.05,0.25,0.5,0.75,0.95))
prior <- create_prior_list(lnormprior(0,0.5,0,100),
normprior( 0, 1,-100,100),#normprior(1,2,-18,18),
lnormprior(0 ,1,0,100),
lnormprior(log(1.5),0.2,1,18),
lnormprior(0,0.75),
normprior(0,2,-18,18));
hill_p <- create_continuous_prior(prior,"hill","normal-ncv")
doses	<- c(0,	0,	0,	0,	0.156,	0.156,	0.156,	0.3125,	0.3125,	0.3125,
0.625,	0.625,	0.625,	1.25,	1.25,	1.25,	2.5,	2.5,	2.5,	5,5,
5,	5,	10,	10,	10,	10,	20,	20,	20,	20)
doses <- doses/20
scale = mean(y[doses==0])
dataF = list(N = length(y),
scale = scale,
y = y,
x = doses)
t<-single_continuous_fit(as.matrix(doses),as.matrix(y),prior = hill_p,fit_type = "mcmc",samples = 75000)
stan.fit <- stan(file="con_hill_stan_ncv.stan",data=dataF,iter = 20000)
B = extract(stan.fit)
quantile(t$mcmc_result$PARM_samples[,3],col=2,c(0.05,0.25,0.5,0.75,0.95))
quantile(t$mcmc_result$PARM_samples[,4],col=2,c(0.05,0.25,0.5,0.75,0.95))
prior <- create_prior_list(lnormprior(0,0.5,0,100),
normprior( 0, 1,-100,100),#normprior(1,2,-18,18),
lnormprior(0 ,1,0,100),
lnormprior(log(1.5),0.2,1,18),
lnormprior(0,0.75),
normprior(0,2,-18,18));
hill_p <- create_continuous_prior(prior,"hill","normal-ncv")
doses	<- c(0,	0,	0,	0,	0.156,	0.156,	0.156,	0.3125,	0.3125,	0.3125,
0.625,	0.625,	0.625,	1.25,	1.25,	1.25,	2.5,	2.5,	2.5,	5,5,
5,	5,	10,	10,	10,	10,	20,	20,	20,	20)
doses <- doses/20
scale = mean(y[doses==0])
dataF = list(N = length(y),
scale = scale,
y = y,
x = doses)
t<-single_continuous_fit(as.matrix(doses),as.matrix(y),prior = hill_p,fit_type = "mcmc",samples = 75000)
quantile(t$mcmc_result$PARM_samples[,4],col=2,c(0.05,0.25,0.5,0.75,0.95))
min(t$mcmc_result$PARM_samples[,4])
t$prior
min(t$mcmc_result$PARM_samples[t$mcmc_result$PARM_samples[,4] > 1,4])
quantile(t$mcmc_result$PARM_samples[t$mcmc_result$PARM_samples[,4] > 1,4],c(0.05,0.25,0.5,0.75,0.95))
quantile(B$d)
quantile(B$d,c(0.05,0.25,0.50,0.75,0.95))
library(rstan)
library(ToxicR)
y <- c(13.184152,12.8906975,12.359554,13.073001,12.861814,12.967434,12.88052,
13.249991,	12.992931,	13.022338,	13.614057,	13.287018,	13.449239,	13.950747,
13.239134,	13.82321,	15.080262,	14.85966,	14.7805395,	15.238369,	14.749196,
14.913585,	15.181719,	15.051697,	15.065641,	15.16396,	15.484345,	16.493923,
15.633442,	15.96033,	15.388061)
prior <- create_prior_list(lnormprior(0,0.5,0,100),
normprior( 0, 1,-100,100),#normprior(1,2,-18,18),
lnormprior(0 ,1,0,100),
lnormprior(log(1.5),0.2,1,18),
lnormprior(0,0.75),
normprior(0,2,-18,18));
hill_p <- create_continuous_prior(prior,"hill","normal-ncv")
doses	<- c(0,	0,	0,	0,	0.156,	0.156,	0.156,	0.3125,	0.3125,	0.3125,
0.625,	0.625,	0.625,	1.25,	1.25,	1.25,	2.5,	2.5,	2.5,	5,5,
5,	5,	10,	10,	10,	10,	20,	20,	20,	20)
doses <- doses/20
scale = mean(y[doses==0])
dataF = list(N = length(y),
scale = scale,
y = y,
x = doses)
t<-single_continuous_fit(as.matrix(doses),as.matrix(y),prior = hill_p,fit_type = "mcmc",samples = 75000)
#r<-single_continuous_fit(as.matrix(doses),as.matrix(y),model_type = ,fit_type = "mcmc",samples = 50000)
stan.fit <- stan(file="con_hill_stan_ncv.stan",data=dataF,iter = 20000)
B = extract(stan.fit)
library(rstan)
library(ToxicR)
y <- c(13.184152,12.8906975,12.359554,13.073001,12.861814,12.967434,12.88052,
13.249991,	12.992931,	13.022338,	13.614057,	13.287018,	13.449239,	13.950747,
13.239134,	13.82321,	15.080262,	14.85966,	14.7805395,	15.238369,	14.749196,
14.913585,	15.181719,	15.051697,	15.065641,	15.16396,	15.484345,	16.493923,
15.633442,	15.96033,	15.388061)
prior <- create_prior_list(lnormprior(0,0.5,0,100),
normprior( 0, 1,-100,100),#normprior(1,2,-18,18),
lnormprior(0 ,1,0,100),
lnormprior(log(1.5),0.2,1,18),
lnormprior(0,0.75),
normprior(0,2,-18,18));
hill_p <- create_continuous_prior(prior,"hill","normal-ncv")
doses	<- c(0,	0,	0,	0,	0.156,	0.156,	0.156,	0.3125,	0.3125,	0.3125,
0.625,	0.625,	0.625,	1.25,	1.25,	1.25,	2.5,	2.5,	2.5,	5,5,
5,	5,	10,	10,	10,	10,	20,	20,	20,	20)
doses <- doses/20
scale = mean(y[doses==0])
dataF = list(N = length(y),
scale = scale,
y = y,
x = doses)
t<-single_continuous_fit(as.matrix(doses),as.matrix(y),prior = hill_p,fit_type = "mcmc",samples = 75000)
#r<-single_continuous_fit(as.matrix(doses),as.matrix(y),model_type = ,fit_type = "mcmc",samples = 50000)
stan.fit <- stan(file="con_hill_stan_ncv.stan",data=dataF,iter = 20000)
B = extract(stan.fit)
quantile(t$mcmc_result$PARM_samples[,4],c(0.05,0.25,0.5,0.75,0.95))
quantile(B$d,c(0.05,0.25,0.5,0.75,0.95))
plot(t)
t<-single_continuous_fit(as.matrix(doses),as.matrix(y),prior = hill_p,fit_type = "laplace",samples = 75000)
plot(# Mon Jul 19 21:14:58 2021 ------------------------------
)
plot(t)
library(rstan)
library(ToxicR)
y <- c(13.184152,12.8906975,12.359554,13.073001,12.861814,12.967434,12.88052,
13.249991,	12.992931,	13.022338,	13.614057,	13.287018,	13.449239,	13.950747,
13.239134,	13.82321,	15.080262,	14.85966,	14.7805395,	15.238369,	14.749196,
14.913585,	15.181719,	15.051697,	15.065641,	15.16396,	15.484345,	16.493923,
15.633442,	15.96033,	15.388061)
prior <- create_prior_list(lnormprior(0,0.5,0,100),
normprior( 0, 1,-100,100),#normprior(1,2,-18,18),
lnormprior(0 ,1,0,100),
lnormprior(log(1.5),0.5,1,18),
lnormprior(0,0.75),
normprior(0,2,-18,18));
hill_p <- create_continuous_prior(prior,"hill","normal-ncv")
doses	<- c(0,	0,	0,	0,	0.156,	0.156,	0.156,	0.3125,	0.3125,	0.3125,
0.625,	0.625,	0.625,	1.25,	1.25,	1.25,	2.5,	2.5,	2.5,	5,5,
5,	5,	10,	10,	10,	10,	20,	20,	20,	20)
doses <- doses/20
scale = mean(y[doses==0])
dataF = list(N = length(y),
scale = scale,
y = y,
x = doses)
t<-single_continuous_fit(as.matrix(doses),as.matrix(y),prior = hill_p,fit_type = "laplace",samples = 75000)
#r<-single_continuous_fit(as.matrix(doses),as.matrix(y),model_type = ,fit_type = "mcmc",samples = 50000)
stan.fit <- stan(file="con_hill_stan_ncv.stan",data=dataF,iter = 20000)
B = extract(stan.fit)
quantile(B$d,c(0.05,0.25,0.5,0.75,0.95))
quantile(t$mcmc_result$PARM_samples[,4],c(0.05,0.25,0.5,0.75,0.95))
t<-single_continuous_fit(as.matrix(doses),as.matrix(y),prior = hill_p,fit_type = "laplace",samples = 75000)
t<-single_continuous_fit(as.matrix(doses),as.matrix(y),prior = hill_p,fit_type = "mcmc",samples = 75000)
quantile(B$d,c(0.05,0.25,0.5,0.75,0.95))
quantile(t$mcmc_result$PARM_samples[,4],c(0.05,0.25,0.5,0.75,0.95))
