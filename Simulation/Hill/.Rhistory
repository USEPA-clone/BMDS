bmd_sd_no[i] <- uniroot(bb,c(0,100))$root
}
var_ln <- c(0.0777,0.0777,0.107302,0.107302)
for(i in 1:4){
mean = X%*%t(iS[i,,drop=F]) + bkg[i]
isM <- splinefun(doses,mean)
var_m <- expm1(var_ln[i]^2)*exp(2*log(isM(0))+var_ln[i]^2)
bb  <-  function(d){abs(isM(d)-isM(0))-sqrt(var_m)}
bmd_sd_ln[i] <- uniroot(bb,c(0,100))$root
}
BMD_IS <- as.data.frame(t(rbind(bmd_sd_no,bmd_sd_ln,bmd_sd_ig)))
names(BMD_IS) <- c("Normal","Log-Normal","Inverse-Gaussian")
row.names(BMD_IS) <- c("I-Spline Simulation 1","I-Spline Simulation 2",
"I-Spline Simulation 3","I-Spline Simulation 4")
kable(BMD_IS,digits=2)
?kable
doses <- seq(0,100,0.5)
bkg = c(10.58,10.58,481,481)
lambda <- c(902.3632,902.3632,78643.17,78643.17)
bmd_sd_ig <- c(0,0,0,0)
bmd_sd_no <- c(0,0,0,0)
bmd_sd_ln <- c(0,0,0,0)
i = 1
var_ig <- c(NA,NA,NA,NA)
for(i in 1:8){
mean = cont_hill_f(as.numeric(hill[i,]),doses)
isM <- splinefun(doses,mean)
var_ig[i] <- isM(0)^3/lambda[i]
if (isM(0) < isM(100)){
sdDif = sqrt(var_ig[i])
}else{
sdDif = sqrt(var_ig[i])
}
bb  <-  function(d){abs(isM(d)-isM(0))-sdDif}
bmd_sd_ig[i] <- uniroot(bb,c(0,100))$root
}
doses
mean
i
mean = cont_hill_f(as.numeric(hill[i,]),doses)
isM <- splinefun(doses,mean)
var_ig[i] <- isM(0)^3/lambda[i]
if (isM(0) < isM(100)){
sdDif = sqrt(var_ig[i])
}else{
sdDif = sqrt(var_ig[i])
}
isM(0)
sdDif
lambda <- c(78643.17,78643.17,78643.17,78643.17,902.3632,902.3632,902.3632,902.3632)
bmd_sd_ig <- c(0,0,0,0)
bmd_sd_no <- c(0,0,0,0)
bmd_sd_ln <- c(0,0,0,0)
i = 1
var_ig <- c(NA,NA,NA,NA)
for(i in 1:8){
mean = cont_hill_f(as.numeric(hill[i,]),doses)
isM <- splinefun(doses,mean)
var_ig[i] <- isM(0)^3/lambda[i]
if (isM(0) < isM(100)){
sdDif = sqrt(var_ig[i])
}else{
sdDif = sqrt(var_ig[i])
}
bb  <-  function(d){abs(isM(d)-isM(0))-sdDif}
bmd_sd_ig[i] <- uniroot(bb,c(0,100))$root
}
doses <- seq(0,100,0.5)
bkg = c(10.58,10.58,481,481)
lambda <- c(78643.17,78643.17,78643.17,78643.17,902.3632,902.3632,902.3632,902.3632)
bmd_sd_ig <- c(0,0,0,0)
bmd_sd_no <- c(0,0,0,0)
bmd_sd_ln <- c(0,0,0,0)
i = 1
var_ig <- c(NA,NA,NA,NA)
for(i in 1:8){
mean = cont_hill_f(as.numeric(hill[i,]),doses)
isM <- splinefun(doses,mean)
var_ig[i] <- isM(0)^3/lambda[i]
if (isM(0) < isM(100)){
sdDif = sqrt(var_ig[i])
}else{
sdDif = sqrt(var_ig[i])
}
bb  <-  function(d){abs(isM(d)-isM(0))-sdDif}
bmd_sd_ig[i] <- uniroot(bb,c(0,100))$root
}
var_no <- var_ig
for(i in 1:8){
mean =  cont_hill_f(as.numeric(hill[i,]),doses)
isM <- splinefun(doses,mean)
if (isM(0) < isM(100)){
sdDif = sqrt(var_no[i])
}else{
sdDif = sqrt(var_no[i])
}
bb  <-  function(d){abs(isM(d)-isM(0))-sdDif}
bmd_sd_no[i] <- uniroot(bb,c(0,100))$root
}
var_ln <- c(0.0777,0.0777,0.107302,0.107302)
for(i in 1:8){
mean =  cont_hill_f(as.numeric(hill[i,]),doses)
isM <- splinefun(doses,mean)
var_m <- expm1(var_ln[i]^2)*exp(2*log(isM(0))+var_ln[i]^2)
bb  <-  function(d){abs(isM(d)-isM(0))-sqrt(var_m)}
bmd_sd_ln[i] <- uniroot(bb,c(0,100))$root
}
doses <- seq(0,100,0.5)
bkg = c(10.58,10.58,481,481)
lambda <- c(78643.17,78643.17,78643.17,78643.17,902.3632,902.3632,902.3632,902.3632)
bmd_sd_ig <- c(0,0,0,0)
bmd_sd_no <- c(0,0,0,0)
bmd_sd_ln <- c(0,0,0,0)
i = 1
var_ig <- c(NA,NA,NA,NA)
for(i in 1:8){
mean = cont_hill_f(as.numeric(hill[i,]),doses)
isM <- splinefun(doses,mean)
var_ig[i] <- isM(0)^3/lambda[i]
if (isM(0) < isM(100)){
sdDif = sqrt(var_ig[i])
}else{
sdDif = sqrt(var_ig[i])
}
bb  <-  function(d){abs(isM(d)-isM(0))-sdDif}
bmd_sd_ig[i] <- uniroot(bb,c(0,100))$root
}
var_no <- var_ig
for(i in 1:8){
mean =  cont_hill_f(as.numeric(hill[i,]),doses)
isM <- splinefun(doses,mean)
if (isM(0) < isM(100)){
sdDif = sqrt(var_no[i])
}else{
sdDif = sqrt(var_no[i])
}
bb  <-  function(d){abs(isM(d)-isM(0))-sdDif}
bmd_sd_no[i] <- uniroot(bb,c(0,100))$root
}
var_ln <- c(0.107302,0.107302,0.107302,0.107302,0.0777,0.0777,0.0777,0.0777)
for(i in 1:8){
mean =  cont_hill_f(as.numeric(hill[i,]),doses)
isM <- splinefun(doses,mean)
var_m <- expm1(var_ln[i]^2)*exp(2*log(isM(0))+var_ln[i]^2)
bb  <-  function(d){abs(isM(d)-isM(0))-sqrt(var_m)}
bmd_sd_ln[i] <- uniroot(bb,c(0,100))$root
}
BMD_IS <- as.data.frame(t(rbind(bmd_sd_no,bmd_sd_ln,bmd_sd_ig)))
names(BMD_IS) <- c("Normal","Log-Normal","Inverse-Gaussian")
row.names(BMD_IS) <- c("Hill Simulation 1","Hill Simulation 2",
"Hill Simulation 3","Hill Simulation 4",
"Hill Simulation 5","Hill Simulation 6",
"hill Simulation 7","Hill Simulation 8")
kable(BMD_IS,digits=2,caption ="Hill Simulation BMDs for standard deviation BMD across
the three different distributional conditions.")
doses <- seq(0,100,0.5)
X <- iSpline(doses,knots=seq(30,90,20),intercept=TRUE)
bkg = c(10.58,10.58,481,481)
lambda <- c(902.3632,902.3632,78643.17,78643.17)
bmd_sd_ig <- c(0,0,0,0)
bmd_sd_no <- c(0,0,0,0)
bmd_sd_ln <- c(0,0,0,0)
i = 1
var_ig <- c(NA,NA,NA,NA)
for(i in 1:4){
mean = X%*%t(iS[i,,drop=F]) + bkg[i]
isM <- splinefun(doses,mean)
var_ig[i] <- isM(0)^3/lambda[i]
if (isM(0) < isM(100)){
temp <- qinvgauss(0.95,isM(0),lambda[i])
bb  <-  function(d){(pinvgauss(temp,isM(d),lambda[i]) - 0.95)/0.05-0.01}
}else{
temp <- qinvgauss(0.05,isM(0),lambda[i])
bb  <-  function(d){(0.95 - pinvgauss(temp,isM(d),lambda[i]))/0.05-0.01}
}
bmd_sd_ig[i] <- uniroot(bb,c(0,100))$root
}
i
temp
(pinvgauss(temp,isM(d),lambda[i])
)
(pinvgauss(temp,isM(100),lambda[i]))
(pinvgauss(temp,isM(50),lambda[i]))
temp <- qinvgauss(0.95,isM(0),lambda[i])
bb  <-  function(d){(pinvgauss(temp,isM(d),lambda[i]) - 0.05)/0.95-0.01}
bmd_sd_ig[i] <- uniroot(bb,c(0,100))$root
pinvgauss(temp,isM(100),lambda[i])
temp <- qinvgauss(0.95,isM(0),lambda[i])
bb  <-  function(d){(pinvgauss(temp,isM(d),lambda[i]) - 0.95)/0.05-0.01}
bmd_sd_ig[i] <- uniroot(bb,c(0,100))$root
bb(0)
bb(100)
temp <- qinvgauss(0.95,isM(0),lambda[i])
bb  <-  function(d){(0.95 - pinvgauss(temp,isM(d),lambda[i]) )/0.05-0.01}
bmd_sd_ig[i] <- uniroot(bb,c(0,100))$root
bmd_sd_ig
temp <- qinvgauss(0.95,isM(0),lambda[i])
bb  <-  function(d){(0.95 - pinvgauss(temp,isM(d),lambda[i]) )/0.95-0.01}
bmd_sd_ig[i] <- uniroot(bb,c(0,100))$root
bmd_sd_ig
i
temp <- qinvgauss(0.95,isM(0),lambda[i])
bb  <-  function(d){((1-pinvgauss(temp,isM(d),lambda[i])) -0.05)/0.95-0.01}
uniroot(bb,c(0,100))$root
for(i in 1:4){
mean = X%*%t(iS[i,,drop=F]) + bkg[i]
isM <- splinefun(doses,mean)
var_ig[i] <- isM(0)^3/lambda[i]
if (isM(0) < isM(100)){
temp <- qinvgauss(0.95,isM(0),lambda[i])
bb  <-  function(d){((1-pinvgauss(temp,isM(d),lambda[i])) -0.05)/0.95-0.01}
}else{
temp <- qinvgauss(0.05,isM(0),lambda[i])
bb  <-  function(d){((pinvgauss(temp,isM(d),lambda[i]))- 0.05)/0.95-0.01}
}
bmd_sd_ig[i] <- uniroot(bb,c(0,100))$root
}
bmd_sd_ig
var_no <- var_ig
for(i in 1:4){
mean = X%*%t(iS[i,,drop=F]) + bkg[i]
isM <- splinefun(doses,mean)
if (isM(0) < isM(100)){
temp <- qnorm(0.95,isM(0),var_no[i])
bb  <-  function(d){((1-pnorm(temp,isM(d),sqrt(var_no[i]))) -0.05)/0.95-0.01}
}else{
temp <- qnorm(0.05,isM(0),lambda[i])
bb  <-  function(d){((pnorm(temp,isM(d),var_no[i]))- 0.05)/0.95-0.01}
}
bmd_sd_no[i] <- uniroot(bb,c(0,100))$root
}
for(i in 1:4){
mean = X%*%t(iS[i,,drop=F]) + bkg[i]
isM <- splinefun(doses,mean)
if (isM(0) < isM(100)){
temp <- qnorm(0.95,isM(0),sqrt(var_no[i]))
bb  <-  function(d){((1-pnorm(temp,isM(d),sqrt(var_no[i]))) -0.05)/0.95-0.01}
}else{
temp <- qnorm(0.05,isM(0),lambda[i])
bb  <-  function(d){(pnorm(temp,isM(d),sqrt(var_no[i]))- 0.05)/0.95-0.01}
}
bmd_sd_no[i] <- uniroot(bb,c(0,100))$root
}
temp
var_no <- var_ig
var_no
for(i in 1:4){
mean = X%*%t(iS[i,,drop=F]) + bkg[i]
isM <- splinefun(doses,mean)
if (isM(0) < isM(100)){
temp <- qnorm(0.95,isM(0),sqrt(var_no[i]))
bb  <-  function(d){((1-pnorm(temp,isM(d),sqrt(var_no[i]))) -0.05)/0.95-0.01}
}else{
temp <- qnorm(0.05,isM(0),lambda[i])
bb  <-  function(d){(pnorm(temp,isM(d),sqrt(var_no[i]))- 0.05)/0.95-0.01}
}
bmd_sd_no[i] <- uniroot(bb,c(0,100))$root
}
temp
isM(0)
var_no
for(i in 1:4){
mean = X%*%t(iS[i,,drop=F]) + bkg[i]
isM <- splinefun(doses,mean)
if (isM(0) < isM(100)){
temp <- qnorm(0.95,isM(0),sqrt(var_no[i]))
bb  <-  function(d){((1-pnorm(temp,isM(d),sqrt(var_no[i]))) -0.05)/0.95-0.01}
}else{
temp <- qnorm(0.05,isM(0),sqrt(var_no[i]))
bb  <-  function(d){(pnorm(temp,isM(d),sqrt(var_no[i]))- 0.05)/0.95-0.01}
}
bmd_sd_no[i] <- uniroot(bb,c(0,100))$root
}
bmd_sd_no
var_ln <- c(0.0777,0.0777,0.107302,0.107302)
var_ln <- var_ln*var_ln
for(i in 1:4){
mean = X%*%t(iS[i,,drop=F]) + bkg[i]
isM <- splinefun(doses,mean)
if (isM(0) < isM(100)){
temp <- qlnorm(0.95,isM(0),sqrt(var_ln[i]))
bb  <-  function(d){((1-plnorm(temp,isM(d),sqrt(var_ln[i]))) -0.05)/0.95-0.01}
}else{
temp <- qnorm(0.05,isM(0),sqrt(var_ln[i]))
bb  <-  function(d){(plnorm(temp,isM(d),sqrt(var_ln[i]))- 0.05)/0.95-0.01}
}
bmd_sd_ln[i] <- uniroot(bb,c(0,100))$root
}
var_ln <- c(0.0777,0.0777,0.107302,0.107302)
var_ln <- var_ln*var_ln
for(i in 1:4){
mean = X%*%t(iS[i,,drop=F]) + bkg[i]
isM <- splinefun(doses,mean)
if (isM(0) < isM(100)){
temp <- qlnorm(0.95,log(isM(0)),sqrt(var_ln[i]))
bb  <-  function(d){((1-plnorm(temp,log(isM(d)),sqrt(var_ln[i]))) -0.05)/0.95-0.01}
}else{
temp <- qnorm(0.05,isM(0),sqrt(var_ln[i]))
bb  <-  function(d){(plnorm(temp,log(isM(d)),sqrt(var_ln[i]))- 0.05)/0.95-0.01}
}
bmd_sd_ln[i] <- uniroot(bb,c(0,100))$root
}
var_ln
isM(1)
bb(0)
temp
ii
isM(0)
temp <- qlnorm(0.95,log(isM(0)),sqrt(var_ln[i]))
temp
for(i in 1:4){
mean = X%*%t(iS[i,,drop=F]) + bkg[i]
isM <- splinefun(doses,mean)
if (isM(0) < isM(100)){
temp <- qlnorm(0.95,log(isM(0)),sqrt(var_ln[i]))
bb  <-  function(d){((1-plnorm(temp,log(isM(d)),sqrt(var_ln[i]))) -0.05)/0.95-0.01}
}else{
temp <- qnorm(0.05,log(isM(0)),sqrt(var_ln[i]))
bb  <-  function(d){(plnorm(temp,log(isM(d)),sqrt(var_ln[i]))- 0.05)/0.95-0.01}
}
bmd_sd_ln[i] <- uniroot(bb,c(0,100))$root
}
ii
i
bmd_sd_ln[i]
bmd_sd_ln
temp
isM(0)
i
mean = X%*%t(iS[i,,drop=F]) + bkg[i]
isM <- splinefun(doses,mean)
isM(0)
isM(0) < isM(100)
temp <- qnorm(0.05,log(isM(0)),sqrt(var_ln[i]))
temp
for(i in 1:4){
mean = X%*%t(iS[i,,drop=F]) + bkg[i]
isM <- splinefun(doses,mean)
if (isM(0) < isM(100)){
temp <- qlnorm(0.95,log(isM(0)),sqrt(var_ln[i]))
bb  <-  function(d){((1-plnorm(temp,log(isM(d)),sqrt(var_ln[i]))) -0.05)/0.95-0.01}
}else{
temp <- qlnorm(0.05,log(isM(0)),sqrt(var_ln[i]))
bb  <-  function(d){(plnorm(temp,log(isM(d)),sqrt(var_ln[i]))- 0.05)/0.95-0.01}
}
bmd_sd_ln[i] <- uniroot(bb,c(0,100))$root
}
doses <- seq(0,100,0.5)
X <- iSpline(doses,knots=seq(30,90,20),intercept=TRUE)
bkg = c(10.58,10.58,481,481)
lambda <- c(902.3632,902.3632,78643.17,78643.17)
bmd_sd_ig <- c(0,0,0,0)
bmd_sd_no <- c(0,0,0,0)
bmd_sd_ln <- c(0,0,0,0)
i = 1
var_ig <- c(NA,NA,NA,NA)
for(i in 1:4){
mean = X%*%t(iS[i,,drop=F]) + bkg[i]
isM <- splinefun(doses,mean)
var_ig[i] <- isM(0)^3/lambda[i]
if (isM(0) < isM(100)){
temp <- qinvgauss(0.95,isM(0),lambda[i])
bb  <-  function(d){((1-pinvgauss(temp,isM(d),lambda[i])) -0.05)/0.95-0.01}
}else{
temp <- qinvgauss(0.05,isM(0),lambda[i])
bb  <-  function(d){((pinvgauss(temp,isM(d),lambda[i]))- 0.05)/0.95-0.01}
}
bmd_sd_ig[i] <- uniroot(bb,c(0,100))$root
}
var_no <- var_ig
for(i in 1:4){
mean = X%*%t(iS[i,,drop=F]) + bkg[i]
isM <- splinefun(doses,mean)
if (isM(0) < isM(100)){
temp <- qnorm(0.95,isM(0),sqrt(var_no[i]))
bb  <-  function(d){((1-pnorm(temp,isM(d),sqrt(var_no[i]))) -0.05)/0.95-0.01}
}else{
temp <- qnorm(0.05,isM(0),sqrt(var_no[i]))
bb  <-  function(d){(pnorm(temp,isM(d),sqrt(var_no[i]))- 0.05)/0.95-0.01}
}
bmd_sd_no[i] <- uniroot(bb,c(0,100))$root
}
var_ln <- c(0.0777,0.0777,0.107302,0.107302)
var_ln <- var_ln*var_ln
for(i in 1:4){
mean = X%*%t(iS[i,,drop=F]) + bkg[i]
isM <- splinefun(doses,mean)
if (isM(0) < isM(100)){
temp <- qlnorm(0.95,log(isM(0)),sqrt(var_ln[i]))
bb  <-  function(d){((1-plnorm(temp,log(isM(d)),sqrt(var_ln[i]))) -0.05)/0.95-0.01}
}else{
temp <- qlnorm(0.05,log(isM(0)),sqrt(var_ln[i]))
bb  <-  function(d){(plnorm(temp,log(isM(d)),sqrt(var_ln[i]))- 0.05)/0.95-0.01}
}
bmd_sd_ln[i] <- uniroot(bb,c(0,100))$root
}
BMD_IS <- as.data.frame(t(rbind(bmd_sd_no,bmd_sd_ln,bmd_sd_ig)))
names(BMD_IS) <- c("Normal","Log-Normal","Inverse-Gaussian")
row.names(BMD_IS) <- c("I-Spline Simulation 1","I-Spline Simulation 2",
"I-Spline Simulation 3","I-Spline Simulation 4")
kable(BMD_IS,digits=2,caption ="I-Spline Simulation BMDs for Hybrid BMD across
the three different distributional conditions.")
setwd("~/Documents/r_software/RBMDS/Simulation/Hill")
load("~/Documents/r_software/RBMDS/Simulation/Hill/Hill_invGaussian_e_4_sim_1.Rdata")
library(ToxicR)
y = sim_data[1,]
model_list  = data.frame(model_list = c(rep("hill",3),rep("exp-3",3),rep("exp-5",3),rep("power",2)),
distribution_list =  c(rep(c("normal","normal-ncv","lognormal"),3),"normal",
"normal-ncv"))
model_list2 = data.frame(model_list = c(rep("hill",1),rep("exp-3",1),rep("exp-5",1),rep("power",1)),
distribution_list =  c(rep(c("normal"),4)))
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
plot(AA)
AA$Individual_Model_1$fitted_model$parameters
qnorm(0.025,507.23,exp(0.5*8.497789))
td <- seq(0,100,1)
r  <- cont_hill_f(AA$Individual_Model_1$fitted_model$parameters,td)
r
qnorm(0.025,507.23,exp(0.5*8.497789))
pnorm(369.977,r,exp(0.5*8.497789))
library(ToxicR)
y = sim_data[1,]
model_list  = data.frame(model_list = c(rep("hill",3),rep("exp-3",3),rep("exp-5",3),rep("power",2)),
distribution_list =  c(rep(c("normal","normal-ncv","lognormal"),3),"normal",
"normal-ncv"))
model_list2 = data.frame(model_list = c(rep("hill",1),rep("exp-3",1),rep("exp-5",1),rep("power",1)),
distribution_list =  c(rep(c("normal"),4)))
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
ma_continuous
ma_continuous_fit()
ma_continuous_fit
library(ToxicR)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
library(ToxicR)
y = sim_data[1,]
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
library(ToxicR)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
model_list2
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
AA_l
AA_l$Individual_Model_1$covariance
chol(AA_l$Individual_Model_1$covariance)
GG <- single_continuous_fit(as.matrix(doses),as.matrix(y),model = hill, distribution = "normal",
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
GG <- single_continuous_fit(as.matrix(doses),as.matrix(y),model = "hill", distribution = "normal",
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
GG <- single_continuous_fit(as.matrix(doses),as.matrix(y),model_type = "hill", distribution = "normal",
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025,sstat = F)
GG$mcmc_result$PARM_samples
K = GG$mcmc_result$PARM_samples
View(K)
plot(K$V2)
plot(as.numeric(K$V2))
plot(K[,2]
)
library(ToxicR)
GG <- single_continuous_fit(as.matrix(doses),as.matrix(y),model_type = "hill", distribution = "normal",
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025,sstat = F)
K = GG$mcmc_result$PARM_samples
plot(K[,2])
library(ToxicR)
GG <- single_continuous_fit(as.matrix(doses),as.matrix(y),model_type = "hill", distribution = "normal",
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025,sstat = F)
K = GG$mcmc_result$PARM_samples
plot(K)
plot(K[,2])
GG$bmd
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
AA$bmd
AA$Individual_Model_1$fitted_model
AA$posterior_probs
AA$Individual_Model_2$bmd
K = AA$Individual_Model_1$mcmc_result$PARM_samples
plot(K[,1])
plot(K[,2])
plot(K[,3])
plot(K[,4])
plot(K[,5])
K = AA$Individual_Model_1$mcmc_result$BMD_samples
plot(K)
K
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025,sstat=F)
GG <- single_continuous_fit(as.matrix(doses),as.matrix(y),model_type = "hill", distribution = "normal",
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025,sstat = F)
plot(GG$mcmc_result$BMD_samples)
plot(AA$Individual_Model_1$mcmc_result$BMD_samples)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
AA_l
plot(GG)
library(ToxicR)
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
AA$Individual_Model_1$mcmc_result$BMD_samples
GG <- single_continuous_fit(as.matrix(doses),as.matrix(y),model_type = "hill", distribution = "normal",
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025,sstat = F)
plot(GG$mcmc_result$BMD_samples)
