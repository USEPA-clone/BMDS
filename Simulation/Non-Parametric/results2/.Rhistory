BMR = 0.9
}else{
BMR = 0.1
}
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'rel',BMR = BMR ,samples = 75000)
AA$bmd
plot(AA)
load("~/Documents/r_software/RBMDS/Simulation/Exp-5/Exp-5_lognormal_g_5_sim_7.Rdata")
y = sim_data[10,]
fit <- lm(y ~ doses)
if (fit[[1]][2] < 0){
BMR = 0.9
}else{
BMR = 0.1
}
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'rel',BMR = BMR ,samples = 75000)
AA$bmd
plot(AA)
y = sim_data[15,]
fit <- lm(y ~ doses)
if (fit[[1]][2] < 0){
BMR = 0.9
}else{
BMR = 0.1
}
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'rel',BMR = BMR ,samples = 75000)
AA$bmd
plot(AA)
y = sim_data[25,]
fit <- lm(y ~ doses)
if (fit[[1]][2] < 0){
BMR = 0.9
}else{
BMR = 0.1
}
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'rel',BMR = BMR ,samples = 75000)
AA$bmd
plot(AA)
y = sim_data[35,]
fit <- lm(y ~ doses)
if (fit[[1]][2] < 0){
BMR = 0.9
}else{
BMR = 0.1
}
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'rel',BMR = BMR ,samples = 75000)
AA$bmd
plot(AA)
load("~/Documents/r_software/RBMDS/Simulation/Exp-5/Exp-5_normal_g_5_sim_7.Rdata")
y = sim_data[35,]
fit <- lm(y ~ doses)
if (fit[[1]][2] < 0){
BMR = 0.9
}else{
BMR = 0.1
}
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'rel',BMR = BMR ,samples = 75000)
AA$bmd
plot(AA)
load("~/Documents/r_software/RBMDS/Simulation/Exp-5/results2/simrun_Exp-5_lognormal_e_5_sim_7.Rdata")
BMD_result_REL_ML1_lapl[,2]
mean(BMD_result_REL_ML1_lapl[,2] < 36.79)
mean(BMD_result_REL_ML1_mcmc[,2] < 36.79)
load("~/Documents/r_software/RBMDS/Simulation/Exp-5/results2/simrun_Exp-5_lognormal_e_5_sim_7.Rdata")
relD <- c(	12.73	,	12.73	,	12.73	,
31.83	,	31.83	,	31.83	,
63.67	,	63.67	,	63.67	,
6.37	,	6.37	,	6.37	,
7.36	,	7.36	,	7.36	,
18.39	,	18.39	,	18.39	,
36.79	,	36.79	,	36.79	,
3.68	,	3.68	,	3.68	)
BMD.RD <- matrix(relD,nrow=8,ncol=3)
setwd("~/Documents/r_software/RBMDS/Simulation/Exp-5/results2")
files <- dir()
ivgSims = grepl("invGaussian",files)
norSims = grepl("normal",files)
lnorSims = grepl("lognormal",files)
cond1 = grepl("sim_1",files)
cond2 = grepl("sim_2",files)
cond3 = grepl("sim_3",files)
cond4 = grepl("sim_4",files)
cond5 = grepl("sim_5",files)
cond6 = grepl("sim_6",files)
cond7 = grepl("sim_7",files)
cond8 = !(cond1 | cond2 | cond3 | cond4 | cond5 | cond6 | cond7)
is_geom = grepl("_g_",files)
is_4    = grepl("_4_",files)
lap1.rd <- array(NA,c(8,3,4))
lap2.rd <- array(NA,c(8,3,4))
mcmc1.rd <- array(NA,c(8,3,4))
mcmc2.rd <- array(NA,c(8,3,4))
for (ii in 1:length(files)){
load(files[ii])
simtype = 1
if (lnorSims[ii] == TRUE){
simtype = 2
}
if (ivgSims[ii] == TRUE){
simtype = 3
}
even = 1
if (is_geom[ii] == TRUE){
even = 3
}
if (!is_4[ii] == TRUE){ # for 5 dose groups
even = even + 1
}
#simulation condition
scond = which(c(cond1[ii],cond2[ii],cond3[ii],cond4[ii],cond5[ii],cond6[ii],cond7[ii],cond8[ii]))
true_BMD.rd = BMD.RD[scond,simtype]
if(scond == 7){
print(files[ii])
}
lap1.rd[scond,simtype,even]  = mean(BMD_result_REL_ML1_lapl[,2] < true_BMD.rd,na.rm=TRUE)
lap2.rd[scond,simtype,even]  = mean(BMD_result_REL_ML2_lapl[,2] < true_BMD.rd,na.rm=TRUE)
mcmc1.rd[scond,simtype,even] = mean(BMD_result_REL_ML1_mcmc[,2]  < true_BMD.rd,na.rm=TRUE)
mcmc2.rd[scond,simtype,even] = mean(BMD_result_REL_ML2_mcmc[,2]  < true_BMD.rd,na.rm=TRUE)
}
RD_lno_G_5 <- cbind(lap1.rd[,2,4],lap2.rd[,2,4],mcmc1.rd[,2,4],mcmc2.rd[,2,4])*100
RD_lno_G_5
relD <- c(	12.73	,	12.73	,	12.73	,
31.83	,	31.83	,	31.83	,
63.67	,	63.67	,	63.67	,
6.37	,	6.37	,	6.37	,
7.36	,	7.36	,	7.36	,
18.39	,	18.39	,	18.39	,
36.79	,	36.79	,	36.79	,
3.68	,	3.68	,	3.68	)
BMD.RD <- matrix(relD,nrow=8,ncol=3,byrow = TRUE)
setwd("~/Documents/r_software/RBMDS/Simulation/Exp-5/results2")
files <- dir()
ivgSims = grepl("invGaussian",files)
norSims = grepl("normal",files)
lnorSims = grepl("lognormal",files)
cond1 = grepl("sim_1",files)
cond2 = grepl("sim_2",files)
cond3 = grepl("sim_3",files)
cond4 = grepl("sim_4",files)
cond5 = grepl("sim_5",files)
cond6 = grepl("sim_6",files)
cond7 = grepl("sim_7",files)
cond8 = !(cond1 | cond2 | cond3 | cond4 | cond5 | cond6 | cond7)
is_geom = grepl("_g_",files)
is_4    = grepl("_4_",files)
lap1.rd <- array(NA,c(8,3,4))
lap2.rd <- array(NA,c(8,3,4))
mcmc1.rd <- array(NA,c(8,3,4))
mcmc2.rd <- array(NA,c(8,3,4))
for (ii in 1:length(files)){
load(files[ii])
simtype = 1
if (lnorSims[ii] == TRUE){
simtype = 2
}
if (ivgSims[ii] == TRUE){
simtype = 3
}
even = 1
if (is_geom[ii] == TRUE){
even = 3
}
if (!is_4[ii] == TRUE){ # for 5 dose groups
even = even + 1
}
#simulation condition
scond = which(c(cond1[ii],cond2[ii],cond3[ii],cond4[ii],cond5[ii],cond6[ii],cond7[ii],cond8[ii]))
true_BMD.rd = BMD.RD[scond,simtype]
if(scond == 7){
print(files[ii])
}
lap1.rd[scond,simtype,even]  = mean(BMD_result_REL_ML1_lapl[,2] < true_BMD.rd,na.rm=TRUE)
lap2.rd[scond,simtype,even]  = mean(BMD_result_REL_ML2_lapl[,2] < true_BMD.rd,na.rm=TRUE)
mcmc1.rd[scond,simtype,even] = mean(BMD_result_REL_ML1_mcmc[,2]  < true_BMD.rd,na.rm=TRUE)
mcmc2.rd[scond,simtype,even] = mean(BMD_result_REL_ML2_mcmc[,2]  < true_BMD.rd,na.rm=TRUE)
}
library(xtable)
RD_no_G_4 <- cbind(lap1.rd[,1,3],lap2.rd[,1,3],mcmc1.rd[,1,3],mcmc2.rd[,1,3])*100
RD_no_G_5 <- cbind(lap1.rd[,1,4],lap2.rd[,1,4],mcmc1.rd[,1,4],mcmc2.rd[,1,4])*100
RD_no_E_4 <- cbind(lap1.rd[,1,1],lap2.rd[,1,1],mcmc1.rd[,1,1],mcmc2.rd[,1,1])*100
RD_no_E_5 <- cbind(lap1.rd[,1,2],lap2.rd[,1,2],mcmc1.rd[,1,2],mcmc2.rd[,1,2])*100
RD_lno_G_4 <- cbind(lap1.rd[,2,3],lap2.rd[,2,3],mcmc1.rd[,2,3],mcmc2.rd[,2,3])*100
RD_lno_G_5 <- cbind(lap1.rd[,2,4],lap2.rd[,2,4],mcmc1.rd[,2,4],mcmc2.rd[,2,4])*100
RD_lno_E_4 <- cbind(lap1.rd[,2,1],lap2.rd[,2,1],mcmc1.rd[,2,1],mcmc2.rd[,2,1])*100
RD_lno_E_5 <- cbind(lap1.rd[,2,2],lap2.rd[,2,2],mcmc1.rd[,2,2],mcmc2.rd[,2,2])*100
RD_ig_G_4 <- cbind(lap1.rd[,3,3],lap2.rd[,3,3],mcmc1.rd[,3,3],mcmc2.rd[,3,3])*100
RD_ig_G_5 <- cbind(lap1.rd[,3,4],lap2.rd[,3,4],mcmc1.rd[,3,4],mcmc2.rd[,3,4])*100
RD_ig_E_4 <- cbind(lap1.rd[,3,1],lap2.rd[,3,1],mcmc1.rd[,3,1],mcmc2.rd[,3,1])*100
RD_ig_E_5 <- cbind(lap1.rd[,3,2],lap2.rd[,3,2],mcmc1.rd[,3,2],mcmc2.rd[,3,2])*100
RD_lno_E_5
xtable(cbind(RD_no_E_4,RD_no_G_4), digits = 1)
xtable(cbind(RD_no_E_5,RD_no_G_5), digits = 1)
xtable(cbind(RD_lno_E_4,RD_lno_G_4), digits = 1)
xtable(cbind(RD_lno_E_5,RD_lno_G_5), digits = 1)
xtable(cbind(RD_ig_E_4,RD_ig_G_4), digits = 1)
xtable(cbind(RD_ig_E_5,RD_ig_G_5), digits = 1)
relD <- c(	64.86	,	64.86	,	64.86	,
14.27	,	14.27	,	14.27	,
9.15	,	9.15	,	9.15	,
27.79	,	27.79	,	27.79	)
BMD.RD <- matrix(relD,nrow=4,ncol=3,byrow = TRUE)
setwd("~/Documents/r_software/RBMDS/Simulation/Non-Parametric/results2")
files <- dir()
ivgSims = grepl("invGaussian",files)
norSims = grepl("normal",files)
lnorSims = grepl("lognormal",files)
cond1 = grepl("sim_1",files)
cond2 = grepl("sim_2",files)
cond3 = grepl("sim_3",files)
cond4 = !(cond1 | cond2 | cond3)
is_geom = grepl("_g_",files)
is_4    = grepl("_4_",files)
lap1.rd <- array(NA,c(4,3,4))
lap2.rd <- array(NA,c(4,3,4))
mcmc1.rd <- array(NA,c(4,3,4))
mcmc2.rd <- array(NA,c(4,3,4))
for (ii in 1:length(files)){
load(files[ii])
simtype = 1
if (lnorSims[ii] == TRUE){
simtype = 2
}
if (ivgSims[ii] == TRUE){
simtype = 3
}
even = 1
if (is_geom[ii] == TRUE){
even = 3
}
if (!is_4[ii] == TRUE){ # for 5 dose groups
even = even + 1
}
#simulation condition
scond = which(c(cond1[ii],cond2[ii],cond3[ii],cond4[ii]))
true_BMD.rd = BMD.RD[scond,simtype]
lap1.rd[scond,simtype,even]  = mean(BMD_result_REL_ML1_lapl[,2] < true_BMD.rd,na.rm=TRUE)
lap2.rd[scond,simtype,even]  = mean(BMD_result_REL_ML2_lapl[,2] < true_BMD.rd,na.rm=TRUE)
mcmc1.rd[scond,simtype,even] = mean(BMD_result_REL_ML1_mcmc[,2]  < true_BMD.rd,na.rm=TRUE)
mcmc2.rd[scond,simtype,even] = mean(BMD_result_REL_ML2_mcmc[,2]  < true_BMD.rd,na.rm=TRUE)
}
relD <- c(	64.86	,	64.86	,	64.86	,
14.27	,	14.27	,	14.27	,
9.15	,	9.15	,	9.15	,
27.79	,	27.79	,	27.79	)
BMD.RD <- matrix(relD,nrow=4,ncol=3,byrow = TRUE)
setwd("~/Documents/r_software/RBMDS/Simulation/Non-Parametric/results2")
files <- dir()
ivgSims = grepl("invGaussian",files)
norSims = grepl("normal",files)
lnorSims = grepl("lognormal",files)
cond1 = grepl("sim_1",files)
cond2 = grepl("sim_2",files)
cond3 = grepl("sim_3",files)
cond4 = !(cond1 | cond2 | cond3)
is_geom = grepl("_g_",files)
is_4    = grepl("_4_",files)
lap1.rd <- array(NA,c(4,3,4))
lap2.rd <- array(NA,c(4,3,4))
mcmc1.rd <- array(NA,c(4,3,4))
mcmc2.rd <- array(NA,c(4,3,4))
for (ii in 1:length(files)){
load(files[ii])
simtype = 1
if (lnorSims[ii] == TRUE){
simtype = 2
}
if (ivgSims[ii] == TRUE){
simtype = 3
}
even = 1
if (is_geom[ii] == TRUE){
even = 3
}
if (!is_4[ii] == TRUE){ # for 5 dose groups
even = even + 1
}
#simulation condition
scond = which(c(cond1[ii],cond2[ii],cond3[ii],cond4[ii]))
true_BMD.rd = BMD.RD[scond,simtype]
lap1.rd[scond,simtype,even]  = mean(BMD_result_REL_ML1_lapl[,2] < true_BMD.rd,na.rm=TRUE)
lap2.rd[scond,simtype,even]  = mean(BMD_result_REL_ML2_lapl[,2] < true_BMD.rd,na.rm=TRUE)
mcmc1.rd[scond,simtype,even] = mean(BMD_result_REL_ML1_mcmc[,2]  < true_BMD.rd,na.rm=TRUE)
mcmc2.rd[scond,simtype,even] = mean(BMD_result_REL_ML2_mcmc[,2]  < true_BMD.rd,na.rm=TRUE)
}
library(xtable)
RD_no_G_4 <- cbind(lap1.rd[,1,3],lap2.rd[,1,3],mcmc1.rd[,1,3],mcmc2.rd[,1,3])*100
RD_no_G_5 <- cbind(lap1.rd[,1,4],lap2.rd[,1,4],mcmc1.rd[,1,4],mcmc2.rd[,1,4])*100
RD_no_E_4 <- cbind(lap1.rd[,1,1],lap2.rd[,1,1],mcmc1.rd[,1,1],mcmc2.rd[,1,1])*100
RD_no_E_5 <- cbind(lap1.rd[,1,2],lap2.rd[,1,2],mcmc1.rd[,1,2],mcmc2.rd[,1,2])*100
RD_lno_G_4 <- cbind(lap1.rd[,2,3],lap2.rd[,2,3],mcmc1.rd[,2,3],mcmc2.rd[,2,3])*100
RD_lno_G_5 <- cbind(lap1.rd[,2,4],lap2.rd[,2,4],mcmc1.rd[,2,4],mcmc2.rd[,2,4])*100
RD_lno_E_4 <- cbind(lap1.rd[,2,1],lap2.rd[,2,1],mcmc1.rd[,2,1],mcmc2.rd[,2,1])*100
RD_lno_E_5 <- cbind(lap1.rd[,2,2],lap2.rd[,2,2],mcmc1.rd[,2,2],mcmc2.rd[,2,2])*100
RD_ig_G_4 <- cbind(lap1.rd[,3,3],lap2.rd[,3,3],mcmc1.rd[,3,3],mcmc2.rd[,3,3])*100
RD_ig_G_5 <- cbind(lap1.rd[,3,4],lap2.rd[,3,4],mcmc1.rd[,3,4],mcmc2.rd[,3,4])*100
RD_ig_E_4 <- cbind(lap1.rd[,3,1],lap2.rd[,3,1],mcmc1.rd[,3,1],mcmc2.rd[,3,1])*100
RD_ig_E_5 <- cbind(lap1.rd[,3,2],lap2.rd[,3,2],mcmc1.rd[,3,2],mcmc2.rd[,3,2])*100
xtable(cbind(RD_no_E_4,RD_no_G_4), digits = 1)
xtable(cbind(RD_no_E_5,RD_no_G_5), digits = 1)
xtable(cbind(RD_lno_E_4,RD_lno_G_4), digits = 1)
xtable(cbind(RD_lno_E_5,RD_lno_G_5), digits = 1)
xtable(cbind(RD_ig_E_4,RD_ig_G_4), digits = 1)
xtable(cbind(RD_ig_E_5,RD_ig_G_5), digits = 1)
relD <- c(	64.86	,	64.86	,	64.86	,
14.27	,	14.27	,	14.27	,
9.15	,	9.15	,	9.15	,
27.79	,	27.79	,	27.79	)
BMD.RD <- matrix(relD,nrow=4,ncol=3,byrow = TRUE)
setwd("~/Documents/r_software/RBMDS/Simulation/Non-Parametric/results2")
files <- dir()
ivgSims = grepl("invGaussian",files)
norSims = grepl("normal",files)
lnorSims = grepl("lognormal",files)
cond1 = grepl("sim_1",files)
cond2 = grepl("sim_2",files)
cond3 = grepl("sim_3",files)
cond4 = !(cond1 | cond2 | cond3)
is_geom = grepl("_g_",files)
is_4    = grepl("_4_",files)
lap1.rd <- array(NA,c(4,3,4))
lap2.rd <- array(NA,c(4,3,4))
mcmc1.rd <- array(NA,c(4,3,4))
mcmc2.rd <- array(NA,c(4,3,4))
for (ii in 1:length(files)){
load(files[ii])
simtype = 1
if (lnorSims[ii] == TRUE){
simtype = 2
}
if (ivgSims[ii] == TRUE){
simtype = 3
}
even = 1
if (is_geom[ii] == TRUE){
even = 3
}
if (!is_4[ii] == TRUE){ # for 5 dose groups
even = even + 1
}
#simulation condition
scond = which(c(cond1[ii],cond2[ii],cond3[ii],cond4[ii]))
true_BMD.rd = BMD.RD[scond,simtype]
lap1.rd[scond,simtype,even]  = mean(BMD_result_REL_ML1_lapl[,2] < true_BMD.rd,na.rm=TRUE)
lap2.rd[scond,simtype,even]  = mean(BMD_result_REL_ML2_lapl[,2] < true_BMD.rd,na.rm=TRUE)
mcmc1.rd[scond,simtype,even] = mean(BMD_result_REL_ML1_mcmc[,2]  < true_BMD.rd,na.rm=TRUE)
mcmc2.rd[scond,simtype,even] = mean(BMD_result_REL_ML2_mcmc[,2]  < true_BMD.rd,na.rm=TRUE)
}
library(xtable)
RD_no_G_4 <- cbind(lap1.rd[,1,3],lap2.rd[,1,3],mcmc1.rd[,1,3],mcmc2.rd[,1,3])*100
RD_no_G_5 <- cbind(lap1.rd[,1,4],lap2.rd[,1,4],mcmc1.rd[,1,4],mcmc2.rd[,1,4])*100
RD_no_E_4 <- cbind(lap1.rd[,1,1],lap2.rd[,1,1],mcmc1.rd[,1,1],mcmc2.rd[,1,1])*100
RD_no_E_5 <- cbind(lap1.rd[,1,2],lap2.rd[,1,2],mcmc1.rd[,1,2],mcmc2.rd[,1,2])*100
RD_lno_G_4 <- cbind(lap1.rd[,2,3],lap2.rd[,2,3],mcmc1.rd[,2,3],mcmc2.rd[,2,3])*100
RD_lno_G_5 <- cbind(lap1.rd[,2,4],lap2.rd[,2,4],mcmc1.rd[,2,4],mcmc2.rd[,2,4])*100
RD_lno_E_4 <- cbind(lap1.rd[,2,1],lap2.rd[,2,1],mcmc1.rd[,2,1],mcmc2.rd[,2,1])*100
RD_lno_E_5 <- cbind(lap1.rd[,2,2],lap2.rd[,2,2],mcmc1.rd[,2,2],mcmc2.rd[,2,2])*100
RD_ig_G_4 <- cbind(lap1.rd[,3,3],lap2.rd[,3,3],mcmc1.rd[,3,3],mcmc2.rd[,3,3])*100
RD_ig_G_5 <- cbind(lap1.rd[,3,4],lap2.rd[,3,4],mcmc1.rd[,3,4],mcmc2.rd[,3,4])*100
RD_ig_E_4 <- cbind(lap1.rd[,3,1],lap2.rd[,3,1],mcmc1.rd[,3,1],mcmc2.rd[,3,1])*100
RD_ig_E_5 <- cbind(lap1.rd[,3,2],lap2.rd[,3,2],mcmc1.rd[,3,2],mcmc2.rd[,3,2])*100
xtable(cbind(RD_no_E_4,RD_no_G_4), digits = 1)
xtable(cbind(RD_no_E_5,RD_no_G_5), digits = 1)
xtable(cbind(RD_lno_E_4,RD_lno_G_4), digits = 1)
xtable(cbind(RD_lno_E_5,RD_lno_G_5), digits = 1)
xtable(cbind(RD_ig_E_4,RD_ig_G_4), digits = 1)
xtable(cbind(RD_ig_E_5,RD_ig_G_5), digits = 1)
library(ToxicR)
o1 <- c(0.1,0.05, -9999)
o2 <- c(1,2)
mData <- matrix(c(0,    0,100,
50,   5,100,
100, 30,100,
150, 65,100,
200, 90,100),nrow=5,ncol=3,byrow=T)
mData <- matrix(c(0,    5,100,
50,   10,100,
100, 33,100,
150, 67,100,
200, 99,100),nrow=5,ncol=3,byrow=T)
#mData <- matrix(c(12,   1,5,
#                  15,   2,6,
#                  18,   3,7,
#                  21,   4,8),nrow=4,ncol=3,byrow=T)
Q = ma_dichotomous_fit(mData[,1],mData[,2],mData[,3],
fit_type = "mcmc")
plot(Q)
library(ggplot2)
library(ToxicR)
o1 <- c(0.1,0.05, -9999)
o2 <- c(1,2)
mData <- matrix(c(0,    0,100,
50,   5,100,
100, 30,100,
150, 65,100,
200, 90,100),nrow=5,ncol=3,byrow=T)
mData <- matrix(c(0,    5,100,
50,   10,100,
100, 33,100,
150, 67,100,
200, 99,100),nrow=5,ncol=3,byrow=T)
#mData <- matrix(c(12,   1,5,
#                  15,   2,6,
#                  18,   3,7,
#                  21,   4,8),nrow=4,ncol=3,byrow=T)
Q = ma_dichotomous_fit(mData[,1],mData[,2],mData[,3],
fit_type = "mcmc")
plot(Q)
mData <- matrix(c(0,    5,100,
50,   10,100,
100, 33,100,
150, 45,100,
200, 55,100),nrow=5,ncol=3,byrow=T)
#mData <- matrix(c(12,   1,5,
#                  15,   2,6,
#                  18,   3,7,
#                  21,   4,8),nrow=4,ncol=3,byrow=T)
Q = ma_dichotomous_fit(mData[,1],mData[,2],mData[,3],
fit_type = "mcmc")
plot(Q)
mData <- matrix(c(0,    5,100,
50,   3,100,
100, 33,100,
150, 45,100,
200, 55,100),nrow=5,ncol=3,byrow=T)
#mData <- matrix(c(12,   1,5,
#                  15,   2,6,
#                  18,   3,7,
#                  21,   4,8),nrow=4,ncol=3,byrow=T)
Q = ma_dichotomous_fit(mData[,1],mData[,2],mData[,3],
fit_type = "mcmc")
#R = single_dichotomous_fit(mData[,1],mData[,2],mData[,3],model_type = "multistage",degree = 4,fit_type = "mle")
plot(Q)
doses = c( 0, 0, 0, 0, 18, 18, 18, 18, 18, 20, 20, 20, 20, 30, 30, 30, 30, 35, 35, 35, 35, 40, 40, 40, 40, 40);
Y = c(39,38.4,36.3,37.1, 40.2,45.3,42.1,38.3,35.9, 42.5,45.2,40.1,39.8, 50.1,53.4,48.2,52.1, 56.1,50.4,53.2,55.2, 35.1,39.1,36.3,32.9,33.7);
Y[doses==20] = Y[doses==20] + 5
library(ToxicR)
B  <- single_continuous_fit(as.matrix(doses),as.matrix(Y),model_type = "FUNL", distribution="normal-ncv",fit_type = "mcmc",BMR = 1,sstat = F)
doses = c( 0, 0, 0, 0, 18, 18, 18, 18, 18, 20, 20, 20, 20, 30, 30, 30, 30, 35, 35, 35, 35, 40, 40, 40, 40, 40);
Y = c(39,38.4,36.3,37.1, 40.2,45.3,42.1,38.3,35.9, 42.5,45.2,40.1,39.8, 50.1,53.4,48.2,52.1, 56.1,50.4,53.2,55.2, 35.1,39.1,36.3,32.9,33.7);
Y[doses==20] = Y[doses==20] + 5
library(ToxicR)
B  <- single_continuous_fit(as.matrix(doses),as.matrix(Y),model_type = "FUNL", distribution="normal-ncv",fit_type = "mcmc",BMR = 1,sstat = F)
plot(B)
B  <- single_continuous_fit(as.matrix(doses),as.matrix(Y),model_type = "FUNL", distribution="normal-ncv",fit_type = "mcmc",BMR = 1,sstat = F,samples = 100000)
plot(B)
B  <- single_continuous_fit(as.matrix(doses),as.matrix(Y),model_type = "FUNL", distribution="normal-ncv",fit_type = "mcmc",BMR = 1,sstat = F,samples = 150000)
plot(B)
B  <- single_continuous_fit(as.matrix(doses),as.matrix(Y),model_type = "FUNL", distribution="normal-ncv",fit_type = "mcmc",BMR = 1,sstat = F,samples = 150000)
plot(B$mcmc_result$BMD_samples)
B  <- single_continuous_fit(as.matrix(doses),as.matrix(Y),model_type = "FUNL", distribution="normal-ncv",fit_type = "mcmc",BMR = 1,sstat = F,samples = 150000)
plot(B$mcmc_result$BMD_samples)
B  <- single_continuous_fit(as.matrix(doses),as.matrix(Y),model_type = "FUNL", distribution="normal-ncv",fit_type = "mcmc",BMR = 1,sstat = F,samples = 150000)
plot(B)
B  <- single_continuous_fit(as.matrix(doses),as.matrix(Y),model_type = "FUNL", distribution="normal-ncv",fit_type = "mcmc",BMR = 1,sstat = F,samples = 200000)
plot(b)
plot(B)
plot(B$mcmc_result$BMD_samples)
plot(B$mcmc_result$PARM_samples[,1])
plot(B$mcmc_result$PARM_samples[,2])
plot(B$mcmc_result$PARM_samples[seq(1000,20000,10),2])
plot(B$mcmc_result$PARM_samples[seq(1000,20000,10),3])
plot(B$mcmc_result$PARM_samples[seq(1000,20000,10),4])
plot(B$mcmc_result$PARM_samples[seq(1000,20000,10),5])
plot(B$mcmc_result$PARM_samples[seq(1000,20000,10),6])
plot(B$mcmc_result$PARM_samples[seq(1000,20000,10),7])
library(ToxicR)
v1 <- c(13.184152,12.8906975,12.359554,13.073001,12.861814,12.967434,12.88052,
13.249991,	12.992931,	13.022338,	13.614057,	13.287018,	13.449239,	13.950747,
13.239134,	13.82321,	15.080262,	14.85966,	14.7805395,	15.238369,	14.749196,
14.913585,	15.181719,	15.051697,	15.065641,	15.16396,	15.484345,	16.493923,
15.633442,	15.96033,	15.388061)
prior <- create_prior_list(lnormprior(0,1,-100,100),
normprior( 0, 1,-100,100),#normprior(1,2,-18,18),
lnormprior(0 ,1,0,100),
lnormprior(0,1,0,18),
normprior(0,2,-18,18));
library(readr)
PFOA_Liver <- read_table2("~/Documents/PFOA_Liver.txt",
col_names = FALSE)
doses	<- c(0,	0,	0,	0,	0.156,	0.156,	0.156,	0.3125,	0.3125,	0.3125,
0.625,	0.625,	0.625,	1.25,	1.25,	1.25,	2.5,	2.5,	2.5,	5,5,
5,	5,	10,	10,	10,	10,	20,	20,	20,	20)
#B <- single_continuous_fit(as.matrix(doses),as.matrix(v1),model_type = "hill", fit_type = "laplace",sstat = F)
#BB <- single_continuous_fit(as.matrix(doses),as.matrix(v1),model_type = "hill", distribution="normal",fit_type = "mle",sstat = F,)
library(dplyr)
temp <- PFOA_Liver %>% filter(X1 == "BDNF_32390")
v1 <- as.numeric(temp[2:length(temp)])
B  <- single_continuous_fit(as.matrix(doses),as.matrix(v1),model_type = "polynomial", distribution="normal-ncv",fit_type = "laplace",BMR = 1,sstat = F)
C  <- single_continuous_fit(as.matrix(doses),as.matrix(v1),model_type = "hill", distribution="normal",fit_type = "mle",BMR = 3,sstat = F)
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(v1),BMR = 1)
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(v1),model_list=model_list,
fit_type = "laplace",BMR = 1,samples = 75000)
plot(AA)
model_list  = data.frame(model_list = c(rep("hill",2),rep("exp-3",2),rep("exp-5",2),rep("power",2)),
distribution_list =  c(c("normal","normal-ncv"),rep(c("normal","normal-ncv"),2),
"normal", "normal-ncv"))
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(v1),model_list=model_list,
fit_type = "laplace",BMR = 1,samples = 75000)
plot(AA)
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(v1),model_list=model_list,
fit_type = "mcmc",BMR = 1,samples = 75000)
plot(AA)
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(v1),model_list=model_list,
fit_type = "laplace",BMR = 1,samples = 75000)
plot(AA)
AA$posterior_probs
