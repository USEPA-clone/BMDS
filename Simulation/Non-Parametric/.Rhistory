Q      <- B + rnorm(nrow(coords))
plot(x,B)
cov    <- 2*exp(-1/500*as.matrix(dist(coords,upper=T,diag=T)*dist(coords,upper=T,diag=T))+1e-8*diag(nrow(coords)))
plot(x,B)
A      <- t(chol(cov))
B      <- matrix(A%*%rnorm(nrow(coords)),26,26)
plot(x,B)
Q      <- B + rnorm(nrow(coords))
plot(x,Q)
plot_ly(z=B,x=temp,y=temp, type = "surface")
starting <- list("phi"=2, "sigma.sq"=2, "tau.sq"=1)
tuning <- list("phi"=0.5, "sigma.sq"=0.5, "tau.sq"=0.5)
priors <- list("phi.Unif"=c(0.005, 10), "sigma.sq.IG"=c(2, 5), "tau.sq.IG"=c(2, 1))
starting <- list("phi"=2, "sigma.sq"=2, "tau.sq"=1)
tuning <- list("phi"=0.5, "sigma.sq"=0.5, "tau.sq"=0.5)
priors <- list("phi.Unif"=c(0.005, 10), "sigma.sq.IG"=c(2, 5), "tau.sq.IG"=c(2, 1))
burnin = 100
thin  = 10
n.samples = 20000
nngp <- spNNGP(as.numeric(Q)~1, coords=coords, starting=starting, method="response", n.neighbors=15,
tuning=tuning, priors=priors, cov.model="gaussian", fit.rep=TRUE,
n.samples=n.samples, sub.sample=list(start=burnin+1, thin=thin))
y.hat <- predict(nngp, X.0=matrix(1,nrow(coords)), coords.0=coords)
plot(x,y.hat)
plot(x,rowMeans(y.hat$p.y.0))
lines(x,B)
plot(x,rowMeans(y.hat$p.y.0),type='l')
lines(x,B)
nngp <- spNNGP(as.numeric(Q)~1, coords=coords, starting=starting, method="response", n.neighbors=30,
tuning=tuning, priors=priors, cov.model="gaussian", fit.rep=TRUE,
n.samples=n.samples, sub.sample=list(start=burnin+1, thin=thin))
y.hat <- predict(nngp, X.0=matrix(1,nrow(coords)), coords.0=coords)
B.hat     <- matrix(rowMeans(y.hat$p.y.0),26,26)
#plot_ly(z=B,x=temp,y=temp, type = "surface")
plot_ly(z=B.hat,x=temp,y=temp, type = "surface")
plot(x,rowMeans(y.hat$p.y.0),type='l')
lines(x,B,col=2)
x
length(x)
x/15
length(x)15
length(x):15
length(x)
676/15
idx = seq(20,676,by=15)
idx
idx = seq(15,676,by=15)
idx
idx = seq(19,676,by=15)
idx
idx = seq(17,676,by=15)
idx
idx_min = c(1,seq(17,676,by=15))
idx_min = c(1,seq(17,676,by=15))
idx_max = c(idx_min[2:length(idx_max)],676)
idx_min[2:length(idx_max)]
idx_min = c(1,seq(17,676,by=15))
idx_max = c(idx_min[2:length(idx_min)],676)
cbind(idx_min,idx_max)
abline(v=seq(15,350,15))
plot(x,rowMeans(y.hat$p.y.0),type='l')
lines(x,B,col=2)
abline(v=seq(14.5,350,15))
plot(x,rowMeans(y.hat$p.y.0),type='l')
lines(x,B,col=2)
abline(v=seq(14.5,350,15),lty=2)
x[1:30]
plot(x,rowMeans(y.hat$p.y.0),type='l')
lines(x,B,col=2)
idx_min = c(1,seq(17,676,by=15))
idx_max = c(idx_min[2:length(idx_min)],676)
abline(v=seq(15,350,15),lty=2)
nngp <- spNNGP(as.numeric(Q)~1, coords=coords, starting=starting, method="response", n.neighbors=15,
tuning=tuning, priors=priors, cov.model="gaussian", fit.rep=TRUE,
n.samples=n.samples, sub.sample=list(start=burnin+1, thin=thin))
y.hat <- predict(nngp, X.0=matrix(1,nrow(coords)), coords.0=coords)
B.hat     <- matrix(rowMeans(y.hat$p.y.0),26,26)
#plot_ly(z=B,x=temp,y=temp, type = "surface")
plot_ly(z=B.hat,x=temp,y=temp, type = "surface")
plot(x,rowMeans(y.hat$p.y.0),type='l')
lines(x,B,col=2)
nngp <- spNNGP(as.numeric(Q)~1, coords=coords, starting=starting, method="response", n.neighbors=15,
tuning=tuning, priors=priors, cov.model="exp", fit.rep=TRUE,
n.samples=n.samples, sub.sample=list(start=burnin+1, thin=thin))
y.hat <- predict(nngp, X.0=matrix(1,nrow(coords)), coords.0=coords)
B.hat     <- matrix(rowMeans(y.hat$p.y.0),26,26)
#plot_ly(z=B,x=temp,y=temp, type = "surface")
plot_ly(z=B.hat,x=temp,y=temp, type = "surface")
plot(x,rowMeans(y.hat$p.y.0),type='l')
lines(x,B,col=2)
nngp <- spNNGP(as.numeric(Q)~1, coords=coords, starting=starting, method="response", n.neighbors=15,
tuning=tuning, priors=priors, cov.model="exponential", fit.rep=TRUE,
n.samples=n.samples, sub.sample=list(start=burnin+1, thin=thin))
y.hat <- predict(nngp, X.0=matrix(1,nrow(coords)), coords.0=coords)
B.hat     <- matrix(rowMeans(y.hat$p.y.0),26,26)
#plot_ly(z=B,x=temp,y=temp, type = "surface")
plot_ly(z=B.hat,x=temp,y=temp, type = "surface")
plot(x,rowMeans(y.hat$p.y.0),type='l')
lines(x,B,col=2)
xs <- sort(x)
uniqu idx_max
unique(idx_max)
length(unique(idx_max))
idxs <- c(rep(1,17),rep(2:45,each=15))
idxs
length(idxs)
idxs <- c(rep(1,16),rep(2:45,each=15))
length(idxs)
x      <- matrix(seq(0,25,1),ncol=26,nrow=26)
y      <- matrix(seq(0,25,1),ncol=26,nrow=26,byrow = T)
x      <- seq(0.5,338,0.5)
y      <- y *0
coords <- cbind(as.numeric(x),as.numeric(y))
cov    <- 2*exp(-1/500*as.matrix(dist(coords,upper=T,diag=T)*dist(coords,upper=T,diag=T)))+1e-8*diag(nrow(coords))
A      <- t(chol(cov))
B      <- matrix(A%*%rnorm(nrow(coords)),26,26)
Q      <- B + rnorm(nrow(coords))
temp <- seq(0,26,1)
library(plotly)
starting <- list("phi"=2, "sigma.sq"=2, "tau.sq"=1)
tuning <- list("phi"=0.5, "sigma.sq"=0.5, "tau.sq"=0.5)
priors <- list("phi.Unif"=c(0.005, 10), "sigma.sq.IG"=c(2, 5), "tau.sq.IG"=c(2, 1))
burnin = 100
thin  = 10
n.samples = 20000
nngp <- spNNGP(as.numeric(Q)~1, coords=coords, starting=starting, method="response", n.neighbors=15,
tuning=tuning, priors=priors, cov.model="gaussian", fit.rep=TRUE,
n.samples=n.samples, sub.sample=list(start=burnin+1, thin=thin))
y.hat <- predict(nngp, X.0=matrix(1,nrow(coords)), coords.0=coords)
B.hat     <- matrix(rowMeans(y.hat$p.y.0),26,26)
#plot_ly(z=B,x=temp,y=temp, type = "surface")
plot_ly(z=B.hat,x=temp,y=temp, type = "surface")
plot(x,rowMeans(y.hat$p.y.0),type='l')
lines(x,B,col=2)
sqdist = as.matrix(dist(idxs,upper=T,diag = T))
sqdist = sqdist * sqdist
for (ii in unique(idxs)){
for (jj in unique(idxs)){
if (ii == jj){
covMat[idxs == ii, idxs == jj]  = exp(-1/500*sqdist[idxs == ii, idxs == jj] ) + 1e-8*diag(sum(idxs==ii))
}
}
}
covMat = matrix(NA,nrow(sqdist),ncol(sqdist))
for (ii in unique(idxs)){
for (jj in unique(idxs)){
if (ii == jj){
covMat[idxs == ii, idxs == jj]  = exp(-1/500*sqdist[idxs == ii, idxs == jj] ) + 1e-8*diag(sum(idxs==ii))
}
}
}
View(covMat)
idx_min = c(1,seq(17,676,by=15))
idx_max = c(idx_min[2:length(idx_min)],676)
xs <- sort(x)
idxs <- c(rep(1,16),rep(2:45,each=15))
sqdist = as.matrix(dist(idxs,upper=T,diag = T))
sqdist = sqdist * sqdist
covMat = matrix(NA,nrow(sqdist),ncol(sqdist))
for (ii in unique(idxs)){
for (jj in unique(idxs)){
if (ii == jj){
covMat[idxs == ii, idxs == jj]  = exp(-1/500*sqdist[idxs == ii, idxs == jj] ) + 1e-8*diag(sum(idxs==ii))
}
}
}
ii
exp(-1/500*sqdist[idxs == ii, idxs == jj]
)
sqdist[idxs == ii, idxs == jj]
sqdist = as.matrix(dist(idxs,upper=T,diag = T))
sqdist[1:10,1:10]
idxs
sqdist = as.matrix(dist(xs,upper=T,diag = T))
sqdist = sqdist * sqdist
covMat = matrix(NA,nrow(sqdist),ncol(sqdist))
for (ii in unique(idxs)){
for (jj in unique(idxs)){
if (ii == jj){
covMat[idxs == ii, idxs == jj]  = exp(-1/500*sqdist[idxs == ii, idxs == jj] ) + 1e-8*diag(sum(idxs==ii))
}
}
}
sqdist[1:10,1:10]
exp(-1/500*sqdist[idxs == ii, idxs == jj]
)
idx_min = c(1,seq(17,676,by=15))
idx_max = c(idx_min[2:length(idx_min)],676)
xs <- sort(x)
idxs <- c(rep(1,16),rep(2:45,each=15))
sqdist = as.matrix(dist(xs,upper=T,diag = T))
sqdist = sqdist * sqdist
for (ii in unique(idxs)){
blocks[[ii]] <- data.frame( C = exp(-1/500*sqdist[idxs == ii, idxs == ii] ) + 1e-8*diag(sum(idxs==ii)),
C_inv = solve(exp(-1/500*sqdist[idxs == ii, idxs == ii] ) + 1e-8*diag(sum(idxs==ii))))
}
blocks <- list()
for (ii in unique(idxs)){
blocks[[ii]] <- data.frame( C = exp(-1/500*sqdist[idxs == ii, idxs == ii] ) + 1e-8*diag(sum(idxs==ii)),
C_inv = solve(exp(-1/500*sqdist[idxs == ii, idxs == ii] ) + 1e-8*diag(sum(idxs==ii))))
}
for (ii in unique(idxs)){
for (jj in unique(idxs)){
if (ii == jj){
covMat[idxs == ii, idxs == jj]  = blocks[[ii]]$C
}
}
}
blocks[[1]]
blocks <- list()
for (ii in unique(idxs)){
blocks[[ii]] <- list( C = exp(-1/500*sqdist[idxs == ii, idxs == ii] ) + 1e-8*diag(sum(idxs==ii)),
C_inv = solve(exp(-1/500*sqdist[idxs == ii, idxs == ii] ) + 1e-8*diag(sum(idxs==ii))))
}
covMat = matrix(NA,nrow(sqdist),ncol(sqdist))
for (ii in unique(idxs)){
for (jj in unique(idxs)){
if (ii == jj){
covMat[idxs == ii, idxs == jj]  = blocks[[ii]]$C
}
}
}
blocks[[1]]$C
print(covMat[1:30,1:30],2)
library(ToxicR)
library(ggplot2)
prior <- create_prior_list(normprior(0,1,-100,100),
normprior(0,10,-1e4,1e4),
lnormprior(0,1,0,100),
lnormprior(log(2),0.4215,0,18),
#lnormprior(0, 0.75,0,100),
normprior(0, 10,-100,100));
bob = create_continuous_prior(prior,"exp-5","lognormal")
v1 <- c(13.184152,12.8906975,12.359554,13.073001,12.861814,12.967434,12.88052,
13.249991,	12.992931,	13.022338,	13.614057,	13.287018,	13.449239,	13.950747,
13.239134,	13.82321,	15.080262,	14.85966,	14.7805395,	15.238369,	14.749196,
14.913585,	15.181719,	15.051697,	15.065641,	15.16396,	15.484345,	16.493923,
15.633442,	15.96033,	15.388061)
prior <- create_prior_list(lnormprior(0,1,-100,100),
normprior( 0, 1,-100,100),#normprior(1,2,-18,18),
lnormprior(0 ,1,0,100),
lnormprior(0,1,0,18),
normprior(0,2,-18,18));
library(readr)
PFOA_Liver <- read_table("~/Documents/PFOA_Liver.txt",
col_names = FALSE)
doses	<- c(0,	0,	0,	0,	0.156,	0.156,	0.156,	0.3125,	0.3125,	0.3125,
0.625,	0.625,	0.625,	1.25,	1.25,	1.25,	2.5,	2.5,	2.5,	5,5,
5,	5,	10,	10,	10,	10,	20,	20,	20,	20)
system.time({BB <- single_continuous_fit(as.matrix(doses),as.matrix(v1),distribution = "normal-ncv",model_type = "hill", fit_type = "laplace",isFast = T)})
library(dplyr)
library(ggplot2)
library(ToxicR)
temp <- PFOA_Liver %>% filter(X1 == "ABCG2_32656")
v1 <- as.numeric(temp[2:length(temp)])
kk <- ma_continuous_fit(as.matrix(doses),as.matrix(v1),fit_type = "laplace",BMR =1.5)
plot(kk)
library(ToxicR)
library(ggplot2)
prior <- create_prior_list(normprior(0,1,-100,100),
normprior(0,10,-1e4,1e4),
lnormprior(0,1,0,100),
lnormprior(log(2),0.4215,0,18),
#lnormprior(0, 0.75,0,100),
normprior(0, 10,-100,100));
bob = create_continuous_prior(prior,"exp-5","lognormal")
v1 <- c(13.184152,12.8906975,12.359554,13.073001,12.861814,12.967434,12.88052,
13.249991,	12.992931,	13.022338,	13.614057,	13.287018,	13.449239,	13.950747,
13.239134,	13.82321,	15.080262,	14.85966,	14.7805395,	15.238369,	14.749196,
14.913585,	15.181719,	15.051697,	15.065641,	15.16396,	15.484345,	16.493923,
15.633442,	15.96033,	15.388061)
prior <- create_prior_list(lnormprior(0,1,-100,100),
normprior( 0, 1,-100,100),#normprior(1,2,-18,18),
lnormprior(0 ,1,0,100),
lnormprior(0,1,0,18),
normprior(0,2,-18,18));
library(readr)
PFOA_Liver <- read_table("~/Documents/PFOA_Liver.txt",
col_names = FALSE)
doses	<- c(0,	0,	0,	0,	0.156,	0.156,	0.156,	0.3125,	0.3125,	0.3125,
0.625,	0.625,	0.625,	1.25,	1.25,	1.25,	2.5,	2.5,	2.5,	5,5,
5,	5,	10,	10,	10,	10,	20,	20,	20,	20)
system.time({BB <- single_continuous_fit(as.matrix(doses),as.matrix(v1),distribution = "normal-ncv",model_type = "hill", fit_type = "laplace",isFast = T)})
library(dplyr)
library(ggplot2)
library(ToxicR)
temp <- PFOA_Liver %>% filter(X1 == "ABCG2_32656")
v1 <- as.numeric(temp[2:length(temp)])
kk <- ma_continuous_fit(as.matrix(doses),as.matrix(v1),fit_type = "laplace",BMR =1.5)
kk <- ma_continuous_fit(as.matrix(doses),as.matrix(v1),fit_type = "mcmc",BMR =1.5)
plot(kk)
temp <- PFOA_Liver %>% filter(X1 == "CPT1B_8373")
v1 <- as.numeric(temp[2:length(temp)])
library(readr)
PFOA_Liver <- read_table2("~/Documents/PFOA_Liver.txt",
col_names = FALSE)
temp <- PFOA_Liver %>% filter(X1 == "CPT1B_8373")
v1 <- as.numeric(temp[2:length(temp)])
kk <- ma_continuous_fit(as.matrix(doses),as.matrix(v1),fit_type = "mcmc",BMR =1.5)
plot(kk)
kk$posterior_probs
temp <- PFOA_Liver %>% filter(X1 == "AIF1_32886")
v1 <- as.numeric(temp[2:length(temp)])
kk <- ma_continuous_fit(as.matrix(doses),as.matrix(v1),fit_type = "mcmc",BMR =1.5)
plot(kk)
mData <- matrix(c(0, 2,50,
1, 2,50,
3, 10, 50,
16, 18,50,
32, 18,50,
33, 17,50),nrow=6,ncol=3,byrow=T)
system.time({C = single_dichotomous_fit(mData[,1],mData[,2],mData[,3],model_type = "hill", fit_type = "laplace")})
system.time({C = single_dichotomous_fit(mData[,1],mData[,2],mData[,3],model_type = "probit", fit_type = "laplace")})
system.time({C = single_dichotomous_fit(mData[,1],mData[,2],mData[,3],model_type = "log-probit", fit_type = "laplace")})
system.time({C = single_dichotomous_fit(mData[,1],mData[,2],mData[,3],model_type = "weibull", fit_type = "laplace")})
system.time({B = single_dichotomous_fit(mData[,1],mData[,2],mData[,3],model_type = "hill", fit_type = "mle")})
A = ma_dichotomous_fit(mData[,1],mData[,2],mData[,3],fit_type = "mcmc")
A = ma_dichotomous_fit(mData[,1],mData[,2],mData[,3],fit_type = "laplace")
plot(A)
A = ma_dichotomous_fit(mData[,1],mData[,2],mData[,3],fit_type = "mcmc")
plot(A)
setwd("~/Documents/r_software/RBMDS/Simulation")
setwd("~/Documents/r_software/RBMDS/Simulation/Non-Parametric")
library(ToxicR)
library(tidyverse)
model_list  = data.frame(model_list = c(rep("hill",2),rep("exp-3",3),rep("exp-5",3),rep("power",2)),
distribution_list =  c(c("normal","normal-ncv"),rep(c("normal","normal-ncv","lognormal"),2),
"normal", "normal-ncv"))
model_list2 = data.frame(model_list = c(rep("hill",1),rep("exp-3",1),rep("exp-5",1),rep("power",1)),
distribution_list =  c(rep(c("normal"),4)))
file_list = dir()
file_list = file_list[!(file_list %in% "results")]
#file_list = file_list[c (grep("_lognormal_",file_list), grep("_invGaussian_",file_list)) ]
options(warn=-1)
ii = 1
load(file_list[ii])
jj = 10
y = sim_data[jj,]
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
library(ToxicR)
library(tidyverse)
model_list  = data.frame(model_list = c(rep("hill",2),rep("exp-3",3),rep("exp-5",3),rep("power",2)),
distribution_list =  c(c("normal","normal-ncv"),rep(c("normal","normal-ncv","lognormal"),2),
"normal", "normal-ncv"))
model_list2 = data.frame(model_list = c(rep("hill",1),rep("exp-3",1),rep("exp-5",1),rep("power",1)),
distribution_list =  c(rep(c("normal"),4)))
file_list = dir()
file_list = file_list[!(file_list %in% "results")]
#file_list = file_list[c (grep("_lognormal_",file_list), grep("_invGaussian_",file_list)) ]
options(warn=-1)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
library(ToxicR)
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1,samples = 50000)
plot(AA)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
AA$bmd
jj
load("~/Documents/r_software/RBMDS/Simulation/Non-Parametric/results/simrun_NP_invGaussian_e_4_sim_1.Rdata")
View(BMD_result_SD_ML1_lapl)
jj = 1
y = sim_data[jj,]
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
plot(AA_l)
AA_l$posterior_probs
AA_l$bmd
jj = 2
y = sim_data[jj,]
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
AA_l$bmd
jj = 3
y = sim_data[jj,]
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
AA_l$ma_bmd
AA_l$bmd
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1,samples = 50000)
AA$bmd
jj = 4
y = sim_data[jj,]
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1,samples = 50000)
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1,samples = 50000)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
BB$bmd
AA$bmd
AA_L$BMD
AA_l$bmd
plot(AA_l)
jj = 5
y = sim_data[jj,]
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1,samples = 50000)
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1,samples = 50000)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
plot(AA)
AA$bmd
BB_l$bmd
jj = 62
y = sim_data[jj,]
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1,samples = 50000)
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1,samples = 50000)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
plot(BB_l)
plot(AA_l)
AA_l$bmd
AA$bmd
jj = 92
y = sim_data[jj,]
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1,samples = 50000)
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1,samples = 50000)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
AA_l$bmd
jj
print(sprintf("File:%d Iter:%d.",ii,jj))
file_list[1:8]
file_list[3]
ii = 3
load(file_list[ii])
for (jj in 1:10){#nrow(sim_data)){
print(sprintf("File:%d Iter:%d.",ii,jj))
###############################################################################
y = sim_data[jj,]
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
cat(sprintf(" %f  %f \n", AA_l$bmd,BB_l$bmd))
################################################################################
}
for (jj in 1:20){#nrow(sim_data)){
print(sprintf("File:%d Iter:%d.",ii,jj))
###############################################################################
y = sim_data[jj,]
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
cat(sprintf(" %f  %f \n", AA_l$bmd,BB_l$bmd))
################################################################################
}
jj = 13
y = sim_data[jj,]
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
plot(AA_l)
plot(BB_l)
AA_l
library(ToxicR)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
AA_l
plot(AA_l)
library(ToxicR)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
AA_l$posterior_probs
plot(AA_l)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1)
AA_l$bmd
AA_l$posterior_probs
plot(AA_l)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
plot(BB_l)
BB_l$posterior_probs
BB_l$Individual_Model_1$full_model
BB_l$Individual_Model_2$full_model
BB_l$Individual_Model_3$full_model
BB_l$Individual_Model_4$full_model
library(ToxicR)
ligrary(ToxicR)
library(ToxicR)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y))
BB_l
plot(BB_l)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),BMR =1)
plot(BB_l)
BB$bmd
BB_l$bmd
library(ToxicR)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),BMR =1)
BB_l$bmd
BB_l$posterior_probs
plot(BB_l)
