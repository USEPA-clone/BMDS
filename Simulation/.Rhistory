if (IS_SUFFICIENT){
plot_gg<-ggplot()+
geom_point(aes(x=as.numeric(doses),y=Response))+
geom_errorbar(aes(x=as.numeric(doses), ymin=lerror, ymax=uerror),color="black",size=0.8,width=width)+
xlim(c(min(doses),max(doses)*1.03))+
labs(x="Dose", y="Proportion",title="Continous MA fitting")+
theme_minimal()
}else{
plot_gg<-ggplot()+
geom_point(aes(x=doses,y=Response))+
xlim(c(min(doses),max(doses)*1.03))+
labs(x="Dose", y="Proportion",title="Continous MA fitting")+
theme_minimal()
}
plot_gg
plot_gg<-ggplot()+
geom_point(aes(x=as.numeric(doses),y=Response))
plot_gg
doses
Respose
Response
data_d
Resp
IS_SUFFICIENT = TRUE
mean <- data_d[,2,drop=F]
se   <- data_d[,4,drop=F]/sqrt(fit$data[,3,drop=F])
doses = data_d[,1,drop=F]
uerror <- mean+2*se
lerror <- mean-2*se
dose = c(doses,doses)
Response = c(uerror,lerror)
lm_fit = lm(mean ~ doses,weights = 1/se*se)
dose
Response
doses
doses
Response
Response
uerror
lerror
doses
Response
data_d
data_d$dose
data_d[,1]
data_d[,2]
lerror
uerror
# 06/02/21 SL update
if (IS_SUFFICIENT){
plot_gg<-ggplot()+
geom_point(aes(x=data_d[,1],y=data_d[,2]))+
geom_errorbar(aes(x=data_d[,1], ymin=lerror, ymax=uerror),color="black",size=0.8,width=width)+
xlim(c(min(doses),max(doses)*1.03))+
labs(x="Dose", y="Proportion",title="Continous MA fitting")+
theme_minimal()
}else{
plot_gg<-ggplot()+
geom_point(aes(x=doses,y=Response))+
xlim(c(min(doses),max(doses)*1.03))+
labs(x="Dose", y="Proportion",title="Continous MA fitting")+
theme_minimal()
}
plot_gg
# 06/02/21 SL update
if (IS_SUFFICIENT){
plot_gg<-ggplot()+
geom_point(aes(x=data_d[,1],y=data_d[,2]))+
geom_errorbar(aes(x=data_d[,1], ymin=lerror, ymax=uerror),color="black",size=0.8,width=width)+
xlim(c(min(doses)-0.5,max(doses)*1.03))+
labs(x="Dose", y="Proportion",title="Continous MA fitting")+
theme_minimal()
}else{
plot_gg<-ggplot()+
geom_point(aes(x=doses,y=Response))+
xlim(c(min(doses),max(doses)*1.03))+
labs(x="Dose", y="Proportion",title="Continous MA fitting")+
theme_minimal()
}
plot_gg
doses
dose
max(data_d[,1]
)
# 06/02/21 SL update
if (IS_SUFFICIENT){
plot_gg<-ggplot()+
geom_point(aes(x=data_d[,1],y=data_d[,2]))+
geom_errorbar(aes(x=data_d[,1], ymin=lerror, ymax=uerror),color="black",size=0.8,width=width)+
xlim(c(min(doses)-0.5,max(doses)*1.03))+
xlim(c(min(data_d[,1])-0.5,max(data_d[,1])*1.03))+ylim(c(-0.1,1))+
labs(x="Dose", y="Proportion",title="Continous MA fitting")+
theme_minimal()
}else{
plot_gg<-ggplot()+
geom_point(aes(x=doses,y=Response))+
xlim(c(min(doses),max(doses)*1.03))+
labs(x="Dose", y="Proportion",title="Continous MA fitting")+
theme_minimal()
}
# 06/02/21 SL update
if (IS_SUFFICIENT){
plot_gg<-ggplot()+
geom_point(aes(x=data_d[,1],y=data_d[,2]))+
geom_errorbar(aes(x=data_d[,1], ymin=lerror, ymax=uerror),color="black",size=0.8,width=width)+
xlim(c(min(data_d[,1])-0.5,max(data_d[,1])*1.03))+ylim(c(-0.1,1))+
labs(x="Dose", y="Proportion",title="Continous MA fitting")+
theme_minimal()
}else{
plot_gg<-ggplot()+
geom_point(aes(x=doses,y=Response))+
xlim(c(min(doses),max(doses)*1.03))+
labs(x="Dose", y="Proportion",title="Continous MA fitting")+
theme_minimal()
}
plot_gg
# 06/02/21 SL update
if (IS_SUFFICIENT){
plot_gg<-ggplot()+
geom_point(aes(x=data_d[,1],y=data_d[,2]))+
geom_errorbar(aes(x=data_d[,1], ymin=lerror, ymax=uerror),color="black",size=0.8,width=width)+
xlim(c(min(data_d[,1])-0.5,max(data_d[,1])*1.03))+ylim(c(-0.1,max(data_d[,2])))+
labs(x="Dose", y="Proportion",title="Continous MA fitting")+
theme_minimal()
}else{
plot_gg<-ggplot()+
geom_point(aes(x=doses,y=Response))+
xlim(c(min(doses),max(doses)*1.03))+
labs(x="Dose", y="Proportion",title="Continous MA fitting")+
theme_minimal()
}
plot_gg
# 06/02/21 SL update
if (IS_SUFFICIENT){
plot_gg<-ggplot()+
geom_point(aes(x=data_d[,1],y=data_d[,2]))+
geom_errorbar(aes(x=data_d[,1], ymin=lerror, ymax=uerror),color="black",size=0.8,width=width)+
xlim(c(min(data_d[,1])-0.5,max(data_d[,1])*1.03))+
labs(x="Dose", y="Proportion",title="Continous MA fitting")+
theme_minimal()
}else{
plot_gg<-ggplot()+
geom_point(aes(x=doses,y=Response))+
xlim(c(min(doses),max(doses)*1.03))+
labs(x="Dose", y="Proportion",title="Continous MA fitting")+
theme_minimal()
}
plot_gg
# 06/02/21 SL update
if (IS_SUFFICIENT){
plot_gg<-ggplot()+
geom_point(aes(x=data_d[,1],y=data_d[,2]))+
geom_errorbar(aes(x=data_d[,1], ymin=lerror, ymax=uerror),color="black",size=0.8,width=width)+
xlim(c(min(data_d[,1])-width,max(data_d[,1])*1.03))+
labs(x="Dose", y="Proportion",title="Continous MA fitting")+
theme_minimal()
}else{
plot_gg<-ggplot()+
geom_point(aes(x=doses,y=Response))+
xlim(c(min(doses),max(doses)*1.03))+
labs(x="Dose", y="Proportion",title="Continous MA fitting")+
theme_minimal()
}
plot_gg
.plot.BMDcontinuous_MA <- function(A,qprob=0.05,...){
# Should be matched with BMD_MA plots
# SL 06/02 Updated
# Later, we'll have it
density_col="blueviolet"
credint_col="azure2"
class_list <- names(A)
fit_idx    <- grep("Individual_Model",class_list)
#plot the model average curve
if ("BMDcontinuous_MA_mcmc" %in% class(A)){ # mcmc run
n_samps <- nrow(A[[fit_idx[1]]]$mcmc_result$PARM_samples)
data_d   <-  A[[fit_idx[1]]]$data
max_dose <- max(data_d[,1])
min_dose <- min(data_d[,1])
test_doses <- seq(min_dose,max_dose,(max_dose-min_dose)/200);
ma_samps <- sample(fit_idx,n_samps, replace=TRUE,prob = A$posterior_probs)
temp_f   <- matrix(0,n_samps,length(test_doses))
temp_bmd <- rep(0,length(test_doses))
# 06/07/21 SL Update
IS_SUFFICIENT=FALSE
if (ncol(data_d) == 4 ){ #sufficient statistics
IS_SUFFICIENT = TRUE
mean <- data_d[,2,drop=F]
se   <- data_d[,4,drop=F]/sqrt(fit$data[,3,drop=F])
doses = data_d[,1,drop=F]
uerror <- mean+2*se
lerror <- mean-2*se
dose = c(doses,doses)
Response = c(uerror,lerror)
lm_fit = lm(mean ~ doses,weights = 1/se*se)
}else{
Response <- data_d[,2,drop=F]
doses = data_d[,1,drop=F]
lm_fit = lm(Response~doses)
}
if (coefficients(lm_fit)[2] < 0){
decrease = TRUE
}else{
decrease = FALSE
}
for (ii in 1:n_samps){
fit <- A[[fit_idx[ma_samps[ii]]]]
if (fit$model=="FUNL"){
temp_f[ii,] <- cont_FUNL_f(fit$mcmc_result$PARM_samples[ii,],test_doses)
temp_bmd[ii] <- fit$mcmc_result$BMD_samples[ii]
}
if (fit$model=="hill"){
temp_f[ii,] <- cont_hill_f(fit$mcmc_result$PARM_samples[ii,],test_doses)
temp_bmd[ii] <- fit$mcmc_result$BMD_samples[ii]
}
if (fit$model=="exp-3"){
temp_f[ii,] <- cont_exp_3_f(fit$mcmc_result$PARM_samples[ii,],test_doses,decrease)
temp_bmd[ii] <- fit$mcmc_result$BMD_samples[ii]
}
if (fit$model=="exp-5"){
temp_f[ii,] <- cont_exp_5_f(fit$mcmc_result$PARM_samples[ii,],test_doses)
temp_bmd[ii] <- fit$mcmc_result$BMD_samples[ii]
}
if (fit$model=="power"){
temp_f[ii,] <- cont_power_f(fit$mcmc_result$PARM_samples[ii,],test_doses)
temp_bmd[ii] <- fit$mcmc_result$BMD_samples[ii]
}
}
temp_f[is.infinite(temp_f)] = NA
temp_f[abs(temp_f) > 1e10] = NA
# If temp_bmd== Inf then delete;
# Updated 06/02/21 SL
temp_bmd[is.infinite(temp_bmd)] = NA
me <- apply(temp_f,2,quantile, probs = 0.5,na.rm = TRUE) # BMD
lq <- apply(temp_f,2,quantile, probs = qprob,na.rm = TRUE) # BMDL
uq <- apply(temp_f,2,quantile, probs = 1-qprob,na.rm = TRUE) # BMDU
width=3
# 06/02/21 SL update
if (IS_SUFFICIENT){
plot_gg<-ggplot()+
geom_point(aes(x=data_d[,1],y=data_d[,2]))+
geom_errorbar(aes(x=data_d[,1], ymin=lerror, ymax=uerror),color="black",size=0.8,width=width)+
xlim(c(min(data_d[,1])-width,max(data_d[,1])*1.03))+
labs(x="Dose", y="Proportion",title="Continous MA fitting")+
theme_minimal()
}else{
plot_gg<-ggplot()+
geom_point(aes(x=doses,y=Response))+
xlim(c(min(doses),max(doses)*1.03))+
labs(x="Dose", y="Proportion",title="Continous MA fitting")+
theme_minimal()
}
plot_gg<-plot_gg+
geom_ribbon(aes(x=test_doses,ymin=lq,ymax=uq),fill="blue",alpha=0.1)
plot_gg<-plot_gg+
geom_line(aes(x=test_doses,y=me),col="blue",size=2)
# Updated to remove Inf bmd 06/02/21 SL
bmd <- quantile(temp_bmd,c(qprob,0.5,1-qprob),na.rm = TRUE)
# Compare this with BMD sample case- SL
# Why this number is so different ?
# BB$bmd
## Plot the CDF of the Posterior
## SL's comment- I think we already have MCMC sample, and we can plot bmd directly from samples
if(sum(!is.nan(test_doses) + !is.infinite(test_doses)) == 0){
temp = temp_bmd[temp_bmd < 10*max(test_doses)]
temp = temp[!is.infinite(temp_bmd)]
temp = temp[!is.na(temp)]
# Density only creates few data points SL
# Fixed part 06/04/21
Dens =  density(temp,cut=c(max(test_doses)), n=512, from=0, to=max(test_doses))
Dens$y = Dens$y/max(Dens$y) * (max(Response)-min(Response))*0.6
temp = which(Dens$x < max(test_doses))
D1_y = Dens$y[temp]
D1_x = Dens$x[temp]
qm = min(Response)
scale = (max(Response)-min(Response))/max(D1_y) *.75
# BMD MA density needs to be double checked
# It's BMD is spiky by nature of sampling I guess;
# ggplot()+
#   geom_density(aes(x=temp))+xlim(c(0,15))
#
# plot_gg<-plot_gg+
#   stat_density_ridges(aes(x=temp))
plot_gg<-plot_gg+
geom_polygon(aes(x=c(max(0,min(D1_x)),D1_x,max(0,min(D1_x))),
y=c(min(Response),min(Response)+D1_y*scale,min(Response))),
fill = "blueviolet", alpha=0.6)
}
##
# Add lines to the BMD
ma_mean <- splinefun(test_doses,me)
ma_BMD = A$bmd
# Question to Matt not sure
plot_gg = plot_gg +
geom_segment(aes(x=A$bmd, y=ma_mean(A$bmd), xend=A$bmd, yend=min(Response)),color="Red")
# Which one is duplicated?
# plot_gg = plot_gg +
#   geom_segment(aes(x=bmd, y=ma_mean(bmd), xend=bmd, yend=min(Response)),color="Red")
#Plot only level >2
df<-NULL
# Problem of the loop using this case- the ggplot is not added automatically,
# It replaces the last one;
for (ii in 1:length(fit_idx)){
if (A$posterior_probs[ii]>0.05){
fit <- A[[fit_idx[ii]]]
if (fit$model=="FUNL"){
f <- cont_FUNL_f(fit$fitted_model$parameters,test_doses)
}
if (fit$model=="hill"){
f <- cont_hill_f(fit$fitted_model$parameters,test_doses)
}
if (fit$model=="exp-3"){
temp = fit$fitted_model$parameters
f <- cont_exp_3_f(temp,test_doses,decrease)
}
if (fit$model=="exp-5"){
f <- cont_exp_5_f(fit$fitted_model$parameters,test_doses)
}
if (fit$model=="power"){
f <- cont_power_f(fit$fitted_model$parameters,test_doses)
}
col = alphablend(col='coral3',A$posterior_probs[ii])
# Not using loop, but save data in the external data and load it later
temp_df<-data.frame(x_axis=test_doses,y_axis=f,cols=col,model_no=ii, alpha_lev=A$posterior_probs[ii])
df<-rbind(df,temp_df)
# Not using loop, but save data in the external data and load it later
temp_df<-data.frame(x_axis=test_doses,y_axis=f,cols=col,model_no=ii, alpha_lev=A$posterior_probs[ii])
df<-rbind(df,temp_df)
plot_gg<- plot_gg+
geom_line(data=df, aes(x=x_axis,y=y_axis,color=cols),alpha=0.5,show.legend=F)+
theme_minimal()
}
}
}
## I think this if-else part needs to be clear since it's already in A part ;
## Why this part is added?
else{ # mcmc run
data_d   <-  A[[fit_idx[1]]]$data
max_dose <- max(data_d[,1])
min_dose <- min(data_d[,1])
test_doses <- seq(min_dose,max_dose,(max_dose-min_dose)/200);
temp_bmd <- rep(0,length(test_doses))
if (ncol(data_d) == 4 ){ #sufficient statistics
mean <- data_d[,2,drop=F]
se   <- data_d[,4,drop=F]/sqrt(fit$data[,3,drop=F])
doses = data_d[,1,drop=F]
uerror <- mean+se
lerror <- mean-se
dose = c(doses,doses)
Response = c(uerror,lerror)
lm_fit = lm(mean ~ doses,weights = 1/se*se)
}else{
Response <- data_d[,2,drop=F]
doses = data_d[,1,drop=F]
lm_fit = lm(Response~doses)
}
if (coefficients(lm_fit)[2] < 0){
decrease = TRUE
}else{
decrease = FALSE
}
me = test_doses*0
for (ii in 1:length(fit_idx)){
fit <- A[[fit_idx[ii]]]
if (fit$model=="FUNL"){
t <- cont_FUNL_f(fit$parameters,test_doses)
if(BB$posterior_probs[ii] > 0){
me = t*BB$posterior_probs[ii] + me
}
}
if (fit$model=="hill"){
t <- cont_hill_f(fit$parameters,test_doses)
# SL comment - why the name of object is BB? At the beginning it was declared as A-  05/28/21
# I guess this part should be A as well
if(A$posterior_probs[ii] > 0){
me = t*A$posterior_probs[ii] + me
}
}
if (fit$model=="exp-3"){
t <- cont_exp_3_f(fit$parameters,test_doses,decrease)
if(A$posterior_probs[ii] > 0){
me = t*A$posterior_probs[ii] + me
}
}
if (fit$model=="exp-5"){
t <- cont_exp_5_f(fit$parameters,test_doses)
if(A$posterior_probs[ii] > 0){
me = t*A$posterior_probs[ii] + me
}
}
if (fit$model=="power"){
t <- cont_power_f(fit$parameters,test_doses)
if(A$posterior_probs[ii] > 0){
me = t*A$posterior_probs[ii] + me
}
}
}
plot_gg<-ggplot()+
geom_point(aes(x=doses,y=Response))+
xlim(c(min(doses),max(doses)*1.03))+
# Change the label for Y axis - SL 05/28/21
labs(x="Dose", y="Response",title="Continous MA fitting")+
theme_minimal()
plot_gg<-plot_gg+
geom_line(aes(x=test_doses,y=me),col="blue",size=2)
##
# Add lines to the BMD
ma_mean <- splinefun(test_doses,me)
ma_BMD = A$bmd
plot_gg = plot_gg +
geom_segment(aes(x=A$bmd, y=ma_mean(A$bmd), xend=A$bmd, yend=min(Response)),color="Red")
# Not sure about this part - SL 05/28/21
#Plot only level >2
df<-NULL
for (ii in 1:length(fit_idx)){
if (A$posterior_probs[ii]>0.05){
fit <- A[[fit_idx[ii]]]
if (fit$model=="FUNL"){
f <- cont_FUNL_f(fit$parameters,test_doses)
}
if (fit$model=="hill"){
f <- cont_hill_f(fit$parameters,test_doses)
}
if (fit$model=="exp-3"){
temp = fit$parameters
#temp = c(temp[1:2],0,temp[3],temp[4])
f <- cont_exp_3_f(temp,test_doses,decrease)
}
if (fit$model=="exp-5"){
f <- cont_exp_5_f(fit$parameters,test_doses)
}
if (fit$model=="power"){
f <- cont_power_f(fit$parameters,test_doses)
}
col = alphablend(col='coral3',A$posterior_probs[ii])
# Not using loop, but save data in the external data and load it later
temp_df<-data.frame(x_axis=test_doses,y_axis=f,cols=col,model_no=ii, alpha_lev=A$posterior_probs[ii])
df<-rbind(df,temp_df)
}
}
plot_gg<- plot_gg+
geom_line(data=df, aes(x=x_axis,y=y_axis,color=cols),alpha=0.5,show.legend=F)+
theme_minimal()
}
return(plot_gg)
}
.plot.BMDcontinuous_MA(c3)
setwd("~/Documents/r_packages/RBMDS/RBMDS/Simulation")
load("~/Documents/r_packages/RBMDS/RBMDS/Simulation/Hill/Hill_invGaussian_e_5_sim_5.Rdata")
y = sim_data[1,]
plot(y,doses)
plot(doses,y)
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1,samples = 75000)
library(ToxicR)
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1,samples = 75000)
model_list  = data.frame(model_list = c(rep("hill",2),rep("exp-3",3),rep("exp-5",3),rep("power",2)),
distribution_list =  c(c("normal","normal-ncv"),rep(c("normal","normal-ncv","lognormal"),2),
"normal", "normal-ncv"))
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1,samples = 75000)
plot(AA)
library(ggplot2)
plot(AA)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
plot(AA_l)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'rel',BMR = BMR)
library(ToxicR)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'rel',BMR = BMR)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
AA_l
plot(AA_l)
library(ggplot2)
plot(AA_l)
AA_l$Individual_Model_1$prior
plnorm(3,0,1)
plnorm(3,0,0.25)
plnorm(3,0,0.5)
library(ToxicR)
library(ggplot2)
AA_b <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
plot(AA_b)
plot(AA_l)
AA_b$bmd
AA_l$bmd
out = 1:1000
for (ii = 1:1000){
y = sim_data[ii,]
AA_b <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
out[ii] = AA_b$bmd[2]
}
for (ii in 1:1000){
y = sim_data[ii,]
AA_b <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
out[ii] = AA_b$bmd[2]
}
ii
for (ii in 288:1000){
y = sim_data[ii,]
AA_b <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
out[ii] = AA_b$bmd[2]
print(ii)
}
mean(out < 49.97)
