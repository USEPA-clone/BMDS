ggplot(data=t_combine,aes(x=X1, y=fct_reorder(X2,X3,.desc=T), fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,max(data[,2])))+
scale_fill_manual(name = "Probability", values = c("red", "blue", "red"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)", title="Density plots for each fitted model")+theme_classic()+
theme(legend.position="none")
ggplot(data=t_combine,aes(x=X1, y=fct_reorder(X2,X3,.desc=T), fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
scale_fill_manual(name = "Probability", values = c("red", "blue", "red"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)", title="Density plots for each fitted model")+theme_classic()+
theme(legend.position="none")
A$bmd
A$bmd[2]
ggplot(data=t_combine,aes(x=X1, y=fct_reorder(X2,X3,.desc=T), fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(A$bmd[2]*1.5,A$bmd[3]*1.5))+
scale_fill_manual(name = "Probability", values = c("red", "blue", "red"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)", title="Density plots for each fitted model")+theme_classic()+
theme(legend.position="none")
ggplot(data=t_combine,aes(x=X1, y=fct_reorder(X2,X3,.desc=T), fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(0,A$bmd[3]*1.5))+
scale_fill_manual(name = "Probability", values = c("red", "blue", "red"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)", title="Density plots for each fitted model")+theme_classic()+
theme(legend.position="none")
ggplot(data=t_combine,aes(x=X1, y=fct_reorder(X2,X3,.desc=T), fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,A$bmd[3]*1.5))+
scale_fill_manual(name = "Probability", values = c("red", "blue", "red"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)", title="Density plots for each fitted model")+theme_classic()+
theme(legend.position="none")
ggplot(data=t_combine,aes(x=X1, y=fct_reorder(X2,X3,.desc=T), fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,A$bmd[3]*2))+
scale_fill_manual(name = "Probability", values = c("red", "blue", "red"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)", title="Density plots for each fitted model")+theme_classic()+
theme(legend.position="none")
ggplot(data=t_combine,aes(x=X1, y=fct_reorder(X2,X3,.desc=T), fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,A$bmd[3]*2.5))+
scale_fill_manual(name = "Probability", values = c("red", "blue", "red"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)", title="Density plots for each fitted model")+theme_classic()+
theme(legend.position="none")
ggplot(data=t_combine,aes(x=X1, y=fct_reorder(X2,X3,.desc=T), fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,A$bmd[3]*1.3))+
scale_fill_manual(name = "Probability", values = c("red", "blue", "red"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)", title="Density plots for each fitted model")+theme_classic()+
theme(legend.position="none")
ggplot(data=t_combine,aes(x=X1, y=fct_reorder(X2,X3,.desc=T), fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,A$bmd[3]*1.5))+
scale_fill_manual(name = "Probability", values = c("red", "blue", "red"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)", title="Density plots for each fitted model")+theme_classic()+
theme(legend.position="none")
ggplot(data=t_combine,aes(x=X1, y=fct_reorder(X2,X3,.desc=T), fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,A$bmd[3]*1.8))+
scale_fill_manual(name = "Probability", values = c("red", "blue", "red"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)", title="Density plots for each fitted model")+theme_classic()+
theme(legend.position="none")
t_combine$X1
max(t_combine$X1)
quantile(t_combine$X1,0.95)
quantile(t_combine$X1,0.98)
quantile(t_combine$X1,0.99)
t_combine
out_bmd<-ggplot()+
geom_density(data=t_combine,aes(x=X1), fill = "blue", alpha=0.5)+
labs(x="Dose Level (Dotted Line : MA BMD)",title="Cleveland Plot")+
theme_classic()+xlim(c(min(doses),20))+
facet_wrap(~X2,nrow=length(fit_idx), scales="free_y")+ geom_vline(xintercept = A$bmd[1],linetype="longdash")
out_bmd
ggplot(data=t_combine,aes(x=X1, y=fct_reorder(X2,X3,.desc=T), fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,max(A)))+
scale_fill_manual(name = "Probability", values = c("red", "blue", "red"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)", title="Density plots for each fitted model")+theme_classic()+
theme(legend.position="none")
xlim(c(0,max(t_combine$X1))+
ggplot(data=t_combine,aes(x=X1, y=fct_reorder(X2,X3,.desc=T), fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,max(t_combine$X1)))+
scale_fill_manual(name = "Probability", values = c("red", "blue", "red"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)", title="Density plots for each fitted model")+theme_classic()+
theme(legend.position="none")
ggplot(data=t_combine,aes(x=X1, y=fct_reorder(X2,X3,.desc=T), fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,max(t_combine$X1)))+
scale_fill_manual(name = "Probability", values = c("red", "blue", "red"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)", title="Density plots for each fitted model")+theme_classic()+
theme(legend.position="none")
ggplot(data=t_combine,aes(x=X1, y=fct_reorder(X2,X3,.desc=T), fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,max(t_combine$X1)))+
scale_fill_manual(name = "Probability", values = c("red", "blue", "red"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)", title="Density plots for each fitted model")+theme_classic()+
theme(legend.position="none")
max(t_combine$X1)
getwd()
mData <- matrix(c(1, 3,50,
3, 10, 50,
16, 18,50,
32, 40,50,
50, 48,50),nrow=5,ncol=3,byrow=T)
# Sample Fitting Case
A<-ma_dichotomous_fit(mData[,1],mData[,2],mData[,3], fit_type="mcmc", BMD_TYPE="added",BMR=0.1)
#Dose levels
data<-A$Individual_Model_1$data
data
data[,1]
doses<-data[,1]
for (i in fit_idx){
# Loop for the model
fit<-A[[i]]
test_doses <- seq(min(doses),max(doses)*1.03,(max(doses)*1.03-min(doses))/100)
probs <- (0.5+fit$data[,2,drop=T])/(1.0 + fit$data[,3,drop=T])
doses = mData[,1,drop=T]
if (fit$model=="hill"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_hill_f, d=test_doses)
}
if (fit$model=="gamma"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_gamma_f, d=test_doses)
}
if (fit$model=="logistic"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_logist_f, d=test_doses)
}
if (fit$model=="log-logistic"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_llogist_f, d=test_doses)
}
if (fit$model=="probit"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_probit_f, d=test_doses)
}
if (fit$model=="log-probit"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_lprobit_f, d=test_doses)
}
if (fit$model=="multistage"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_multistage_f, d=test_doses)
}
if (fit$model=="qlinear"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_qlinear_f, d=test_doses)
}
temp <- fit$mcmc_result$BMD_samples[!is.nan(fit$mcmc_result$BMD_samples)]
temp <- temp[!is.infinite(temp)]
# Q <- t(Q)
#
# me <- colMeans(Q)
# lq <- apply(Q,2,quantile, probs = qprob)
# uq <- apply(Q,2,quantile, probs = 1-qprob)
Dens =  density(temp,cut=c(max(doses)))
# what is this 0.4 means? Scale?
# normalize it?-- We don't need it actually here
# Dens$y = Dens$y/max(Dens$y) * max(probs)
# temp = which(Dens$x < max(doses))
# D1_y = Dens$y[temp]
# D1_x = Dens$x[temp]
# Do I need to stack up the dataset?
temp_density<-data.frame(matrix(0,length(temp),3))
temp_density[,2]=fit$model
temp_density[,1]=temp
temp_density[,3]=A$posterior_probs[i]
assign(paste("t",i,sep="_"),temp_density)
}
# Combine the fitting dataset here
t_combine<-rbind(t_1,t_2,t_3,t_4,t_5,t_6,t_7,t_8,t_9)
#Plot
ggplot(data=t_combine,aes(x=X1, y=fct_reorder(X2,X3,.desc=T), fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,max(t_combine$X1)))+
scale_fill_manual(name = "Probability", values = c("red", "blue", "red"),
labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)", title="Density plots for each fitted model")+theme_classic()+
theme(legend.position="none")
#Plot
ggplot(data=t_combine,aes(x=X1, y=fct_reorder(X2,X3,.desc=T), fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,max(t_combine$X1)))+
scale_fill_manual(name = "Probability", values = c("red", "blue", "red"),
labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)", title="Density plots for each fitted model (Fit type: MCMC)")+theme_classic()+
theme(legend.position="none")
A
.MAdensity_plot.BMDdichotomous_MA<-function(A){
# Construct bmd sample plots for mcmc
class_list <- names(A)
fit_idx    <- grep("Individual_Model",class_list)
qprob=0.05
#Dose levels
data<-A$Individual_Model_1$data
doses<-data[,1]
for (i in fit_idx){
# Loop for the model
fit<-A[[i]]
test_doses <- seq(min(doses),max(doses)*1.03,(max(doses)*1.03-min(doses))/100)
probs <- (0.5+fit$data[,2,drop=T])/(1.0 + fit$data[,3,drop=T])
doses = mData[,1,drop=T]
if (fit$model=="hill"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_hill_f, d=test_doses)
}
if (fit$model=="gamma"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_gamma_f, d=test_doses)
}
if (fit$model=="logistic"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_logist_f, d=test_doses)
}
if (fit$model=="log-logistic"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_llogist_f, d=test_doses)
}
if (fit$model=="probit"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_probit_f, d=test_doses)
}
if (fit$model=="log-probit"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_lprobit_f, d=test_doses)
}
if (fit$model=="multistage"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_multistage_f, d=test_doses)
}
if (fit$model=="qlinear"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_qlinear_f, d=test_doses)
}
temp <- fit$mcmc_result$BMD_samples[!is.nan(fit$mcmc_result$BMD_samples)]
temp <- temp[!is.infinite(temp)]
# Q <- t(Q)
#
# me <- colMeans(Q)
# lq <- apply(Q,2,quantile, probs = qprob)
# uq <- apply(Q,2,quantile, probs = 1-qprob)
Dens =  density(temp,cut=c(max(doses)))
# what is this 0.4 means? Scale?
# normalize it?-- We don't need it actually here
# Dens$y = Dens$y/max(Dens$y) * max(probs)
# temp = which(Dens$x < max(doses))
# D1_y = Dens$y[temp]
# D1_x = Dens$x[temp]
# Do I need to stack up the dataset?
temp_density<-data.frame(matrix(0,length(temp),3))
temp_density[,2]=fit$model
temp_density[,1]=temp
temp_density[,3]=A$posterior_probs[i]
assign(paste("t",i,sep="_"),temp_density)
}
# Combine the fitting dataset here
t_combine<-rbind(t_1,t_2,t_3,t_4,t_5,t_6,t_7,t_8,t_9)
#Plot
ggplot(data=t_combine,aes(x=X1, y=fct_reorder(X2,X3,.desc=T), fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,max(t_combine$X1)))+
scale_fill_manual(name = "Probability", values = c("red", "blue", "red"),
labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)", title="Density plots for each fitted model (Fit type: MCMC)")+theme_classic()+
theme(legend.position="none")
}
.MAdensity_plot.BMDdichotomous_MA(A)
setwd("~/Documents/r_packages/RBMDS/RBMDS/Simulation")
setwd("~/Documents/r_packages/RBMDS/RBMDS/Simulation/Exp-5")
ii  = 2
jj = 747
load(file_list[ii])
BMD_result_SD_ML1_mcmc = matrix(NA,1000,3)
BMD_result_SD_ML1_lapl = matrix(NA,1000,3)
BMD_result_SD_ML2_mcmc = matrix(NA,1000,3)
BMD_result_SD_ML2_lapl = matrix(NA,1000,3)
BMD_result_HB_ML1_mcmc = matrix(NA,1000,3)
BMD_result_HB_ML1_lapl = matrix(NA,1000,3)
BMD_result_HB_ML2_mcmc = matrix(NA,1000,3)
BMD_result_HB_ML2_lapl = matrix(NA,1000,3)
pprobs_ML1 = matrix(NA,1000,11)
pprobs_ML2 = matrix(NA,1000,4)
print(sprintf("File:%d Iter:%d.",ii,jj))
###############################################################################
y = sim_data[jj,]
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1)
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
library(ToxicR)
model_list  = data.frame(model_list = c(rep("hill",3),rep("exp-3",3),rep("exp-5",3),rep("power",2)),
distribution_list =  c(rep(c("normal","normal-ncv","lognormal"),3),"normal",
"normal-ncv"))
model_list2 = data.frame(model_list = c(rep("hill",1),rep("exp-3",1),rep("exp-5",1),rep("power",1)),
distribution_list =  c(rep(c("normal"),4)))
file_list = dir()
file_list = file_list[!(file_list %in% "results")]
options(warn=-1)
load(file_list[ii])
BMD_result_SD_ML1_mcmc = matrix(NA,1000,3)
BMD_result_SD_ML1_lapl = matrix(NA,1000,3)
BMD_result_SD_ML2_mcmc = matrix(NA,1000,3)
BMD_result_SD_ML2_lapl = matrix(NA,1000,3)
BMD_result_HB_ML1_mcmc = matrix(NA,1000,3)
BMD_result_HB_ML1_lapl = matrix(NA,1000,3)
BMD_result_HB_ML2_mcmc = matrix(NA,1000,3)
BMD_result_HB_ML2_lapl = matrix(NA,1000,3)
pprobs_ML1 = matrix(NA,1000,11)
pprobs_ML2 = matrix(NA,1000,4)
print(sprintf("File:%d Iter:%d.",ii,jj))
###############################################################################
y = sim_data[jj,]
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1)
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
plot(AA)
BMD_result_SD_ML1_mcmc[jj,] = AA$bmd
BMD_result_SD_ML1_lapl[jj,] = AA_l$bmd
BMD_result_SD_ML2_mcmc[jj,] = BB$bmd
BMD_result_SD_ML2_lapl[jj,] = BB_l$bmd
pprobs_ML1[jj,] = AA$posterior_probs
pprobs_ML2[jj,] = BB$posterior_probs
###############################################################################
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
plot(AA)
jj = 748
y = sim_data[jj,]
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1)
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
BMD_result_SD_ML1_mcmc[jj,] = AA$bmd
BMD_result_SD_ML1_lapl[jj,] = AA_l$bmd
BMD_result_SD_ML2_mcmc[jj,] = BB$bmd
BMD_result_SD_ML2_lapl[jj,] = BB_l$bmd
pprobs_ML1[jj,] = AA$posterior_probs
pprobs_ML2[jj,] = BB$posterior_probs
###############################################################################
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
plot(AA)
plot(BB)
jj = 749
y = sim_data[jj,]
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1)
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
BMD_result_SD_ML1_mcmc[jj,] = AA$bmd
BMD_result_SD_ML1_lapl[jj,] = AA_l$bmd
BMD_result_SD_ML2_mcmc[jj,] = BB$bmd
BMD_result_SD_ML2_lapl[jj,] = BB_l$bmd
pprobs_ML1[jj,] = AA$posterior_probs
pprobs_ML2[jj,] = BB$posterior_probs
###############################################################################
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
plot(AA)
plot(BB)
jj = 750
y = sim_data[jj,]
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1)
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
BMD_result_SD_ML1_mcmc[jj,] = AA$bmd
BMD_result_SD_ML1_lapl[jj,] = AA_l$bmd
BMD_result_SD_ML2_mcmc[jj,] = BB$bmd
BMD_result_SD_ML2_lapl[jj,] = BB_l$bmd
pprobs_ML1[jj,] = AA$posterior_probs
pprobs_ML2[jj,] = BB$posterior_probs
###############################################################################
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
plot(AA)
plot(BB)
file_list = dir()
file_list = file_list[!(file_list %in% "results")]
options(warn=-1)
for (ii in 2:length(file_list)){
load(file_list[ii])
BMD_result_SD_ML1_mcmc = matrix(NA,1000,3)
BMD_result_SD_ML1_lapl = matrix(NA,1000,3)
BMD_result_SD_ML2_mcmc = matrix(NA,1000,3)
BMD_result_SD_ML2_lapl = matrix(NA,1000,3)
BMD_result_HB_ML1_mcmc = matrix(NA,1000,3)
BMD_result_HB_ML1_lapl = matrix(NA,1000,3)
BMD_result_HB_ML2_mcmc = matrix(NA,1000,3)
BMD_result_HB_ML2_lapl = matrix(NA,1000,3)
pprobs_ML1 = matrix(NA,1000,11)
pprobs_ML2 = matrix(NA,1000,4)
for (jj in 1:1000){#nrow(sim_data)){
print(sprintf("File:%d Iter:%d.",ii,jj))
###############################################################################
y = sim_data[jj,]
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1)
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
BMD_result_SD_ML1_mcmc[jj,] = AA$bmd
BMD_result_SD_ML1_lapl[jj,] = AA_l$bmd
BMD_result_SD_ML2_mcmc[jj,] = BB$bmd
BMD_result_SD_ML2_lapl[jj,] = BB_l$bmd
pprobs_ML1[jj,] = AA$posterior_probs
pprobs_ML2[jj,] = BB$posterior_probs
###############################################################################
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
BMD_result_HB_ML1_mcmc[jj,] = AA$bmd
BMD_result_HB_ML1_lapl[jj,] = AA_l$bmd
BMD_result_HB_ML2_mcmc[jj,] = BB$bmd
BMD_result_HB_ML2_lapl[jj,] = BB_l$bmd
################################################################################
}
save(BMD_result_HB_ML1_lapl,BMD_result_HB_ML2_lapl,
BMD_result_HB_ML1_mcmc,BMD_result_HB_ML2_mcmc,
BMD_result_SD_ML1_lapl,BMD_result_SD_ML2_lapl,
BMD_result_SD_ML1_mcmc,BMD_result_SD_ML2_mcmc,
pprobs_ML1,pprobs_ML2,file=sprintf("./results/simrun_%s",file_list[ii]))
}
plot(d,y)
plot(doses,y)
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1)
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
