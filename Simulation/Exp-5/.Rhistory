}
f2 <- function( mu,tau,k){
Q <<- function(gamma){
rV = 0.0;
rV = gamma*k - exp(gamma);
rV = -(tau/2.0)*(gamma-mu)*(gamma-mu) + rV;
return(-rV);
}
return(optimize(Q,lower = -100, upper = 100,tol=1e-10)$minimum)
}
means_m <- exp(rnorm(10000,4,1))
taus_m  <- rgamma(10000,1,2)
k <- rpois(10000,means_m)
res <- rep(0,10000)
for (i in 1:10000){
res[i] = f2(log(means_m[i]),taus_m[i],k[i]) - findMAP2(log(means_m[i]),taus_m[i],k[i])
}
mu = log(means_m[i]); tau = taus_m[i]; k = k[i]
i
k[i]
k
k[i]
k[i-1]
k
findMAP2 <- function(mu,
tau, k) {
gamma     = log(k+1);
new_gamma = gamma - dL_pois_norm(gamma,mu,tau,k)/d2L_pois_norm(gamma,mu,tau,k);
i = 0
while (  i < 250 && abs(gamma-new_gamma) > 1e-10){
gamma = new_gamma;
if (gamma > 300) {gamma = 10}
if (gamma < -300){gamma = -10}
new_gamma = gamma - dL_pois_norm(gamma,mu,tau,k)/d2L_pois_norm(gamma,mu,tau,k);
i = i + 1
}
return(new_gamma);
}
f2 <- function( mu,tau,k){
Q <<- function(gamma){
rV = 0.0;
rV = gamma*k - exp(gamma);
rV = -(tau/2.0)*(gamma-mu)*(gamma-mu) + rV;
return(-rV);
}
return(optimize(Q,lower = -100, upper = 100,tol=1e-10)$minimum)
}
means_m <- exp(rnorm(10000,4,1))
taus_m  <- rgamma(10000,1,2)
k <- rpois(10000,means_m)
res <- rep(0,10000)
for (i in 1:10000){
res[i] = f2(log(means_m[i]),taus_m[i],k[i]) - findMAP2(log(means_m[i]),taus_m[i],k[i])
}
max(res[i])
means_m <- exp(rnorm(10000,5,1))
max(means_m)
means_m <- exp(rnorm(10000,5,1))
taus_m  <- rgamma(10000,1,1)
k <- rpois(10000,means_m)
res <- rep(0,10000)
for (i in 1:10000){
res[i] = f2(log(means_m[i]),taus_m[i],k[i]) - findMAP2(log(means_m[i]),taus_m[i],k[i])
}
max(res)
means_m <- exp(rnorm(10000,6,1))
taus_m  <- rgamma(10000,1,1)
k <- rpois(10000,means_m)
res <- rep(0,10000)
for (i in 1:10000){
res[i] = f2(log(means_m[i]),taus_m[i],k[i]) - findMAP2(log(means_m[i]),taus_m[i],k[i])
}
max(res)
max(means_m)
max(k)
means_m <- exp(rnorm(10000,7,1))
taus_m  <- rgamma(10000,2,1)
k <- rpois(10000,means_m)
res <- rep(0,10000)
for (i in 1:10000){
res[i] = f2(log(means_m[i]),taus_m[i],k[i]) - findMAP2(log(means_m[i]),taus_m[i],k[i])
}
max(k)
max(res)
means_m <- exp(rnorm(10000,8,1))
taus_m  <- rgamma(10000,2,1)
k <- rpois(10000,means_m)
res <- rep(0,10000)
for (i in 1:10000){
res[i] = f2(log(means_m[i]),taus_m[i],k[i]) - findMAP2(log(means_m[i]),taus_m[i],k[i])
}
max(res)
max(k)
max(taus_m)
taus_m  <- rgamma(10000,5,1)
for (i in 1:10000){
res[i] = f2(log(means_m[i]),taus_m[i],k[i]) - findMAP2(log(means_m[i]),taus_m[i],k[i])
}
max(res)
findMAP2 <- function(mu,
tau, k) {
gamma     = log(k+1);
new_gamma = gamma - dL_pois_norm(gamma,mu,tau,k)/d2L_pois_norm(gamma,mu,tau,k);
i = 0
while (  i < 250 && abs(gamma-new_gamma) > 1e-10){
gamma = new_gamma;
if (gamma > 300) {gamma = 10;print("sup")}
if (gamma < -300){gamma = -10;print("slice")}
new_gamma = gamma - dL_pois_norm(gamma,mu,tau,k)/d2L_pois_norm(gamma,mu,tau,k);
i = i + 1
}
return(new_gamma);
}
means_m <- exp(rnorm(10000,8,1))
taus_m  <- rgamma(10000,5,1)
k <- rpois(10000,means_m)
res <- rep(0,10000)
for (i in 1:10000){
res[i] = f2(log(means_m[i]),taus_m[i],k[i]) - findMAP2(log(means_m[i]),taus_m[i],k[i])
}
plot(res)
max(res)
log(k+1)
means_m <- exp(rnorm(10000,9,1))
taus_m  <- rgamma(10000,5,1)
k <- rpois(10000,means_m)
res <- rep(0,10000)
for (i in 1:10000){
res[i] = f2(log(means_m[i]),taus_m[i],k[i]) - findMAP2(log(means_m[i]),taus_m[i],k[i])
}
max(res)
min(res)
max(abs(res))
####################################################+3333
NASDAQ <-getSymbols("^IXIC", from = as.Date("1970-01-01"), to = as.Date("2020-09-09s"), auto.assign = FALSE)
v.da <- NASDAQ$IXIC.Close
X<-as.Date(index(v.da))
pred.dates <- seq(min(X),max(X),(max(X)-min(X))/2)
fitLM <- function(a){
V <-sample(v.da,40)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(v.da),log(v.da),col=2,type='l',xlim = c((18499-10000),18499),ylim=c(7.0,9.5))
for (i in 1:200){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
rowMeans(D)
lines(index(v.da),log(v.da),col=2)
x = c((18499-10000):18499)
lines(x,4.22264+0.00026293*x,col=3,lwd=3)
##
library(quantmod)
####################################################+3333
NASDAQ <-getSymbols("^IXIC", from = as.Date("1970-01-01"), to = as.Date("2020-09-08"), auto.assign = FALSE)
v.da <- NASDAQ$IXIC.Close
X<-as.Date(index(v.da))
pred.dates <- seq(min(X),max(X),(max(X)-min(X))/2)
fitLM <- function(a){
V <-sample(v.da,40)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(v.da),log(v.da),col=2,type='l',xlim = c((18499-10000),18499),ylim=c(7.0,9.5))
for (i in 1:200){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
rowMeans(D)
lines(index(v.da),log(v.da),col=2)
x = c((18499-10000):18499)
lines(x,4.22264+0.00026293*x,col=3,lwd=3)
####################################################3333
####################################################+3333
NASDAQ <-getSymbols("^IXIC", from = as.Date("1970-01-01"), to = as.Date("2020-09-08"), auto.assign = FALSE)
v.da <- NASDAQ$IXIC.Close
X<-as.Date(index(v.da))
pred.dates <- seq(min(X),max(X),(max(X)-min(X))/2)
fitLM <- function(a){
V <-sample(v.da,40)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(v.da),log(v.da),col=2,type='l',xlim = c((18499-10000),18499),ylim=c(7.0,9.5))
for (i in 1:200){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
rowMeans(D)
lines(index(v.da),log(v.da),col=2)
x = c((18499-700):18499)
lines(x,4.22264+0.00026293*x,col=3,lwd=3)
###
plot(index(v.da),log(v.da),col=2,type='l',xlim = c((18499-700),18499),ylim=c(7.0,9.5))
for (i in 1:200){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
rowMeans(D)
lines(index(v.da),log(v.da),col=2)
x = c((18499-700):18499)
lines(x,4.22264+0.00026293*x,col=3,lwd=3)
#
library(quantmod)
NASDAQ <-getSymbols("^IXIC", from = as.Date("1960-01-01"), to =as.Date("2020-12-04"), auto.assign = FALSE)
v.da <- b$IXIC.Close
DOW <- getSymbols("^DJI", from = as.Date("1950-01-01"), to = as.Date("2020-12-04"), auto.assign = FALSE)
DOW.dab <- DOW$DJI.Close
X <- index(DOW.dab)
pred.dates <- seq(min(X),max(X),(max(X)-min(X))/2)
fitLM <- function(a){
V <-sample(DOW.dab,500)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(DOW.dab),log(DOW.dab),col=2,type='l')
for (i in 1:2000){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
lines(index(DOW.dab),log(DOW.dab),col=2)
fitLM <- function(a){
V <-sample(DOW.dab,50)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(DOW.dab),log(DOW.dab),col=2,type='l')
for (i in 1:2000){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
lines(index(DOW.dab),log(DOW.dab),col=2)
m <- rowMeans(D)
####################################################+3333
NASDAQ <-getSymbols("^IXIC", from = as.Date("1970-01-01"), to = as.Date("2020-09-08"), auto.assign = FALSE)
v.da <- NASDAQ$IXIC.Close
X<-as.Date(index(v.da))
pred.dates <- seq(min(X),max(X),(max(X)-min(X))/2)
fitLM <- function(a){
V <-sample(v.da,40)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(v.da),log(v.da),col=2,type='l',xlim = c((18499-700),18499),ylim=c(7.0,9.5))
for (i in 1:200){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
rowMeans(D)
lines(index(v.da),log(v.da),col=2)
x = c((18499-700):18499)
lines(x,4.22264+0.00026293*x,col=3,lwd=3)
####################################################3333
SNP <-getSymbols("^GSPC", from = as.Date("1960-01-01"), to = as.Date("2020-12-04"), auto.assign = FALSE)
v.da <- SNP$GSPC.Close
X<-as.Date(index(v.da))
pred.dates <- seq(min(X),max(X),(max(X)-min(X))/2)
fitLM <- function(a){
V <-sample(v.da,50)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(v.da),log(v.da),col=2,type='l')
for (i in 1:2000){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
lines(index(v.da),log(v.da),col=2)
####################################################3333
SNP <-getSymbols("NEAR", from = as.Date("1960-01-01"), to = as.Date("2020-12-04"), auto.assign = FALSE)
v.da <- SNP$NEAR.Close
X<-as.Date(index(v.da))
pred.dates <- seq(min(X),max(X),(max(X)-min(X))/2)
fitLM <- function(a){
V <-sample(v.da,100)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(v.da),log(v.da),col=2,type='l')
for (i in 1:2000){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
lines(index(v.da),log(v.da),col=2)
####################################################+3333
NASDAQ <-getSymbols("^IXIC", from = as.Date("1970-01-01"), to = as.Date("2020-09-08"), auto.assign = FALSE)
v.da <- NASDAQ$IXIC.Close
X<-as.Date(index(v.da))
pred.dates <- seq(min(X),max(X),(max(X)-min(X))/2)
fitLM <- function(a){
V <-sample(v.da,40)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(v.da),log(v.da),col=2,type='l',xlim = c((18499-700),18499),ylim=c(7.0,9.5))
for (i in 1:200){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
rowMeans(D)
lines(index(v.da),log(v.da),col=2)
x = c((18499-700):18499)
lines(x,4.22264+0.00026293*x,col=3,lwd=3)
####
fitLM <- function(a){
V <-sample(v.da,40)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(v.da),log(v.da),col=2,type='l')#,xlim = c((18499-700),18499),ylim=c(7.0,9.5))
for (i in 1:200){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
####################################################3333
SNP <-getSymbols("^GSPC", from = as.Date("1960-01-01"), to = as.Date("2020-12-04"), auto.assign = FALSE)
v.da <- SNP$GSPC.Close
X<-as.Date(index(v.da))
pred.dates <- seq(min(X),max(X),(max(X)-min(X))/2)
fitLM <- function(a){
V <-sample(v.da,50)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(v.da),log(v.da),col=2,type='l')
for (i in 1:2000){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
lines(index(v.da),log(v.da),col=2)
RUS  <-getSymbols("^RUT", from = as.Date("1960-01-01"), to = as.Date("2020-12-04"), auto.assign = FALSE)
View(RUS)
v.da <- RUT$NEAR.Close
X<-as.Date(index(v.da))
pred.dates <- seq(min(X),max(X),(max(X)-min(X))/2)
fitLM <- function(a){
V <-sample(v.da,50)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(v.da),log(v.da),col=2,type='l')
for (i in 1:2000){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
RUS  <-getSymbols("^RUT", from = as.Date("1960-01-01"), to = as.Date("2020-12-04"), auto.assign = FALSE)
v.da <- RUS$NEAR.Close
X<-as.Date(index(v.da))
pred.dates <- seq(min(X),max(X),(max(X)-min(X))/2)
fitLM <- function(a){
V <-sample(v.da,50)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(v.da),log(v.da),col=2,type='l')
for (i in 1:2000){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
lines(index(v.da),log(v.da),col=2)
RUS  <-getSymbols("^RUT", from = as.Date("1960-01-01"), to = as.Date("2020-12-04"), auto.assign = FALSE)
v.da <- RUS$RUT.Close
X<-as.Date(index(v.da))
pred.dates <- seq(min(X),max(X),(max(X)-min(X))/2)
fitLM <- function(a){
V <-sample(v.da,50)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(v.da),log(v.da),col=2,type='l')
for (i in 1:2000){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
lines(index(v.da),log(v.da),col=2)
library(quantmod)
NASDAQ <-getSymbols("^IXIC", from = as.Date("1960-01-01"), to =as.Date("2020-12-04"), auto.assign = FALSE)
v.da <- b$IXIC.Close
DOW <- getSymbols("^DJI", from = as.Date("1950-01-01"), to = as.Date("2020-12-04"), auto.assign = FALSE)
DOW.dab <- DOW$DJI.Close
X <- index(DOW.dab)
pred.dates <- seq(min(X),max(X),(max(X)-min(X))/2)
fitLM <- function(a){
V <-sample(DOW.dab,50)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(DOW.dab),log(DOW.dab),col=2,type='l')
for (i in 1:2000){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
lines(index(DOW.dab),log(DOW.dab),col=2)
m <- rowMeans(D)
library(quantmod)
NASDAQ <-getSymbols("^IXIC", from = as.Date("1960-01-01"), to =as.Date("2020-12-04"), auto.assign = FALSE)
v.da <- b$IXIC.Close
DOW <- getSymbols("^DJI", from = as.Date("1950-01-01"), to = as.Date("2020-12-04"), auto.assign = FALSE)
DOW.dab <- DOW$DJI.Close
X <- index(DOW.dab)
pred.dates <- seq(min(X),max(X),(max(X)-min(X))/2)
fitLM <- function(a){
V <-sample(DOW.dab,100)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(DOW.dab),log(DOW.dab),col=2,type='l')
for (i in 1:2000){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
lines(index(DOW.dab),log(DOW.dab),col=2)
m <- rowMeans(D)
setwd("~/Documents/r_packages/RBMDS/RBMDS/Simulation")
setwd("~/Documents/r_packages/RBMDS/RBMDS/Simulation/Exp-5")
library(ToxicR)
model_list  = data.frame(model_list = c(rep("hill",2),rep("exp-3",3),rep("exp-5",3),rep("power",2)),
distribution_list =  c(c("normal","normal-ncv"),rep(c("normal","normal-ncv","lognormal"),2),
"normal", "normal-ncv"))
model_list2 = data.frame(model_list = c(rep("hill",1),rep("exp-3",1),rep("exp-5",1),rep("power",1)),
distribution_list =  c(rep(c("normal"),4)))
file_list = dir()
file_list = file_list[!(file_list %in% c("results","results2"))]
options(warn=-1)
for (ii in 1:length(file_list)){
load(file_list[ii])
BMD_result_REL_ML1_mcmc = matrix(NA,1000,3)
BMD_result_REL_ML1_lapl = matrix(NA,1000,3)
BMD_result_REL_ML2_mcmc = matrix(NA,1000,3)
BMD_result_REL_ML2_lapl = matrix(NA,1000,3)
pprobs_ML1 = matrix(NA,1000,10)
pprobs_ML2 = matrix(NA,1000,4)
for (jj in 1:1000){#nrow(sim_data)){
print(sprintf("File:%d Iter:%d.",ii,jj))
###############################################################################
y = sim_data[jj,]
fit <- lm(y ~ doses)
if (fit[[1]][2] < 0){
BMR = 0.9
}else{
BMR = 0.1
}
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'rel',BMR = BMR ,samples = 25000)
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "mcmc",BMD_TYPE = 'rel',BMR = BMR,samples = 25000)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'rel',BMR = BMR)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'rel',BMR = BMR)
BMD_result_REL_ML1_mcmc[jj,] = AA$bmd
BMD_result_REL_ML1_lapl[jj,] = AA_l$bmd
BMD_result_REL_ML2_mcmc[jj,] = BB$bmd
BMD_result_REL_ML2_lapl[jj,] = BB_l$bmd
pprobs_ML1[jj,] = AA$posterior_probs
pprobs_ML2[jj,] = BB$posterior_probs
################################################################################
}
save(BMD_result_REL_ML1_lapl,BMD_result_REL_ML2_lapl,
BMD_result_REL_ML1_mcmc,BMD_result_REL_ML2_mcmc,
pprobs_ML1,pprobs_ML2,file=sprintf("./results2/simrun_%s",file_list[ii]))
}
