NASDAQ <-getSymbols("^IXIC", from = as.Date("1970-01-01"), to = as.Date("2020-09-08"), auto.assign = FALSE)
v.da <- NASDAQ$IXIC.Close
X<-as.Date(index(v.da))
pred.dates <- seq(min(X),max(X),(max(X)-min(X))/2)
fitLM <- function(a){
V <-sample(v.da,40)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(v.da),log(v.da),col=2,type='l',xlim = c((18499-700),18499),ylim=c(7.0,9.5))
for (i in 1:200){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
rowMeans(D)
lines(index(v.da),log(v.da),col=2)
x = c((18499-700):18499)
lines(x,4.22264+0.00026293*x,col=3,lwd=3)
####################################################3333
SNP <-getSymbols("^GSPC", from = as.Date("1960-01-01"), to = as.Date("2020-12-04"), auto.assign = FALSE)
v.da <- SNP$GSPC.Close
X<-as.Date(index(v.da))
pred.dates <- seq(min(X),max(X),(max(X)-min(X))/2)
fitLM <- function(a){
V <-sample(v.da,50)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(v.da),log(v.da),col=2,type='l')
for (i in 1:2000){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
lines(index(v.da),log(v.da),col=2)
####################################################3333
SNP <-getSymbols("NEAR", from = as.Date("1960-01-01"), to = as.Date("2020-12-04"), auto.assign = FALSE)
v.da <- SNP$NEAR.Close
X<-as.Date(index(v.da))
pred.dates <- seq(min(X),max(X),(max(X)-min(X))/2)
fitLM <- function(a){
V <-sample(v.da,100)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(v.da),log(v.da),col=2,type='l')
for (i in 1:2000){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
lines(index(v.da),log(v.da),col=2)
####################################################+3333
NASDAQ <-getSymbols("^IXIC", from = as.Date("1970-01-01"), to = as.Date("2020-09-08"), auto.assign = FALSE)
v.da <- NASDAQ$IXIC.Close
X<-as.Date(index(v.da))
pred.dates <- seq(min(X),max(X),(max(X)-min(X))/2)
fitLM <- function(a){
V <-sample(v.da,40)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(v.da),log(v.da),col=2,type='l',xlim = c((18499-700),18499),ylim=c(7.0,9.5))
for (i in 1:200){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
rowMeans(D)
lines(index(v.da),log(v.da),col=2)
x = c((18499-700):18499)
lines(x,4.22264+0.00026293*x,col=3,lwd=3)
####
fitLM <- function(a){
V <-sample(v.da,40)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(v.da),log(v.da),col=2,type='l')#,xlim = c((18499-700),18499),ylim=c(7.0,9.5))
for (i in 1:200){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
####################################################3333
SNP <-getSymbols("^GSPC", from = as.Date("1960-01-01"), to = as.Date("2020-12-04"), auto.assign = FALSE)
v.da <- SNP$GSPC.Close
X<-as.Date(index(v.da))
pred.dates <- seq(min(X),max(X),(max(X)-min(X))/2)
fitLM <- function(a){
V <-sample(v.da,50)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(v.da),log(v.da),col=2,type='l')
for (i in 1:2000){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
lines(index(v.da),log(v.da),col=2)
RUS  <-getSymbols("^RUT", from = as.Date("1960-01-01"), to = as.Date("2020-12-04"), auto.assign = FALSE)
View(RUS)
v.da <- RUT$NEAR.Close
X<-as.Date(index(v.da))
pred.dates <- seq(min(X),max(X),(max(X)-min(X))/2)
fitLM <- function(a){
V <-sample(v.da,50)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(v.da),log(v.da),col=2,type='l')
for (i in 1:2000){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
RUS  <-getSymbols("^RUT", from = as.Date("1960-01-01"), to = as.Date("2020-12-04"), auto.assign = FALSE)
v.da <- RUS$NEAR.Close
X<-as.Date(index(v.da))
pred.dates <- seq(min(X),max(X),(max(X)-min(X))/2)
fitLM <- function(a){
V <-sample(v.da,50)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(v.da),log(v.da),col=2,type='l')
for (i in 1:2000){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
lines(index(v.da),log(v.da),col=2)
RUS  <-getSymbols("^RUT", from = as.Date("1960-01-01"), to = as.Date("2020-12-04"), auto.assign = FALSE)
v.da <- RUS$RUT.Close
X<-as.Date(index(v.da))
pred.dates <- seq(min(X),max(X),(max(X)-min(X))/2)
fitLM <- function(a){
V <-sample(v.da,50)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(v.da),log(v.da),col=2,type='l')
for (i in 1:2000){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
lines(index(v.da),log(v.da),col=2)
library(quantmod)
NASDAQ <-getSymbols("^IXIC", from = as.Date("1960-01-01"), to =as.Date("2020-12-04"), auto.assign = FALSE)
v.da <- b$IXIC.Close
DOW <- getSymbols("^DJI", from = as.Date("1950-01-01"), to = as.Date("2020-12-04"), auto.assign = FALSE)
DOW.dab <- DOW$DJI.Close
X <- index(DOW.dab)
pred.dates <- seq(min(X),max(X),(max(X)-min(X))/2)
fitLM <- function(a){
V <-sample(DOW.dab,50)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(DOW.dab),log(DOW.dab),col=2,type='l')
for (i in 1:2000){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
lines(index(DOW.dab),log(DOW.dab),col=2)
m <- rowMeans(D)
library(quantmod)
NASDAQ <-getSymbols("^IXIC", from = as.Date("1960-01-01"), to =as.Date("2020-12-04"), auto.assign = FALSE)
v.da <- b$IXIC.Close
DOW <- getSymbols("^DJI", from = as.Date("1950-01-01"), to = as.Date("2020-12-04"), auto.assign = FALSE)
DOW.dab <- DOW$DJI.Close
X <- index(DOW.dab)
pred.dates <- seq(min(X),max(X),(max(X)-min(X))/2)
fitLM <- function(a){
V <-sample(DOW.dab,100)
K = coefficients(lm(log(V)~index(V)))
return(K)
}
s <- 1:2000
D = q <- mapply(fitLM,s)
plot(index(DOW.dab),log(DOW.dab),col=2,type='l')
for (i in 1:2000){
pred.Y <- D[1,i] +  D[2,i]*as.numeric(pred.dates)
pred <- xts(x = pred.Y, order.by = pred.dates)
lines(pred.dates,pred.Y)
}
lines(index(DOW.dab),log(DOW.dab),col=2)
m <- rowMeans(D)
#Create MA simulation
#Simulation Creation for the CMA paper
#iSpline copied from Simulation Conditions.Rmd (2/5/11)
library(ToxicR)
library(actuar)
set.seed(90210)
setwd('./Non-Parametric-2')
#log-transformed for fitting as in ToxicR use
beta1 <- c(0.15486274,0.14054532,0.05806702,0.67421470,0.18371405,0.92821744,1.60669594,1.04508522)
beta2 <- c(0.677816175,0.322787366,3.356424380,0.102841870,0.009085238,0.087907971,0.344255936,0.100000000)
#add 481 to get the background
beta3 <- c(-45.715480,-53.668821,-14.266726, -8.066441,-1.620326 ,-1.800000,-1.800000 ,-1.800000)
beta4 <- c(-11.9566632,-19.9908719,-39.3450020,-16.3895141,-2.8191037,-4.5801731,-0.834784,-0.7000000)
iS <- rbind(beta1,beta2,beta3,beta4)
dose_g_5 <- rep(c(0,6.25,12.5,25,50,100),each=10)
dose_g_5 <- rep(c(0,6.25,12.5,25,50,100),each=10)
dose_e_5 <- rep(c(0,20,40,60,80,100),each=10)
dose_g_4 <- rep(c(0,12.5,25,50,100),each=10)
dose_e_4 <- rep(c(0,25,50,75,100),each=10)
library(splines2)
X_g_5 <- iSpline(dose_g_5,knots=seq(30,90,20))
X_e_5 <- iSpline(dose_e_5,knots=seq(30,90,20))
X_g_4 <- iSpline(dose_g_4,knots=seq(30,90,20))
X_e_4 <- iSpline(dose_e_4,knots=seq(30,90,20))
bkg = c(10.58,10.58,481,481)
sd    <- c(rep(2.28,2),rep(77.5,2))
#normal data
for (i in 1:4){
means_g_5 <- 2*X_g_5%*%t(iS[i,,drop=F]) + bkg[i]
means_e_5 <- 2*X_e_5%*%t(iS[i,,drop=F]) + bkg[i]
means_g_4 <- 2*X_g_4%*%t(iS[i,,drop=F]) + bkg[i]
means_e_4 <- 2*X_e_4%*%t(iS[i,,drop=F]) + bkg[i]
doses = dose_g_5
sim_data <- matrix(rnorm(1000*length(dose_g_5),means_g_5,sd[i]),nrow=1000,ncol=length(dose_g_5),byrow=T)
save(doses,sim_data,file=sprintf("NP_normal_g_5_sim_%d.Rdata",i))
doses = dose_e_5
sim_data <- matrix(rnorm(1000*length(dose_e_5),means_e_5,sd[i]),nrow=1000,ncol=length(dose_e_5),byrow=T)
save(doses,sim_data,file=sprintf("NP_normal_e_5_sim_%d.Rdata",i))
doses = dose_g_4
sim_data <- matrix(rnorm(1000*length(dose_g_4),means_g_4,sd[i]),nrow=1000,ncol=length(dose_g_4),byrow=T)
save(doses,sim_data,file=sprintf("NP_normal_g_4_sim_%d.Rdata",i))
doses = dose_e_4
sim_data <- matrix(rnorm(1000*length(dose_e_4),means_e_4,sd[i]),nrow=1000,ncol=length(dose_e_4),byrow=T)
save(doses,sim_data,file=sprintf("NP_normal_e_4_sim_%d.Rdata",i))
}
#log-normal data
sd    <- c(rep(0.209,2),rep(0.158,2))
for (i in 1:4){
means_g_5 <- 2*X_g_5%*%t(iS[i,,drop=F]) + bkg[i]
means_e_5 <- 2*X_e_5%*%t(iS[i,,drop=F]) + bkg[i]
means_g_4 <- 2*X_g_4%*%t(iS[i,,drop=F]) + bkg[i]
means_e_4 <- 2*X_e_4%*%t(iS[i,,drop=F]) + bkg[i]
doses = dose_g_5
sim_data <- matrix(rlnorm(1000*length(dose_g_5),log(means_g_5),sd[i]),nrow=1000,ncol=length(dose_g_5),byrow=T)
save(doses,sim_data,file=sprintf("NP_lognormal_g_5_sim_%d.Rdata",i))
doses = dose_e_5
sim_data <- matrix(rlnorm(1000*length(dose_e_5),log(means_e_5),sd[i]),nrow=1000,ncol=length(dose_e_5),byrow=T)
save(doses,sim_data,file=sprintf("NP_lognormal_e_5_sim_%d.Rdata",i))
doses = dose_g_4
sim_data <- matrix(rlnorm(1000*length(dose_g_4),log(means_g_4),sd[i]),nrow=1000,ncol=length(dose_g_4),byrow=T)
save(doses,sim_data,file=sprintf("NP_lognormal_g_4_sim_%d.Rdata",i))
doses = dose_e_4
sim_data <- matrix(rlnorm(1000*length(dose_e_4),log(means_e_4),sd[i]),nrow=1000,ncol=length(dose_e_4),byrow=T)
save(doses,sim_data,file=sprintf("NP_lognormal_e_4_sim_%d.Rdata",i))
}
#inv-gaussian data
sd    <- c(rep(227.8176,2),rep(18528.14,2))
for (i in 1:4){
means_g_5 <- 2*X_g_5%*%t(iS[i,,drop=F]) + bkg[i]
means_e_5 <- 2*X_e_5%*%t(iS[i,,drop=F]) + bkg[i]
means_g_4 <- 2*X_g_4%*%t(iS[i,,drop=F]) + bkg[i]
means_e_4 <- 2*X_e_4%*%t(iS[i,,drop=F]) + bkg[i]
doses = dose_g_5
sim_data <- matrix(rinvgauss(1000*length(dose_g_5),means_g_5,sd[i]),nrow=1000,ncol=length(dose_g_5),byrow=T)
save(doses,sim_data,file=sprintf("NP_invGaussian_g_5_sim_%d.Rdata",i))
doses = dose_e_5
sim_data <- matrix(rinvgauss(1000*length(dose_e_5),means_e_5,sd[i]),nrow=1000,ncol=length(dose_e_5),byrow=T)
save(doses,sim_data,file=sprintf("NP_invGaussian_e_5_sim_%d.Rdata",i))
doses = dose_g_4
sim_data <- matrix(rinvgauss(1000*length(dose_g_4),means_g_4,sd[i]),nrow=1000,ncol=length(dose_g_4),byrow=T)
save(doses,sim_data,file=sprintf("NP_invGaussian_g_4_sim_%d.Rdata",i))
doses = dose_e_4
sim_data <- matrix(rinvgauss(1000*length(dose_e_4),means_e_4,sd[i]),nrow=1000,ncol=length(dose_e_4),byrow=T)
save(doses,sim_data,file=sprintf("NP_invGaussian_e_4_sim_%d.Rdata",i))
}
setwd("..")
setwd("~/Documents/r_packages/RBMDS/RBMDS/Simulation")
setwd("~/Documents/r_packages/RBMDS/RBMDS/Simulation/Non-Parametric-2")
set.seed(90210)
#log-transformed for fitting as in ToxicR use
beta1 <- c(0.15486274,0.14054532,0.05806702,0.67421470,0.18371405,0.92821744,1.60669594,1.04508522)
beta2 <- c(0.677816175,0.322787366,3.356424380,0.102841870,0.009085238,0.087907971,0.344255936,0.100000000)
#add 481 to get the background
beta3 <- c(-45.715480,-53.668821,-14.266726, -8.066441,-1.620326 ,-1.800000,-1.800000 ,-1.800000)
beta4 <- c(-11.9566632,-19.9908719,-39.3450020,-16.3895141,-2.8191037,-4.5801731,-0.834784,-0.7000000)
iS <- rbind(beta1,beta2,beta3,beta4)
dose_g_5 <- rep(c(0,6.25,12.5,25,50,100),each=10)
dose_g_5 <- rep(c(0,6.25,12.5,25,50,100),each=10)
dose_e_5 <- rep(c(0,20,40,60,80,100),each=10)
dose_g_4 <- rep(c(0,12.5,25,50,100),each=10)
dose_e_4 <- rep(c(0,25,50,75,100),each=10)
library(splines2)
X_g_5 <- iSpline(dose_g_5,knots=seq(30,90,20))
X_e_5 <- iSpline(dose_e_5,knots=seq(30,90,20))
X_g_4 <- iSpline(dose_g_4,knots=seq(30,90,20))
X_e_4 <- iSpline(dose_e_4,knots=seq(30,90,20))
bkg = c(10.58,10.58,481,481)
sd    <- c(rep(2.28,2),rep(77.5,2))
#normal data
for (i in 1:4){
means_g_5 <- 2*X_g_5%*%t(iS[i,,drop=F]) + bkg[i]
means_e_5 <- 2*X_e_5%*%t(iS[i,,drop=F]) + bkg[i]
means_g_4 <- 2*X_g_4%*%t(iS[i,,drop=F]) + bkg[i]
means_e_4 <- 2*X_e_4%*%t(iS[i,,drop=F]) + bkg[i]
doses = dose_g_5
sim_data <- matrix(rnorm(1000*length(dose_g_5),means_g_5,sd[i]),nrow=1000,ncol=length(dose_g_5),byrow=T)
save(doses,sim_data,file=sprintf("NP_normal_g_5_sim_%d.Rdata",i))
doses = dose_e_5
sim_data <- matrix(rnorm(1000*length(dose_e_5),means_e_5,sd[i]),nrow=1000,ncol=length(dose_e_5),byrow=T)
save(doses,sim_data,file=sprintf("NP_normal_e_5_sim_%d.Rdata",i))
doses = dose_g_4
sim_data <- matrix(rnorm(1000*length(dose_g_4),means_g_4,sd[i]),nrow=1000,ncol=length(dose_g_4),byrow=T)
save(doses,sim_data,file=sprintf("NP_normal_g_4_sim_%d.Rdata",i))
doses = dose_e_4
sim_data <- matrix(rnorm(1000*length(dose_e_4),means_e_4,sd[i]),nrow=1000,ncol=length(dose_e_4),byrow=T)
save(doses,sim_data,file=sprintf("NP_normal_e_4_sim_%d.Rdata",i))
}
#log-normal data
sd    <- c(rep(0.209,2),rep(0.158,2))
for (i in 1:4){
means_g_5 <- 2*X_g_5%*%t(iS[i,,drop=F]) + bkg[i]
means_e_5 <- 2*X_e_5%*%t(iS[i,,drop=F]) + bkg[i]
means_g_4 <- 2*X_g_4%*%t(iS[i,,drop=F]) + bkg[i]
means_e_4 <- 2*X_e_4%*%t(iS[i,,drop=F]) + bkg[i]
doses = dose_g_5
sim_data <- matrix(rlnorm(1000*length(dose_g_5),log(means_g_5),sd[i]),nrow=1000,ncol=length(dose_g_5),byrow=T)
save(doses,sim_data,file=sprintf("NP_lognormal_g_5_sim_%d.Rdata",i))
doses = dose_e_5
sim_data <- matrix(rlnorm(1000*length(dose_e_5),log(means_e_5),sd[i]),nrow=1000,ncol=length(dose_e_5),byrow=T)
save(doses,sim_data,file=sprintf("NP_lognormal_e_5_sim_%d.Rdata",i))
doses = dose_g_4
sim_data <- matrix(rlnorm(1000*length(dose_g_4),log(means_g_4),sd[i]),nrow=1000,ncol=length(dose_g_4),byrow=T)
save(doses,sim_data,file=sprintf("NP_lognormal_g_4_sim_%d.Rdata",i))
doses = dose_e_4
sim_data <- matrix(rlnorm(1000*length(dose_e_4),log(means_e_4),sd[i]),nrow=1000,ncol=length(dose_e_4),byrow=T)
save(doses,sim_data,file=sprintf("NP_lognormal_e_4_sim_%d.Rdata",i))
}
#inv-gaussian data
sd    <- c(rep(227.8176,2),rep(18528.14,2))
for (i in 1:4){
means_g_5 <- 2*X_g_5%*%t(iS[i,,drop=F]) + bkg[i]
means_e_5 <- 2*X_e_5%*%t(iS[i,,drop=F]) + bkg[i]
means_g_4 <- 2*X_g_4%*%t(iS[i,,drop=F]) + bkg[i]
means_e_4 <- 2*X_e_4%*%t(iS[i,,drop=F]) + bkg[i]
doses = dose_g_5
sim_data <- matrix(rinvgauss(1000*length(dose_g_5),means_g_5,sd[i]),nrow=1000,ncol=length(dose_g_5),byrow=T)
save(doses,sim_data,file=sprintf("NP_invGaussian_g_5_sim_%d.Rdata",i))
doses = dose_e_5
sim_data <- matrix(rinvgauss(1000*length(dose_e_5),means_e_5,sd[i]),nrow=1000,ncol=length(dose_e_5),byrow=T)
save(doses,sim_data,file=sprintf("NP_invGaussian_e_5_sim_%d.Rdata",i))
doses = dose_g_4
sim_data <- matrix(rinvgauss(1000*length(dose_g_4),means_g_4,sd[i]),nrow=1000,ncol=length(dose_g_4),byrow=T)
save(doses,sim_data,file=sprintf("NP_invGaussian_g_4_sim_%d.Rdata",i))
doses = dose_e_4
sim_data <- matrix(rinvgauss(1000*length(dose_e_4),means_e_4,sd[i]),nrow=1000,ncol=length(dose_e_4),byrow=T)
save(doses,sim_data,file=sprintf("NP_invGaussian_e_4_sim_%d.Rdata",i))
}
setwd("..")
library(ToxicR)
model_list  = data.frame(model_list = c(rep("hill",2),rep("exp-3",3),rep("exp-5",3),rep("power",2)),
distribution_list =  c(c("normal","normal-ncv"),rep(c("normal","normal-ncv","lognormal"),2),
"normal", "normal-ncv"))
model_list2 = data.frame(model_list = c(rep("hill",1),rep("exp-3",1),rep("exp-5",1),rep("power",1)),
distribution_list =  c(rep(c("normal"),4)))
file_list = dir()
file_list = file_list[!(file_list %in% "results")]
options(warn=-1)
for (ii in 1:length(file_list)){
load(file_list[ii])
BMD_result_SD_ML1_mcmc = matrix(NA,1000,3)
BMD_result_SD_ML1_lapl = matrix(NA,1000,3)
BMD_result_SD_ML2_mcmc = matrix(NA,1000,3)
BMD_result_SD_ML2_lapl = matrix(NA,1000,3)
BMD_result_HB_ML1_mcmc = matrix(NA,1000,3)
BMD_result_HB_ML1_lapl = matrix(NA,1000,3)
BMD_result_HB_ML2_mcmc = matrix(NA,1000,3)
BMD_result_HB_ML2_lapl = matrix(NA,1000,3)
pprobs_ML1 = matrix(NA,1000,10)
pprobs_ML2 = matrix(NA,1000,4)
for (jj in 1:1000){#nrow(sim_data)){
print(sprintf("File:%d Iter:%d.",ii,jj))
###############################################################################
y = sim_data[jj,]
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1,samples = 75000)
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1,samples = 75000)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
BMD_result_SD_ML1_mcmc[jj,] = AA$bmd
BMD_result_SD_ML1_lapl[jj,] = AA_l$bmd
BMD_result_SD_ML2_mcmc[jj,] = BB$bmd
BMD_result_SD_ML2_lapl[jj,] = BB_l$bmd
pprobs_ML1[jj,] = AA$posterior_probs
pprobs_ML2[jj,] = BB$posterior_probs
###############################################################################
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025,samples = 75000)
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025,samples = 75000)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
BMD_result_HB_ML1_mcmc[jj,] = AA$bmd
BMD_result_HB_ML1_lapl[jj,] = AA_l$bmd
BMD_result_HB_ML2_mcmc[jj,] = BB$bmd
BMD_result_HB_ML2_lapl[jj,] = BB_l$bmd
################################################################################
}
save(BMD_result_HB_ML1_lapl,BMD_result_HB_ML2_lapl,
BMD_result_HB_ML1_mcmc,BMD_result_HB_ML2_mcmc,
BMD_result_SD_ML1_lapl,BMD_result_SD_ML2_lapl,
BMD_result_SD_ML1_mcmc,BMD_result_SD_ML2_mcmc,
pprobs_ML1,pprobs_ML2,file=sprintf("./results/simrun_%s",file_list[ii]))
}
rm(list=objects())
library(ToxicR)
model_list  = data.frame(model_list = c(rep("hill",2),rep("exp-3",3),rep("exp-5",3),rep("power",2)),
distribution_list =  c(c("normal","normal-ncv"),rep(c("normal","normal-ncv","lognormal"),2),
"normal", "normal-ncv"))
model_list2 = data.frame(model_list = c(rep("hill",1),rep("exp-3",1),rep("exp-5",1),rep("power",1)),
distribution_list =  c(rep(c("normal"),4)))
file_list = dir()
file_list = file_list[!(file_list %in% "results")]
ls()
dir()
setwd("~/Documents/r_packages/RBMDS/RBMDS/Simulation/Non-Parametric-2")
library(ToxicR)
model_list  = data.frame(model_list = c(rep("hill",2),rep("exp-3",3),rep("exp-5",3),rep("power",2)),
distribution_list =  c(c("normal","normal-ncv"),rep(c("normal","normal-ncv","lognormal"),2),
"normal", "normal-ncv"))
model_list2 = data.frame(model_list = c(rep("hill",1),rep("exp-3",1),rep("exp-5",1),rep("power",1)),
distribution_list =  c(rep(c("normal"),4)))
file_list = dir()
file_list = file_list[!(file_list %in% "results")]
file_list
for (ii in 1:length(file_list)){
load(file_list[ii])
BMD_result_SD_ML1_mcmc = matrix(NA,1000,3)
BMD_result_SD_ML1_lapl = matrix(NA,1000,3)
BMD_result_SD_ML2_mcmc = matrix(NA,1000,3)
BMD_result_SD_ML2_lapl = matrix(NA,1000,3)
BMD_result_HB_ML1_mcmc = matrix(NA,1000,3)
BMD_result_HB_ML1_lapl = matrix(NA,1000,3)
BMD_result_HB_ML2_mcmc = matrix(NA,1000,3)
BMD_result_HB_ML2_lapl = matrix(NA,1000,3)
pprobs_ML1 = matrix(NA,1000,10)
pprobs_ML2 = matrix(NA,1000,4)
for (jj in 1:1000){#nrow(sim_data)){
print(sprintf("File:%d Iter:%d.",ii,jj))
###############################################################################
y = sim_data[jj,]
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1,samples = 75000)
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "mcmc",BMD_TYPE = 'sd',BMR = 1,samples = 75000)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'sd',BMR = 1)
BMD_result_SD_ML1_mcmc[jj,] = AA$bmd
BMD_result_SD_ML1_lapl[jj,] = AA_l$bmd
BMD_result_SD_ML2_mcmc[jj,] = BB$bmd
BMD_result_SD_ML2_lapl[jj,] = BB_l$bmd
pprobs_ML1[jj,] = AA$posterior_probs
pprobs_ML2[jj,] = BB$posterior_probs
###############################################################################
AA <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025,samples = 75000)
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "mcmc",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025,samples = 75000)
AA_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list,
fit_type = "laplace",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
BB_l <- ma_continuous_fit(as.matrix(doses),as.matrix(y),model_list=model_list2,
fit_type = "laplace",BMD_TYPE = 'hybrid',BMR = 0.05,point_p = 0.025)
BMD_result_HB_ML1_mcmc[jj,] = AA$bmd
BMD_result_HB_ML1_lapl[jj,] = AA_l$bmd
BMD_result_HB_ML2_mcmc[jj,] = BB$bmd
BMD_result_HB_ML2_lapl[jj,] = BB_l$bmd
################################################################################
}
save(BMD_result_HB_ML1_lapl,BMD_result_HB_ML2_lapl,
BMD_result_HB_ML1_mcmc,BMD_result_HB_ML2_mcmc,
BMD_result_SD_ML1_lapl,BMD_result_SD_ML2_lapl,
BMD_result_SD_ML1_mcmc,BMD_result_SD_ML2_mcmc,
pprobs_ML1,pprobs_ML2,file=sprintf("./results/simrun_%s",file_list[ii]))
}
