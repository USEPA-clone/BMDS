name: build

on:
  push:
    branches:
      - release
    tags:
      - v3.*

jobs:

  build-windows:
    runs-on: windows-2019
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - uses: goanpeca/setup-miniconda@v1.7.0
      with:
        miniconda-version: "latest"
        activate-environment: buildenv
    - name: build
      shell: bash -l {0}
      run: |
        conda info
        conda list

  build-mac:
    runs-on: macos-10.15
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: build
      shell: bash -l {0}
      run: |
        # install build chain
        brew install gcc gsl automake cmake make libtool
        ln -s /usr/local/bin/glibtoolize /usr/local/bin/libtoolize
        export "CC=/usr/local/bin/gcc-10"
        export "CXX=/usr/local/bin/g++-10"
        export "LDFLAGS=-L/usr/local/lib/"
        export "CPPFLAGS=-I/usr/local/include"

        # install dependencies
        wget https://gitlab.com/libeigen/eigen/-/archive/3.3.7/eigen-3.3.7.tar.gz
        wget https://github.com/stevengj/nlopt/archive/v2.6.2.tar.gz
        # build eigen
        tar -xvf ./eigen-3.3.7.tar.gz
        cd eigen-3.3.7 && mkdir build && cd build && cmake .. && make install
        cd ../.. && rm -rf eigen-3.3.7/ && rm eigen-3.3.7.tar.gz
        # build nlopt
        tar -xvf ./v2.6.2.tar.gz
        cd ./nlopt-2.6.2/ && mkdir build && cd build && cmake .. && make install
        cd ../..  && rm -rf nlopt-2.6.2/ && rm v2.6.2.tar.gz

        # build bmds
        rm -rf ../BMD_DLL_COMPILE
        mkdir ../BMD_DLL_COMPILE
        # disable openmp support on mac by default
        sed -i 's/.\/configure EIGEN_INCLUDE/.\/configure \-\-disable\-openmp EIGEN_INCLUDE/g' ./create_dll_compile.bash
        ./create_dll_compile.bash
        cd ../BMD_DLL_COMPILE
        make

        # copy to artifact location
        mkdir -p ../RBMDS/build/mac
        cp .libs/* ../RBMDS/build/mac
    - uses: actions/upload-artifact@v2
      with:
        name: mac-build
        path: build/mac

  build-linux:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: build
      run: |
        docker build -t rbmds:latest .
        rm -rf ./build/linux
        mkdir -p ./build/linux
        docker run --rm -v $(pwd)/build/linux:/tmp rbmds:latest sh -c "cp -r /rbmds/* /tmp"
    - uses: actions/upload-artifact@v2
      with:
        name: linux-build
        path: build/linux
