# temp = which(Dens$x < max(doses))
# D1_y = Dens$y[temp]
# D1_x = Dens$x[temp]
# Do I need to stack up the dataset?
temp_density<-data.frame(matrix(0,length(temp),3))
temp_density[,2]=fit$model
temp_density[,1]=temp
temp_density[,3]=A$posterior_probs[i]
assign(paste("t",i,sep="_"),temp_density)
}
# So far add the 5 models 01/24/2021
t_combine<-rbind(t_1,t_2,t_3,t_4,t_5)
# This part is needed to get MA density plots
# Model ~xxx..
idx <- sample(1:5, length(A$Individual_Model_1$mcmc_result$BMD_samples),replace=TRUE,prob=A$posterior_probs)
m1<-A$Individual_Model_1
c1<-m1$mcmc_result$BMD_samples
m2<-A$Individual_Model_2
c2<-m2$mcmc_result$BMD_samples
m3<-A$Individual_Model_3
c3<-m3$mcmc_result$BMD_samples
m4<-A$Individual_Model_4
c4<-m4$mcmc_result$BMD_samples
m5<-A$Individual_Model_5
c5<-m5$mcmc_result$BMD_samples
# This part should be dynamically assigned...
combine_samples<-data.frame(cbind(c1,c2,c3,c4,c5))
# Select MA values
BMD_MA<-matrix(NA,length(A$Individual_Model_1$mcmc_result$BMD_samples),1)
for (i in 1:length(A$Individual_Model_1$mcmc_result$BMD_samples)){
BMD_MA[i,1]<-combine_samples[sample(nrow(combine_samples), size=1, replace=TRUE),idx[i]]
}
BMD_MA<-data.frame(BMD_MA)
t_ma<-BMD_MA %>% mutate(X1=BMD_MA,X2="Model Average",X3=1)
#BMD_CDF should be shown here - it
t_ma<-t_ma %>% select(X1,X2,X3)
t_combine2<-rbind(t_combine,t_ma)
t_combine3<-t_combine2 %>% filter(as.numeric(X3)>0.005)
# John's comment- I want to fill the color as
p<-ggplot()+
stat_density_ridges(data=t_combine3, aes(x=X1, y=fct_reorder(X2,X3,.desc=T),alpha=sqrt(X3)),
calc_ecdf=TRUE,quantiles=c(0.025,0.975),na.rm=T,quantile_lines=T,fill="blue",scale=0.5)+
xlim(c(0,quantile(t_combine3$X1,0.999)))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
scale_fill_manual(
name = "Probability",
values = c("#FF0000A0", "#A0A0A0A0", "#FF0000A0"),
labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]")
)+
labs(x="Dose Level (Dotted Line : MA BMD)",y="", title="Density plots for each fitted model (Fit type: MCMC)")+theme_classic()
p2<-p+
stat_density_ridges(data=t_combine3, aes(x=X1, y=fct_reorder(X2,X3,.desc=T), fill = factor(stat(quantile))),
geom = "density_ridges_gradient",
calc_ecdf = TRUE, quantiles = c(0.025, 0.975), scale=0.5
)+ scale_fill_manual(
name = "Probability",
values = c("#FF0000A0", "NA", "#FF0000A0"),
labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]")
)+theme(legend.position="none")
p2
p2<-p+
stat_density_ridges(data=t_combine3, aes(x=X1, y=fct_reorder(X2,X3,.desc=T), fill = factor(stat(quantile))),
geom = "density_ridges_gradient",
calc_ecdf = TRUE, quantiles = c(0.025, 0.975), scale=0.5
)+ scale_fill_manual(
name = "Probability",
values = c("#FF0000A0", "NA", "#FF0000A0"),
labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]")
)+theme(legend.position="none")
p2
A
# Construct bmd sample plots for mcmc
class_list <- names(A)
fit_idx    <- grep("Individual_Model",class_list)
qprob=0.05
#Dose levels
data<-A$Individual_Model_1$data
doses<-data[,1]
for (i in fit_idx){
# Loop for the model
fit<-A[[i]]
test_doses <- seq(min(doses),max(doses)*1.03,(max(doses)*1.03-min(doses))/100)
#probs <- (0.5+fit$data[,2,drop=T])/(1.0 + fit$data[,3,drop=T])
if (fit$model=="hill"){
Q <- apply(fit$mcmc_result$PARM_samples,1,cont_hill_f, d=test_doses)
}
if (fit$model=="exp-3"){
Q <- apply(fit$mcmc_result$PARM_samples,1,cont_exp_3_f, d=test_doses)
}
if (fit$model=="exp-5"){
Q <- apply(fit$mcmc_result$PARM_samples,1,cont_exp_5_f, d=test_doses)
}
if (fit$model=="power"){
Q <- apply(fit$mcmc_result$PARM_samples,1,cont_power_f, d=test_doses)
}
if (fit$model=="FUNL"){
Q <- apply(fit$mcmc_result$PARM_samples,1,cont_FUNL_f, d=test_doses)
}
temp <- fit$mcmc_result$BMD_samples[!is.nan(fit$mcmc_result$BMD_samples)]
temp <- temp[!is.infinite(temp)]
# Q <- t(Q)
#
# me <- colMeans(Q)
# lq <- apply(Q,2,quantile, probs = qprob)
# uq <- apply(Q,2,quantile, probs = 1-qprob)
Dens =  density(temp,cut=c(max(doses)))
# what is this 0.4 means? Scale?
# normalize it?-- We don't need it actually here
# Dens$y = Dens$y/max(Dens$y) * max(probs)
# temp = which(Dens$x < max(doses))
# D1_y = Dens$y[temp]
# D1_x = Dens$x[temp]
# Do I need to stack up the dataset?
temp_density<-data.frame(matrix(0,length(temp),3))
temp_density[,2]=fit$model
temp_density[,1]=temp
temp_density[,3]=A$posterior_probs[i]
assign(paste("t",i,sep="_"),temp_density)
}
# So far add the 5 models 01/24/2021
t_combine<-rbind(t_1,t_2,t_3,t_4,t_5)
# This part is needed to get MA density plots
# Model ~xxx..
idx <- sample(1:5, length(A$Individual_Model_1$mcmc_result$BMD_samples),replace=TRUE,prob=A$posterior_probs)
m1<-A$Individual_Model_1
c1<-m1$mcmc_result$BMD_samples
m2<-A$Individual_Model_2
c2<-m2$mcmc_result$BMD_samples
# Construct bmd sample plots for mcmc
class_list <- names(A)
fit_idx    <- grep("Individual_Model",class_list)
qprob=0.05
#Dose levels
data<-A$Individual_Model_1$data
doses<-data[,1]
for (i in fit_idx){
# Loop for the model
fit<-A[[i]]
test_doses <- seq(min(doses),max(doses)*1.03,(max(doses)*1.03-min(doses))/100)
#probs <- (0.5+fit$data[,2,drop=T])/(1.0 + fit$data[,3,drop=T])
if (fit$model=="hill"){
Q <- apply(fit$mcmc_result$PARM_samples,1,cont_hill_f, d=test_doses)
}
if (fit$model=="exp-3"){
Q <- apply(fit$mcmc_result$PARM_samples,1,cont_exp_3_f, d=test_doses)
}
if (fit$model=="exp-5"){
Q <- apply(fit$mcmc_result$PARM_samples,1,cont_exp_5_f, d=test_doses)
}
if (fit$model=="power"){
Q <- apply(fit$mcmc_result$PARM_samples,1,cont_power_f, d=test_doses)
}
if (fit$model=="FUNL"){
Q <- apply(fit$mcmc_result$PARM_samples,1,cont_FUNL_f, d=test_doses)
}
temp <- fit$mcmc_result$BMD_samples[!is.nan(fit$mcmc_result$BMD_samples)]
temp <- temp[!is.infinite(temp)]
# Q <- t(Q)
#
# me <- colMeans(Q)
# lq <- apply(Q,2,quantile, probs = qprob)
# uq <- apply(Q,2,quantile, probs = 1-qprob)
Dens =  density(temp,cut=c(max(doses)))
# what is this 0.4 means? Scale?
# normalize it?-- We don't need it actually here
# Dens$y = Dens$y/max(Dens$y) * max(probs)
# temp = which(Dens$x < max(doses))
# D1_y = Dens$y[temp]
# D1_x = Dens$x[temp]
# Do I need to stack up the dataset?
temp_density<-data.frame(matrix(0,length(temp),3))
temp_density[,2]=fit$model
temp_density[,1]=temp
temp_density[,3]=A$posterior_probs[i]
assign(paste("t",i,sep="_"),temp_density)
}
# So far add the 5 models 01/24/2021
t_combine<-rbind(t_1,t_2,t_3,t_4,t_5)
# This part is needed to get MA density plots
# Model ~xxx..
idx <- sample(1:5, length(A$Individual_Model_1$mcmc_result$BMD_samples),replace=TRUE,prob=A$posterior_probs)
# This part is needed to get MA density plots
# Model ~xxx..
idx <- sample(1:5, length(A$Individual_Model_1$mcmc_result$BMD_samples),replace=TRUE,prob=A$posterior_probs)
prob=A$posterior_probs
prop
A$posterior_probs
A$posterior_probs
A$bmd
A
# Construct bmd sample plots for mcmc
class_list <- names(A)
fit_idx    <- grep("Individual_Model",class_list)
qprob=0.05
#Dose levels
data<-A$Individual_Model_1$data
doses<-data[,1]
for (i in fit_idx){
# Loop for the model
fit<-A[[i]]
test_doses <- seq(min(doses),max(doses)*1.03,(max(doses)*1.03-min(doses))/100)
probs <- (0.5+fit$data[,2,drop=T])/(1.0 + fit$data[,3,drop=T])
if (fit$model=="hill"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_hill_f, d=test_doses)
}
if (fit$model=="gamma"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_gamma_f, d=test_doses)
}
if (fit$model=="logistic"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_logist_f, d=test_doses)
}
if (fit$model=="log-logistic"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_llogist_f, d=test_doses)
}
if (fit$model=="probit"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_probit_f, d=test_doses)
}
if (fit$model=="log-probit"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_lprobit_f, d=test_doses)
}
if (fit$model=="multistage"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_multistage_f, d=test_doses)
}
if (fit$model=="qlinear"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_qlinear_f, d=test_doses)
}
temp <- fit$mcmc_result$BMD_samples[!is.nan(fit$mcmc_result$BMD_samples)]
temp <- temp[!is.infinite(temp)]
# Q <- t(Q)
#
# me <- colMeans(Q)
# lq <- apply(Q,2,quantile, probs = qprob)
# uq <- apply(Q,2,quantile, probs = 1-qprob)
Dens =  density(temp,cut=c(max(doses)))
# what is this 0.4 means? Scale?
# normalize it?-- We don't need it actually here
# Dens$y = Dens$y/max(Dens$y) * max(probs)
# temp = which(Dens$x < max(doses))
# D1_y = Dens$y[temp]
# D1_x = Dens$x[temp]
# Do I need to stack up the dataset?
temp_density<-data.frame(matrix(0,length(temp),3))
temp_density[,2]=fit$model
temp_density[,1]=temp
temp_density[,3]=A$posterior_probs[i]
assign(paste("t",i,sep="_"),temp_density)
}
t_combine<-rbind(t_1,t_2,t_3,t_4,t_5,t_6,t_7,t_8,t_9)
# This part is needed to get MA density plots
# Model ~xxx..
idx <- sample(1:9, length(A$Individual_Model_1$mcmc_result$BMD_samples),replace=TRUE,prob=A$posterior_probs)
m1<-A$Individual_Model_1
c1<-m1$mcmc_result$BMD_samples
m2<-A$Individual_Model_2
c2<-m2$mcmc_result$BMD_samples
m3<-A$Individual_Model_3
c3<-m3$mcmc_result$BMD_samples
m4<-A$Individual_Model_4
c4<-m4$mcmc_result$BMD_samples
m5<-A$Individual_Model_5
c5<-m5$mcmc_result$BMD_samples
m6<-A$Individual_Model_6
c6<-m6$mcmc_result$BMD_samples
m7<-A$Individual_Model_7
c7<-m7$mcmc_result$BMD_samples
m8<-A$Individual_Model_8
c8<-m5$mcmc_result$BMD_samples
m9<-A$Individual_Model_9
c9<-m9$mcmc_result$BMD_samples
combine_samples<-data.frame(cbind(c1,c2,c3,c4,c5,c6,c7,c8,c9))
# Select MA values
BMD_MA<-matrix(NA,length(A$Individual_Model_1$mcmc_result$BMD_samples),1)
for (i in 1:length(A$Individual_Model_1$mcmc_result$BMD_samples)){
BMD_MA[i,1]<-combine_samples[sample(nrow(combine_samples), size=1, replace=TRUE),idx[i]]
}
BMD_MA<-data.frame(BMD_MA)
t_ma<-BMD_MA %>% mutate(X1=BMD_MA,X2="Model Average",X3=1)
#BMD_CDF should be shown here - it
t_ma<-t_ma %>% select(X1,X2,X3)
t_combine2<-rbind(t_combine,t_ma)
t_combine2<-t_combine2 %>% filter(as.numeric(X3)>0.05)
# From samples
p<-ggplot()+
stat_density_ridges(data=t_combine2, aes(x=X1, y=fct_reorder(X2,X3,.desc=T),alpha=sqrt(X3)),
calc_ecdf=TRUE,quantiles=c(0.025,0.975),na.rm=T,quantile_lines=T,fill="blue")+
xlim(c(0,quantile(t_combine$X1,0.999)))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
scale_fill_manual(
name = "Probability",
values = c("#FF0000A0", "#A0A0A0A0", "#FF0000A0"),
labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]")
)+
labs(x="Dose Level (Dotted Line : MA BMD)",y="", title="Density plots for each fitted model (Fit type: MCMC)")+theme_classic()
p2<-p+
stat_density_ridges(data=t_combine2, aes(x=X1, y=fct_reorder(X2,X3,.desc=T), fill = factor(stat(quantile))),
geom = "density_ridges_gradient",
calc_ecdf = TRUE, quantiles = c(0.025, 0.975)
)+ scale_fill_manual(
name = "Probability",
values = c("#FF0000A0", "NA", "#FF0000A0"),
labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]")
)+theme(legend.position="none")
p2
# From samples
p<-ggplot()+
stat_density_ridges(data=t_combine2, aes(x=X1, y=fct_reorder(X2,X3,.desc=T),alpha=sqrt(X3)),
calc_ecdf=TRUE,quantiles=c(0.025,0.975),na.rm=T,quantile_lines=T,fill="blue",scale=0.7)+
xlim(c(0,quantile(t_combine$X1,0.999)))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
scale_fill_manual(
name = "Probability",
values = c("#FF0000A0", "#A0A0A0A0", "#FF0000A0"),
labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]")
)+
labs(x="Dose Level (Dotted Line : MA BMD)",y="", title="Density plots for each fitted model (Fit type: MCMC)")+theme_classic()
p2<-p+
stat_density_ridges(data=t_combine2, aes(x=X1, y=fct_reorder(X2,X3,.desc=T), fill = factor(stat(quantile))),
geom = "density_ridges_gradient",
calc_ecdf = TRUE, quantiles = c(0.025, 0.975),scale=0.7
)+ scale_fill_manual(
name = "Probability",
values = c("#FF0000A0", "NA", "#FF0000A0"),
labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]")
)+theme(legend.position="none")
p2
# From samples
p<-ggplot()+
stat_density_ridges(data=t_combine2, aes(x=X1, y=fct_reorder(X2,X3,.desc=T),alpha=sqrt(X3)),
calc_ecdf=TRUE,quantiles=c(0.025,0.975),na.rm=T,quantile_lines=T,fill="blue",scale=0.8)+
xlim(c(0,quantile(t_combine$X1,0.999)))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
scale_fill_manual(
name = "Probability",
values = c("#FF0000A0", "#A0A0A0A0", "#FF0000A0"),
labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]")
)+
labs(x="Dose Level (Dotted Line : MA BMD)",y="", title="Density plots for each fitted model (Fit type: MCMC)")+theme_classic()
p2<-p+
stat_density_ridges(data=t_combine2, aes(x=X1, y=fct_reorder(X2,X3,.desc=T), fill = factor(stat(quantile))),
geom = "density_ridges_gradient",
calc_ecdf = TRUE, quantiles = c(0.025, 0.975),scale=0.8
)+ scale_fill_manual(
name = "Probability",
values = c("#FF0000A0", "NA", "#FF0000A0"),
labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]")
)+theme(legend.position="none")
p2
# From samples
p<-ggplot()+
stat_density_ridges(data=t_combine2, aes(x=X1, y=fct_reorder(X2,X3,.desc=T),alpha=sqrt(X3)),
calc_ecdf=TRUE,quantiles=c(0.025,0.975),na.rm=T,quantile_lines=T,fill="blue",scale=0.9)+
xlim(c(0,quantile(t_combine$X1,0.999)))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
scale_fill_manual(
name = "Probability",
values = c("#FF0000A0", "#A0A0A0A0", "#FF0000A0"),
labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]")
)+
labs(x="Dose Level (Dotted Line : MA BMD)",y="", title="Density plots for each fitted model (Fit type: MCMC)")+theme_classic()
p2<-p+
stat_density_ridges(data=t_combine2, aes(x=X1, y=fct_reorder(X2,X3,.desc=T), fill = factor(stat(quantile))),
geom = "density_ridges_gradient",
calc_ecdf = TRUE, quantiles = c(0.025, 0.975),scale=0.9
)+ scale_fill_manual(
name = "Probability",
values = c("#FF0000A0", "NA", "#FF0000A0"),
labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]")
)+theme(legend.position="none")
p2
# From samples
p<-ggplot()+
stat_density_ridges(data=t_combine2, aes(x=X1, y=fct_reorder(X2,X3,.desc=T),alpha=sqrt(X3)), group=y
calc_ecdf=TRUE,quantiles=c(0.025,0.975),na.rm=T,quantile_lines=T,fill="blue",scale=0.9)+
xlim(c(0,quantile(t_combine$X1,0.999)))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
scale_fill_manual(
name = "Probability",
values = c("#FF0000A0", "#A0A0A0A0", "#FF0000A0"),
labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]")
)+
labs(x="Dose Level (Dotted Line : MA BMD)",y="", title="Density plots for each fitted model (Fit type: MCMC)")+theme_classic()
# From samples
p<-ggplot()+
stat_density_ridges(data=t_combine2, aes(x=X1, y=fct_reorder(X2,X3,.desc=T),alpha=sqrt(X3)), group=X2
calc_ecdf=TRUE,quantiles=c(0.025,0.975),na.rm=T,quantile_lines=T,fill="blue",scale=0.9)+
xlim(c(0,quantile(t_combine$X1,0.999)))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
scale_fill_manual(
name = "Probability",
values = c("#FF0000A0", "#A0A0A0A0", "#FF0000A0"),
labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]")
)+
labs(x="Dose Level (Dotted Line : MA BMD)",y="", title="Density plots for each fitted model (Fit type: MCMC)")+theme_classic()
# From samples
p<-ggplot()+
stat_density_ridges(data=t_combine2, aes(x=X1, y=fct_reorder(X2,X3,.desc=T),group=X2 ,alpha=sqrt(X3)),
calc_ecdf=TRUE,quantiles=c(0.025,0.975),na.rm=T,quantile_lines=T,fill="blue",scale=0.9)+
xlim(c(0,quantile(t_combine$X1,0.999)))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
scale_fill_manual(
name = "Probability",
values = c("#FF0000A0", "#A0A0A0A0", "#FF0000A0"),
labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]")
)+
labs(x="Dose Level (Dotted Line : MA BMD)",y="", title="Density plots for each fitted model (Fit type: MCMC)")+theme_classic()
p
p2<-p+
stat_density_ridges(data=t_combine2, aes(x=X1, y=fct_reorder(X2,X3,.desc=T), group=X2 fill = factor(stat(quantile))),
geom = "density_ridges_gradient",
calc_ecdf = TRUE, quantiles = c(0.025, 0.975),scale=0.9
)+ scale_fill_manual(
name = "Probability",
values = c("#FF0000A0", "NA", "#FF0000A0"),
labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]")
)+theme(legend.position="none")
p2<-p+
stat_density_ridges(data=t_combine2, aes(x=X1, y=fct_reorder(X2,X3,.desc=T), group=X2 ,fill = factor(stat(quantile))),
geom = "density_ridges_gradient",
calc_ecdf = TRUE, quantiles = c(0.025, 0.975),scale=0.9
)+ scale_fill_manual(
name = "Probability",
values = c("#FF0000A0", "NA", "#FF0000A0"),
labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]")
)+theme(legend.position="none")
p2
p2<-p+
stat_density_ridges(data=t_combine2, aes(x=X1, y=fct_reorder(X2,X3,.desc=T), group=X2 ,fill = factor(stat(quantile))),
geom = "density_ridges_gradient",
calc_ecdf = TRUE, quantiles = c(0.025, 0.975),scale=0.9
)+ scale_fill_manual(
name = "Probability",
values = c("#FF0000A0", "NA", "#FF0000A0"),
labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]")
)+theme(legend.position="none")+scale_discrete_manual()
p2<-p+
stat_density_ridges(data=t_combine2, aes(x=X1, y=fct_reorder(X2,X3,.desc=T), group=X2 ,fill = factor(stat(quantile))),
geom = "density_ridges_gradient",
calc_ecdf = TRUE, quantiles = c(0.025, 0.975),scale=0.9
)+ scale_fill_manual(
name = "Probability",
values = c("#FF0000A0", "NA", "#FF0000A0"),
labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]")
)+theme(legend.position="none")
ggplot()+geom_density(data=t_combine2,aes(x=X1,y=X2))+facet_grid()
ggplot()+geom_density(data=t_combine2,aes(x=X1,y=fct_reorder(X2,X3,.desc=T)))
t_combine2
ggplot()+geom_density(data=t_combine2,aes(x=X1, group=X2)))
ggplot()+geom_density(data=t_combine2,aes(x=X1, group=X2))
ggplot()+geom_density(data=t_combine2,aes(x=X1, group=X2))+facet_grid(rows=t_combine2$X2)
ggplot()+geom_density(data=t_combine2,aes(x=X1, group=X2))+facet_grid(rows=X2)
ggplot(data=t_combine2)+geom_density(aes(x=X1, group=X2))+facet_grid(X2~)
ggplot(data=t_combine2)+
geom_density(aes(x=as.numeric(X1)))+facet_grid(X2~)
ggplot(data=t_combine2)+
geom_density(aes(x=as.numeric(X1)))+facet_grid(X2~.)
ggplot(data=t_combine2)+
geom_density(aes(x=as.numeric(X1)))+facet_grid(fct_reorder(X2,X3,.desc=T)~.)
p
ggplot(data=t_combine2)+
geom_density(aes(x=as.numeric(X1)),group=X2)+facet_grid(fct_reorder(X2,X3,.desc=T)~.)
ggplot(data=t_combine2)+
geom_density(aes(x=as.numeric(X1)),group=fct_reorder(X2,X3,.desc=T))+facet_grid(fct_reorder(X2,X3,.desc=T)~.)
t_combine2
ggplot(data=t_combine2)+
geom_density(aes(x=as.numeric(X1)))+facet_grid(fct_reorder(X2,X3,.desc=T)~.)
fct_reorder(X2,X3,.desc=T)
ggplot(data=t_combine2,facets=fct_reorder(X2,X3,.desc=T))+
geom_density(aes(x=as.numeric(X1)))+facet_grid(fct_reorder(X2,X3,.desc=T)~.)
ggplot(data=t_combine2,facets=fct_reorder(X2,X3,.desc=F))+
geom_density(aes(x=as.numeric(X1)))+facet_grid(fct_reorder(X2,X3,.desc=F)~.)
?>geom_density
?geom_density
ggplot(data=t_combine2,facets=fct_reorder(X2,X3,.desc=F),fill=X2)+
geom_density(aes(x=as.numeric(X1)))+facet_grid(fct_reorder(X2,X3,.desc=F)~.)
ggplot(data=t_combine2)+
geom_density(aes(x=as.numeric(X1,fill=X2)))+facet_grid(fct_reorder(X2,X3,.desc=F)~.)
ggplot(data=t_combine2)+
geom_density(aes(x=as.numeric(X1,fill=X2)))+facet_grid(fct_reorder(X2,X3,.desc=F)~.)+theme_classic()
# Load packages
library(ToxicR)
library(ggridges)
library(forcats)
library(ggplot2)
library(dplyr)
# Sample Data - Dichotomous Example
mData <- matrix(c(0, 2,50,
1, 2,50,
3, 10, 50,
16, 18,50,
32, 18,50,
33, 17,50),nrow=6,ncol=3,byrow=T)
# Single model fitting- MCMC
A_single_mcmc<-single_dichotomous_fit(mData[,1],mData[,2],mData[,3], model_type="hill",fit_type="mcmc")
.plot.BMDdich_fit_MCMC(A_single_mcmc)
# Single model fitting- Laplace
A_single_laplace = single_dichotomous_fit(mData[,1],mData[,2],mData[,3],model_type="hill",fit_type = "laplace")
.plot.BMDdich_fit_maximized(A_single_laplace)
# Dichotomous - Model Average
# Case 1: Dichotomous - MCMC Fitting
A = ma_dichotomous_fit(mData[,1],mData[,2],mData[,3],fit_type = "mcmc")
# Test 1. Dichotomous MA Clevland Plot
.cleveland_plot.BMDdichotomous_MA(A)
# Test 2. Dichotomous MA Density Plot - Update for base-color later
.plot.density.BMDdichotomous_MA_MCMC(A)
#Base plot - MA density seems little bit odd
.plot.BMDdichotomous_MA(A)
# Test 2. Dichotomous MA Density Plot - Update for base-color later
.plot.density.BMDdichotomous_MA_MCMC(A)
5.38/2+4.99+1.29/2+1.99/2+3.29/2+3+1.78/2+1.38/2+1.58/2+1
24.79-7
(24.79-7)/2
(24.79-7)/2+7
