.plot.BMDcontinuous_MA <- function(A,qprob=0.05,...){
# Should be matched with BMD_MA plots
# SL 06/02 Updated
# Later, we'll have it
density_col="blueviolet"
credint_col="azure2"
class_list <- names(A)
fit_idx    <- grep("Individual_Model",class_list)
#plot the model average curve
if ("BMDcontinuous_MA_mcmc" %in% class(A)){ # mcmc run
n_samps <- nrow(A[[fit_idx[1]]]$mcmc_result$PARM_samples)
data_d   <-  A[[fit_idx[1]]]$data
max_dose <- max(data_d[,1])
min_dose <- min(data_d[,1])
test_doses <- seq(min_dose,max_dose,(max_dose-min_dose)/200);
ma_samps <- sample(fit_idx,n_samps, replace=TRUE,prob = A$posterior_probs)
temp_f   <- matrix(0,n_samps,length(test_doses))
temp_bmd <- rep(0,length(test_doses))
# 06/07/21 SL Update
IS_SUFFICIENT=FALSE
if (ncol(data_d) == 4 ){ #sufficient statistics
IS_SUFFICIENT = TRUE
mean <- data_d[,2,drop=F]
se   <- data_d[,4,drop=F]/sqrt(fit$data[,3,drop=F])
doses = data_d[,1,drop=F]
uerror <- mean+2*se
lerror <- mean-2*se
dose = c(doses,doses)
Response = c(uerror,lerror)
lm_fit = lm(mean ~ doses,weights = 1/se*se)
}else{
Response <- data_d[,2,drop=F]
doses = data_d[,1,drop=F]
lm_fit = lm(Response~doses)
}
if (coefficients(lm_fit)[2] < 0){
decrease = TRUE
}else{
decrease = FALSE
}
for (ii in 1:n_samps){
fit <- A[[fit_idx[ma_samps[ii]]]]
if (fit$model=="FUNL"){
temp_f[ii,] <- cont_FUNL_f(fit$mcmc_result$PARM_samples[ii,],test_doses)
temp_bmd[ii] <- fit$mcmc_result$BMD_samples[ii]
}
if (fit$model=="hill"){
temp_f[ii,] <- cont_hill_f(fit$mcmc_result$PARM_samples[ii,],test_doses)
temp_bmd[ii] <- fit$mcmc_result$BMD_samples[ii]
}
if (fit$model=="exp-3"){
temp_f[ii,] <- cont_exp_3_f(fit$mcmc_result$PARM_samples[ii,],test_doses,decrease)
temp_bmd[ii] <- fit$mcmc_result$BMD_samples[ii]
}
if (fit$model=="exp-5"){
temp_f[ii,] <- cont_exp_5_f(fit$mcmc_result$PARM_samples[ii,],test_doses)
temp_bmd[ii] <- fit$mcmc_result$BMD_samples[ii]
}
if (fit$model=="power"){
temp_f[ii,] <- cont_power_f(fit$mcmc_result$PARM_samples[ii,],test_doses)
temp_bmd[ii] <- fit$mcmc_result$BMD_samples[ii]
}
}
temp_f[is.infinite(temp_f)] = NA
temp_f[abs(temp_f) > 1e10] = NA
# If temp_bmd== Inf then delete;
# Updated 06/02/21 SL
temp_bmd[is.infinite(temp_bmd)] = NA
me <- apply(temp_f,2,quantile, probs = 0.5,na.rm = TRUE) # BMD
lq <- apply(temp_f,2,quantile, probs = qprob,na.rm = TRUE) # BMDL
uq <- apply(temp_f,2,quantile, probs = 1-qprob,na.rm = TRUE) # BMDU
width=3
# 06/02/21 SL update
if (IS_SUFFICIENT){
plot_gg<-ggplot()+
geom_point(aes(x=data_d[,1],y=data_d[,2]))+
geom_errorbar(aes(x=data_d[,1], ymin=lerror, ymax=uerror),color="black",size=0.8,width=width)+
xlim(c(min(data_d[,1])-width,max(data_d[,1])*1.03))+
labs(x="Dose", y="Proportion",title="Continous MA fitting")+
theme_minimal()
}else{
plot_gg<-ggplot()+
geom_point(aes(x=doses,y=Response))+
xlim(c(min(doses),max(doses)*1.03))+
labs(x="Dose", y="Proportion",title="Continous MA fitting")+
theme_minimal()
}
plot_gg<-plot_gg+
geom_ribbon(aes(x=test_doses,ymin=lq,ymax=uq),fill="blue",alpha=0.1)
plot_gg<-plot_gg+
geom_line(aes(x=test_doses,y=me),col="blue",size=2)
# Updated to remove Inf bmd 06/02/21 SL
bmd <- quantile(temp_bmd,c(qprob,0.5,1-qprob),na.rm = TRUE)
# Compare this with BMD sample case- SL
# Why this number is so different ?
# BB$bmd
## Plot the CDF of the Posterior
## SL's comment- I think we already have MCMC sample, and we can plot bmd directly from samples
if(sum(!is.nan(test_doses) + !is.infinite(test_doses)) == 0){
temp = temp_bmd[temp_bmd < 10*max(test_doses)]
temp = temp[!is.infinite(temp_bmd)]
temp = temp[!is.na(temp)]
# Density only creates few data points SL
# Fixed part 06/04/21
Dens =  density(temp,cut=c(max(test_doses)), n=512, from=0, to=max(test_doses))
Dens$y = Dens$y/max(Dens$y) * (max(Response)-min(Response))*0.6
temp = which(Dens$x < max(test_doses))
D1_y = Dens$y[temp]
D1_x = Dens$x[temp]
qm = min(Response)
scale = (max(Response)-min(Response))/max(D1_y) *.75
# BMD MA density needs to be double checked
# It's BMD is spiky by nature of sampling I guess;
# ggplot()+
#   geom_density(aes(x=temp))+xlim(c(0,15))
#
# plot_gg<-plot_gg+
#   stat_density_ridges(aes(x=temp))
plot_gg<-plot_gg+
geom_polygon(aes(x=c(max(0,min(D1_x)),D1_x,max(0,min(D1_x))),
y=c(min(Response),min(Response)+D1_y*scale,min(Response))),
fill = "blueviolet", alpha=0.6)
}
##
# Add lines to the BMD
ma_mean <- splinefun(test_doses,me)
ma_BMD = A$bmd
# Question to Matt not sure
plot_gg = plot_gg +
geom_segment(aes(x=A$bmd, y=ma_mean(A$bmd), xend=A$bmd, yend=min(Response)),color="Red")
# Which one is duplicated?
# plot_gg = plot_gg +
#   geom_segment(aes(x=bmd, y=ma_mean(bmd), xend=bmd, yend=min(Response)),color="Red")
#Plot only level >2
df<-NULL
# Problem of the loop using this case- the ggplot is not added automatically,
# It replaces the last one;
for (ii in 1:length(fit_idx)){
if (A$posterior_probs[ii]>0.05){
fit <- A[[fit_idx[ii]]]
if (fit$model=="FUNL"){
f <- cont_FUNL_f(fit$fitted_model$parameters,test_doses)
}
if (fit$model=="hill"){
f <- cont_hill_f(fit$fitted_model$parameters,test_doses)
}
if (fit$model=="exp-3"){
temp = fit$fitted_model$parameters
f <- cont_exp_3_f(temp,test_doses,decrease)
}
if (fit$model=="exp-5"){
f <- cont_exp_5_f(fit$fitted_model$parameters,test_doses)
}
if (fit$model=="power"){
f <- cont_power_f(fit$fitted_model$parameters,test_doses)
}
col = alphablend(col='coral3',A$posterior_probs[ii])
# Not using loop, but save data in the external data and load it later
temp_df<-data.frame(x_axis=test_doses,y_axis=f,cols=col,model_no=ii, alpha_lev=A$posterior_probs[ii])
df<-rbind(df,temp_df)
# Not using loop, but save data in the external data and load it later
temp_df<-data.frame(x_axis=test_doses,y_axis=f,cols=col,model_no=ii, alpha_lev=A$posterior_probs[ii])
df<-rbind(df,temp_df)
plot_gg<- plot_gg+
geom_line(data=df, aes(x=x_axis,y=y_axis,color=cols),alpha=0.5,show.legend=F)+
theme_minimal()
}
}
}
## I think this if-else part needs to be clear since it's already in A part ;
## Why this part is added?
else{ # mcmc run
data_d   <-  A[[fit_idx[1]]]$data
max_dose <- max(data_d[,1])
min_dose <- min(data_d[,1])
test_doses <- seq(min_dose,max_dose,(max_dose-min_dose)/200);
temp_bmd <- rep(0,length(test_doses))
if (ncol(data_d) == 4 ){ #sufficient statistics
mean <- data_d[,2,drop=F]
se   <- data_d[,4,drop=F]/sqrt(fit$data[,3,drop=F])
doses = data_d[,1,drop=F]
uerror <- mean+se
lerror <- mean-se
dose = c(doses,doses)
Response = c(uerror,lerror)
lm_fit = lm(mean ~ doses,weights = 1/se*se)
}else{
Response <- data_d[,2,drop=F]
doses = data_d[,1,drop=F]
lm_fit = lm(Response~doses)
}
if (coefficients(lm_fit)[2] < 0){
decrease = TRUE
}else{
decrease = FALSE
}
me = test_doses*0
for (ii in 1:length(fit_idx)){
fit <- A[[fit_idx[ii]]]
if (fit$model=="FUNL"){
t <- cont_FUNL_f(fit$parameters,test_doses)
if(BB$posterior_probs[ii] > 0){
me = t*BB$posterior_probs[ii] + me
}
}
if (fit$model=="hill"){
t <- cont_hill_f(fit$parameters,test_doses)
# SL comment - why the name of object is BB? At the beginning it was declared as A-  05/28/21
# I guess this part should be A as well
if(A$posterior_probs[ii] > 0){
me = t*A$posterior_probs[ii] + me
}
}
if (fit$model=="exp-3"){
t <- cont_exp_3_f(fit$parameters,test_doses,decrease)
if(A$posterior_probs[ii] > 0){
me = t*A$posterior_probs[ii] + me
}
}
if (fit$model=="exp-5"){
t <- cont_exp_5_f(fit$parameters,test_doses)
if(A$posterior_probs[ii] > 0){
me = t*A$posterior_probs[ii] + me
}
}
if (fit$model=="power"){
t <- cont_power_f(fit$parameters,test_doses)
if(A$posterior_probs[ii] > 0){
me = t*A$posterior_probs[ii] + me
}
}
}
plot_gg<-ggplot()+
geom_point(aes(x=doses,y=Response))+
xlim(c(min(doses),max(doses)*1.03))+
# Change the label for Y axis - SL 05/28/21
labs(x="Dose", y="Response",title="Continous MA fitting")+
theme_minimal()
plot_gg<-plot_gg+
geom_line(aes(x=test_doses,y=me),col="blue",size=2)
##
# Add lines to the BMD
ma_mean <- splinefun(test_doses,me)
ma_BMD = A$bmd
plot_gg = plot_gg +
geom_segment(aes(x=A$bmd, y=ma_mean(A$bmd), xend=A$bmd, yend=min(Response)),color="Red")
# Not sure about this part - SL 05/28/21
#Plot only level >2
df<-NULL
for (ii in 1:length(fit_idx)){
if (A$posterior_probs[ii]>0.05){
fit <- A[[fit_idx[ii]]]
if (fit$model=="FUNL"){
f <- cont_FUNL_f(fit$parameters,test_doses)
}
if (fit$model=="hill"){
f <- cont_hill_f(fit$parameters,test_doses)
}
if (fit$model=="exp-3"){
temp = fit$parameters
#temp = c(temp[1:2],0,temp[3],temp[4])
f <- cont_exp_3_f(temp,test_doses,decrease)
}
if (fit$model=="exp-5"){
f <- cont_exp_5_f(fit$parameters,test_doses)
}
if (fit$model=="power"){
f <- cont_power_f(fit$parameters,test_doses)
}
col = alphablend(col='coral3',A$posterior_probs[ii])
# Not using loop, but save data in the external data and load it later
temp_df<-data.frame(x_axis=test_doses,y_axis=f,cols=col,model_no=ii, alpha_lev=A$posterior_probs[ii])
df<-rbind(df,temp_df)
}
}
plot_gg<- plot_gg+
geom_line(data=df, aes(x=x_axis,y=y_axis,color=cols),alpha=0.5,show.legend=F)+
theme_minimal()
}
return(plot_gg)
}
.plot.BMDcontinuous_MA(c3)
plot(BB)
library(ToxicR)
library(ggplot2)
v1 <- c(13.184152,12.8906975,12.359554,13.073001,12.861814,12.967434,12.88052,
13.249991,	12.992931,	13.022338,	13.614057,	13.287018,	13.449239,	13.950747,
13.239134,	13.82321,	15.080262,	14.85966,	14.7805395,	15.238369,	14.749196,
14.913585,	15.181719,	15.051697,	15.065641,	15.16396,	15.484345,	16.493923,
15.633442,	15.96033,	15.388061)
prior <- create_prior_list(lnormprior(0,1,-100,100),
normprior( 0, 1,-100,100),#normprior(1,2,-18,18),
lnormprior(0 ,1,0,100),
lnormprior(0,1,0,18),
normprior(0,2,-18,18));
library(readr)
PFOA_Liver <- read_table2("~/Documents/PFOA_Liver.txt",
col_names = FALSE)
doses	<- c(0,	0,	0,	0,	0.156,	0.156,	0.156,	0.3125,	0.3125,	0.3125,
0.625,	0.625,	0.625,	1.25,	1.25,	1.25,	2.5,	2.5,	2.5,	5,5,
5,	5,	10,	10,	10,	10,	20,	20,	20,	20)
library(dplyr)
library(ToxicR)
temp <- PFOA_Liver %>% filter(X1 == "ABCG2_32656")
v1 <- as.numeric(temp[2:length(temp)])
B  <- single_continuous_fit(as.matrix(doses),as.matrix(v1),model_type = "hill", distribution="normal-ncv",fit_type = "laplace",BMR = 1,sstat = F,isFast = FALSE)
# I guess based on my understanding we do not need Density plot for laplace fitting case - SL
# Aesthetically, why it doesn't show the other bmd line?
plot(B)
# Updated 06/02/21
.plot.BMDcont_fit_maximized(B)
model_list  = data.frame(model_list = c(rep("hill",2),rep("exp-3",2),rep("exp-5",2),rep("power",2)),
distribution_list =  c(c("normal","normal-ncv"),rep(c("normal","normal-ncv"),2),
"normal", "normal-ncv"))
# How about the log scale?
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(v1),fit_type = "mcmc",BMR = 2,model_list = model_list )
plot(BB)
# Question not sure why BMD is superimposed?
.plot.BMDcontinuous_MA(BB, qprob=0.05)
PFOA_Liver <- read_table2("~/Documents/PFOA_Liver.txt",
col_names = FALSE)
PFOA_Liver <- read_table2("~/PFOA_Liver.txt",
col_names = FALSE)
PFOA_Liver <- read_table2("PFOA_Liver.txt",
col_names = FALSE)
PFOA_Liver <- read_table2("/PFOA_Liver.txt",
col_names = FALSE)
PFOA_Liver <- read_table2("/PFOA_Liver.txt",
col_names = FALSE)
PFOA_Liver <- read_table2("~/PFOA_Liver.txt",
col_names = FALSE)
View(temp)
library(readr)
PFOA_Liver <- read_table2("~/PFOA_Liver.txt",
col_names = FALSE)
PFOA_Liver <- read_table2("PFOA_Liver.txt",
col_names = FALSE)
PFOA_Liver <- read_table2("PFOA_Liver.txt",
col_names = FALSE)
doses	<- c(0,	0,	0,	0,	0.156,	0.156,	0.156,	0.3125,	0.3125,	0.3125,
0.625,	0.625,	0.625,	1.25,	1.25,	1.25,	2.5,	2.5,	2.5,	5,5,
5,	5,	10,	10,	10,	10,	20,	20,	20,	20)
library(dplyr)
library(ToxicR)
temp <- PFOA_Liver %>% filter(X1 == "ABCG2_32656")
v1 <- as.numeric(temp[2:length(temp)])
B  <- single_continuous_fit(as.matrix(doses),as.matrix(v1),model_type = "hill", distribution="normal-ncv",fit_type = "laplace",BMR = 1,sstat = F,isFast = FALSE)
plot(BB)
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(v1),fit_type = "mcmc",BMR = 2,model_list = model_list )
plot(BB)
# Question not sure why BMD is superimposed?
.plot.BMDcontinuous_MA(BB, qprob=0.05)
M2           <- matrix(0,nrow=5,ncol=4)
colnames(M2) <- c("Dose","Resp","N","StDev")
M2[, 1]      <- c(0,50, 100, 150, 200)
M2[, 2]      <- c(10, 20 , 30, 40 ,50)
M2[, 3]      <- c(100, 100, 100, 100, 100)
M2[, 4]      <- c(3, 4, 5, 6, 7)
#double D[] = {0,50, 100, 150, 200};
#double Y[] = {10, 20 , 30, 40 ,50};
#double N[] = {100, 100, 100, 100, 100};
#double SD[] = {3, 4, 5, 6, 7};
c = single_continuous_fit(M2[,1,drop=F],M2[,2:4],sstat=F,BMD_TYPE="sd",BMR=1,
distribution = "normal",fit_type="mle",model_type = "power")
plot(c)
.plot.BMDcont_fit_maximized(c,qprob=0.05)
#MCMC test
c2 = single_continuous_fit(M2[,1,drop=F],M2[,2:4],sstat=F,BMD_TYPE="sd",BMR=1,
distribution = "normal",fit_type="mcmc",model_type = "power")
plot(c2)
.plot.BMDcont_fit_MCMC(c2,qprob=0.05)
model_list  = data.frame(model_list = c(rep("hill",2),rep("exp-3",2),rep("exp-5",2),rep("power",2)),
distribution_list =  c(c("normal","normal-ncv"),rep(c("normal","normal-ncv"),2),
"normal", "normal-ncv"))
c3 <- ma_continuous_fit(M2[,1,drop=F],M2[,2:4],fit_type = "mcmc",BMR = 2,model_list = model_list )
plot(c3)
.plot.BMDcontinuous_MA(c3)
model_list  = data.frame(model_list = c(rep("hill",2),rep("exp-3",2),rep("exp-5",2),rep("power",2)),
distribution_list =  c(c("normal","normal-ncv"),rep(c("normal","normal-ncv"),2),
"normal", "normal-ncv"))
c3 <- ma_continuous_fit(M2[,1,drop=F],M2[,2:4],fit_type = "mcmc",BMR = 2,model_list = model_list )
plot(c3)
.plot.BMDcontinuous_MA(c3)
# Sample Data - Dichotomous Example
mData <- matrix(c(0, 2,50,
1, 2,50,
3, 10, 50,
16, 18,50,
32, 18,50,
33, 17,50),nrow=6,ncol=3,byrow=T)
# Single model fitting- MCMC
# too much white space- this needs to be adjusted automatically - Not the for the first Priority, but needs to be updated once
# Continous part is updated
A_single_mcmc<-single_dichotomous_fit(mData[,1],mData[,2],mData[,3], model_type="hill",fit_type="mcmc")
#Need to color Match with Continous plot
plot(A_single_mcmc)
.plot.BMDdich_fit_MCMC(A_single_mcmc)
library(dplyr)
library(ToxicR)
library(readr)
PFOA_Liver <- read_table2("PFOA_Liver.txt",
col_names = FALSE)
temp <- PFOA_Liver %>% filter(X1 == "ABCG2_32656")
v1 <- as.numeric(temp[2:length(temp)])
doses	<- c(0,	0,	0,	0,	0.156,	0.156,	0.156,	0.3125,	0.3125,	0.3125,
0.625,	0.625,	0.625,	1.25,	1.25,	1.25,	2.5,	2.5,	2.5,	5,5,
5,	5,	10,	10,	10,	10,	20,	20,	20,	20)
model_list  = data.frame(model_list = c(rep("hill",2),rep("exp-3",2),rep("exp-5",2),rep("power",2)),
distribution_list =  c(c("normal","normal-ncv"),rep(c("normal","normal-ncv"),2),
"normal", "normal-ncv"))
BB <- ma_continuous_fit(as.matrix(doses),as.matrix(v1),fit_type = "mcmc",BMR = 2,model_list = model_list )
plot(BB)
# Question not sure why BMD is superimposed?
.plot.BMDcontinuous_MA(BB, qprob=0.05)
M2           <- matrix(0,nrow=5,ncol=4)
colnames(M2) <- c("Dose","Resp","N","StDev")
M2[, 1]      <- c(0,50, 100, 150, 200)
M2[, 2]      <- c(10, 20 , 30, 40 ,50)
M2[, 3]      <- c(100, 100, 100, 100, 100)
M2[, 4]      <- c(3, 4, 5, 6, 7)
#double D[] = {0,50, 100, 150, 200};
#double Y[] = {10, 20 , 30, 40 ,50};
#double N[] = {100, 100, 100, 100, 100};
#double SD[] = {3, 4, 5, 6, 7};
c = single_continuous_fit(M2[,1,drop=F],M2[,2:4],sstat=F,BMD_TYPE="sd",BMR=1,
distribution = "normal",fit_type="mle",model_type = "power")
plot(c)
.plot.BMDcont_fit_maximized(c,qprob=0.05)
#MCMC test
c2 = single_continuous_fit(M2[,1,drop=F],M2[,2:4],sstat=F,BMD_TYPE="sd",BMR=1,
distribution = "normal",fit_type="mcmc",model_type = "power")
plot(c2)
.plot.BMDcont_fit_MCMC(c2,qprob=0.05)
model_list  = data.frame(model_list = c(rep("hill",2),rep("exp-3",2),rep("exp-5",2),rep("power",2)),
distribution_list =  c(c("normal","normal-ncv"),rep(c("normal","normal-ncv"),2),
"normal", "normal-ncv"))
c3 <- ma_continuous_fit(M2[,1,drop=F],M2[,2:4],fit_type = "mcmc",BMR = 2,model_list = model_list )
plot(c3)
.plot.BMDcontinuous_MA(c3)
# Fix n=512
.plot.BMDcontinuous_MA(c3)
plot(c3)
plot(c3)
# Fix n=512
.plot.BMDcontinuous_MA(c3)
# Sample Data - Dichotomous Example
mData <- matrix(c(0, 2,50,
1, 2,50,
3, 10, 50,
16, 18,50,
32, 18,50,
33, 17,50),nrow=6,ncol=3,byrow=T)
A_single_mcmc<-single_dichotomous_fit(mData[,1],mData[,2],mData[,3], model_type="hill",fit_type="mcmc")
#Need to color Match with Continous plot
plot(A_single_mcmc)
.plot.BMDdich_fit_MCMC(A_single_mcmc)
# Fix n=512
.plot.BMDcontinuous_MA(c3)
mData <- matrix(c(0, 2,50,
1, 2,50,
3, 10, 50,
16, 18,50,
32, 18,50,
33, 17,50),nrow=6,ncol=3,byrow=T)
A_single_mcmc<-single_dichotomous_fit(mData[,1],mData[,2],mData[,3], model_type="hill",fit_type="mcmc")
#Need to color Match with Continous plot
plot(A_single_mcmc)
.plot.BMDdich_fit_MCMC(A_single_mcmc)
# Single model fitting- Laplace
A_single_laplace = single_dichotomous_fit(mData[,1],mData[,2],mData[,3],model_type="hill",fit_type = "laplace")
.plot.BMDdich_fit_maximized(A_single_laplace)
# Dichotomous - Model Average
# Case 1: Dichotomous - MCMC Fitting
A = ma_dichotomous_fit(mData[,1],mData[,2],mData[,3],fit_type = "mcmc")
# Test 1. Dichotomous MA Clevland Plot
.cleveland_plot.BMDdichotomous_MA(A)
library(purrr)
# Test 1. Dichotomous MA Clevland Plot
.cleveland_plot.BMDdichotomous_MA(A)
library(forcats)
# Test 1. Dichotomous MA Clevland Plot
.cleveland_plot.BMDdichotomous_MA(A)
D <-c(rep(seq(0,1.0,1/4),each=4))
mean <- 2.3  + 10/(1+exp(-(D-0.60)*8))*(1/(1+exp(-(0.99-D)*13)))
Y <- mean + rnorm(length(mean),0,0.7)
# Fitting example should be much simpler -
A<-ma_continuous_fit(D,Y,fit_type="mcmc",samples=25000,burnin=2500,BMR=0.1,BMD_TYPE='sd')
.cleveland_plot.BMDcontinous_MA(A)
# This part needs to be double checked & density part should be re-derived
# - Code / Need to assign dynamically
.plot.BMDdichotomous_MA(A)
A_single_mcmc<-single_dichotomous_fit(mData[,1],mData[,2],mData[,3], model_type="hill",fit_type="mcmc")
#Need to color Match with Continous plot
plot(A_single_mcmc)
.plot.BMDdich_fit_MCMC(A_single_mcmc)
# Dichotomous - Model Average
# Case 1: Dichotomous - MCMC Fitting
A = ma_dichotomous_fit(mData[,1],mData[,2],mData[,3],fit_type = "mcmc")
# Test 2. Dichotomous MA Density Plot - Update for base-color later
.plot.density.BMDdichotomous_MA_MCMC(A)
library(ToxicR)
library(ggridges)
library(forcats)
library(ggplot2)
library(dplyr)
# Test 2. Dichotomous MA Density Plot - Update for base-color later
.plot.density.BMDdichotomous_MA_MCMC(A)
6.27+61.02+83.88+13.62+11.83+44.21+82.84+9.42+3.99+51.35
6.27+61.02+83.88+13.62+11.83+44.21+82.84+9.42+3.99+51.35+13.25
(52.36+96.52+13.25+13.2)/2
83.21-(2.99+2.99+3.79+0.59+0.59+3.99+1.49+3.29+7.73)
55.76/2
