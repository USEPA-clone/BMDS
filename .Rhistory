assign(paste("t",i,sep="_"),temp_density)
}
# Load libraries
library(ToxicR)
for (i in fit_idx){
# Loop for the model
fit<-A[[i]]
test_doses <- seq(min(doses),max(doses)*1.03,(max(doses)*1.03-min(doses))/100)
probs <- (0.5+fit$data[,2,drop=T])/(1.0 + fit$data[,3,drop=T])
doses = mData[,1,drop=T]
if (fit$model=="hill"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_hill_f, d=test_doses)
}
if (fit$model=="gamma"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_gamma_f, d=test_doses)
}
if (fit$model=="logistic"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_logist_f, d=test_doses)
}
if (fit$model=="log-logistic"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_llogist_f, d=test_doses)
}
if (fit$model=="probit"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_probit_f, d=test_doses)
}
if (fit$model=="log-probit"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_lprobit_f, d=test_doses)
}
if (fit$model=="multistage"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_multistage_f, d=test_doses)
}
if (fit$model=="qlinear"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_qlinear_f, d=test_doses)
}
temp <- fit$mcmc_result$BMD_samples[!is.nan(fit$mcmc_result$BMD_samples)]
temp <- temp[!is.infinite(temp)]
# Q <- t(Q)
#
# me <- colMeans(Q)
# lq <- apply(Q,2,quantile, probs = qprob)
# uq <- apply(Q,2,quantile, probs = 1-qprob)
Dens =  density(temp,cut=c(max(doses)))
# what is this 0.4 means? Scale?
# normalize it?-- We don't need it actually here
# Dens$y = Dens$y/max(Dens$y) * max(probs)
# temp = which(Dens$x < max(doses))
# D1_y = Dens$y[temp]
# D1_x = Dens$x[temp]
# Do I need to stack up the dataset?
temp_density<-data.frame(matrix(0,length(temp),2))
temp_density[,2]=fit$model
temp_density[,1]=temp
assign(paste("t",i,sep="_"),temp_density)
}
source("..")
path
path)()
patH()
path()
source("ToxicR/ToxicR/dichotomous_plots.R")
source("..ToxicR/ToxicR/dichotomous_plots.R")
source("dicho_functions.R")
# Load libraries
library(ToxicR)
library(ggplot2)
library(tidyverse)
source("dicho_functions.R")
source("dicho_functions.R")
source("dicho_functions.R")
# Load required function from source code;
setwd()
# Load required function from source code;
getwd*()
# Load required function from source code;
getwd()
# Load required function from source code;
source("../data_visualization/dicho_functions.R")
# Load required function from source code;
source("../data_visualization/dicho_functions.R")
# Load required function from source code;
source("data_visualization/dicho_functions.R")
# Sample Dichotomous Data set
mData <- matrix(c(1, 3,50,
3, 10, 50,
16, 18,50,
32, 40,50,
50, 48,50),nrow=5,ncol=3,byrow=T)
# Sample Fitting Case
A<-ma_dichotomous_fit(mData[,1],mData[,2],mData[,3], fit_type="mcmc", BMD_TYPE="added",BMR=0.1)
# Construct bmd sample plots for mcmc
class_list <- names(A)
fit_idx    <- grep("Individual_Model",class_list)
qprob=0.05
#Dose levels
doses<-mData[,1]
for (i in fit_idx){
# Loop for the model
fit<-A[[i]]
test_doses <- seq(min(doses),max(doses)*1.03,(max(doses)*1.03-min(doses))/100)
probs <- (0.5+fit$data[,2,drop=T])/(1.0 + fit$data[,3,drop=T])
doses = mData[,1,drop=T]
if (fit$model=="hill"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_hill_f, d=test_doses)
}
if (fit$model=="gamma"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_gamma_f, d=test_doses)
}
if (fit$model=="logistic"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_logist_f, d=test_doses)
}
if (fit$model=="log-logistic"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_llogist_f, d=test_doses)
}
if (fit$model=="probit"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_probit_f, d=test_doses)
}
if (fit$model=="log-probit"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_lprobit_f, d=test_doses)
}
if (fit$model=="multistage"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_multistage_f, d=test_doses)
}
if (fit$model=="qlinear"){
Q <- apply(fit$mcmc_result$PARM_samples,1,.dich_qlinear_f, d=test_doses)
}
temp <- fit$mcmc_result$BMD_samples[!is.nan(fit$mcmc_result$BMD_samples)]
temp <- temp[!is.infinite(temp)]
# Q <- t(Q)
#
# me <- colMeans(Q)
# lq <- apply(Q,2,quantile, probs = qprob)
# uq <- apply(Q,2,quantile, probs = 1-qprob)
Dens =  density(temp,cut=c(max(doses)))
# what is this 0.4 means? Scale?
# normalize it?-- We don't need it actually here
# Dens$y = Dens$y/max(Dens$y) * max(probs)
# temp = which(Dens$x < max(doses))
# D1_y = Dens$y[temp]
# D1_x = Dens$x[temp]
# Do I need to stack up the dataset?
temp_density<-data.frame(matrix(0,length(temp),2))
temp_density[,2]=fit$model
temp_density[,1]=temp
assign(paste("t",i,sep="_"),temp_density)
}
# combine the fitting dataset here
t_combine<-rbind(t_1,t_2,t_3,t_4,t_5,t_6,t_7,t_8,t_9)
View(t_combine)
out_bmd<-ggplot()+
geom_density(data=t_combine,aes(x=X1), fill = "lightblue1", alpha=0.5)+
labs(x="Dose Level",title="Cleveland Plot")+
theme_classic()+ylim(c(0,1.8))+xlim(c(min(doses),20))+
facet_wrap(~X2,nrow=length(fit_idx))
out_bmd
samp<-t_combine %>% filter(X2=="hill")
q5<-quantile(samp$X1,0.05)
q95<-quantile(samp$X1,.95)
x.dens <- density(samp$X1)
df.dens <- data.frame(x = x.dens$x, y = x.dens$y)
# Object overwrapp
ggplot()+
geom_density(data=samp,aes(x=X1),fill="blue",alpha=0.7)+
xlim(c(0,20))+labs(x="Dose Level", title="BMD Estimates by Modles")+
geom_area(data=subset(df.dens, x>=q5 &  x<=q95), aes(x=x,y=y),fill="blue",alpha=0.5)
out_bmd<-ggplot()+
geom_density(data=t_combine,aes(x=X1), fill = "lightblue1", alpha=0.5)+
labs(x="Dose Level",title="Cleveland Plot")+
theme_classic()+ylim(c(0,1.8))+xlim(c(min(doses),20))+
facet_wrap(~X2,nrow=length(fit_idx), scales="free_y")
out_bmd
out_bmd<-ggplot()+
geom_density(data=t_combine,aes(x=X1), fill = "lightblue1", alpha=0.5)+
labs(x="Dose Level",title="Cleveland Plot")+
theme_classic()+xlim(c(min(doses),20))+
facet_wrap(~X2,nrow=length(fit_idx), scales="free_y")
out_bmd
out_bmd<-ggplot()+
geom_density(data=t_combine,aes(x=X1), fill = "blue", alpha=0.5)+
labs(x="Dose Level",title="Cleveland Plot")+
theme_classic()+xlim(c(min(doses),20))+
facet_wrap(~X2,nrow=length(fit_idx), scales="free_y")
out_bmd
out_bmd
# Free y scale and add y case;
out_bmd
# Object overwrapp
# I need to stack 8 different model. Is there any better way? free y_scale John's suggestion
ggplot()+
geom_density(data=samp,aes(x=X1),fill="blue",alpha=0.7)+
xlim(c(0,20))+labs(x="Dose Level", title="BMD Estimates by Modles")+
geom_area(data=subset(df.dens, x>=q5 &  x<=q95), aes(x=x,y=y),fill="blue",alpha=0.5)
# Free y scale and add y case;
out_bmd
t_combine
library(ggridges)
install.packages('ggridges')
library(ggridges)
t_combine
t_combine$
ggplot(data=t_combine, aes(x=X1, y=X2))+
stat_density_ridge(geom="density_ridges_gradient")
ggplot(iris, aes(x = Sepal.Length, y = Species, fill = factor(stat(quantile)))) +
stat_density_ridges(
geom = "density_ridges_gradient",
calc_ecdf = TRUE,
quantiles = 5
) +
scale_fill_viridis_d(name = "Quintiles") +
theme_ridges()
factor(stat(quantile)
)
factor(stat(quantile))
ggplot(iris,
aes(
x = Sepal.Length, y = Species, fill = 0.5 - abs(0.5-stat(ecdf))
)) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Tail probability", direction = -1) +
theme_ridges()
iris
t_1
t_combine
ggplot(data=t_combine, aes(x=X1, y=X2))+
stat_density_ridge(geom="density_ridges_gradient", quantiles=c(0.025,0.975))
ggplot(data=t_combine, aes(x=X1, y=X2))+
stat_density_ridges(geom="density_ridges_gradient", quantiles=c(0.025,0.975))
ggplot(data=t_combine, aes(x=X1, y=X2))+
stat_density_ridges(geom="density_ridges_gradient", quantiles=c(0.025,0.975))+xlim(c(0,20))
A$bmd
A$bmd[1]
ggplot()+
stat_density_ridges(data=t_combine, aes(x=X1, y=X2),geom="density_ridges_gradient", quantiles=c(0.025,0.975))+xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linestyle="dot")
ggplot()+
stat_density_ridges(data=t_combine, aes(x=X1, y=X2),geom="density_ridges_gradient", quantiles=c(0.025,0.975))+xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linestyle="dots")
# Free y scale and add y case;
y
stat_density_ridges(data=t_combine, aes(x=X1, y=fct_reorder(X2),geom="density_ridges_gradient", quantiles=c(0.025,0.975))+xlim(c(0,20))+
ggplot()+
stat_density_ridges(data=t_combine, aes(x=X1, y=X2),geom="density_ridges_gradient", quantiles=c(0.025,0.975))+xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linestyle="dots")
ggplot()+
stat_density_ridges(data=t_combine, aes(x=X1, y=X2),geom="density_ridges_gradient", quantiles=c(0.025,0.975))+xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linestyle="dotted")
ggplot()+
stat_density_ridges(data=t_combine, aes(x=X1, y=X2),geom="density_ridges_gradient", quantiles=c(0.025,0.975))+
xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linestyle="dotted")
ggplot()+
stat_density_ridges(data=t_combine, aes(x=X1, y=X2),geom="density_ridges_gradient", quantiles=c(0.025,0.975))+
xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linetype="dotted")
ggplot()+
stat_density_ridges(data=t_combine, aes(x=X1, y=X2),geom="density_ridges_gradient", calc_ecdf=TRUE quantiles=c(0.025,0.975))+
xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linetype="dotted")+
ggplot(iris,
aes(
x = Sepal.Length, y = Species, fill = 0.5 - abs(0.5-stat(ecdf))
)) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Tail probability", direction = -1) +
theme_ridges()
ggplot()+
stat_density_ridges(data=t_combine, aes(x=X1, y=X2),geom="density_ridges_gradient", calc_ecdf=TRUE ,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linetype="dotted")+
ggplot(iris,
aes(
x = Sepal.Length, y = Species, fill = 0.5 - abs(0.5-stat(ecdf))
)) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Tail probability", direction = -1) +
theme_ridges()
ggplot()+
stat_density_ridges(data=t_combine, aes(x=X1, y=X2),geom="density_ridges_gradient",color="blue" ,calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linetype="dotted")+
ggplot(iris,
aes(
x = Sepal.Length, y = Species, fill = 0.5 - abs(0.5-stat(ecdf))
)) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE) +
scale_fill_viridis_c(name = "Tail probability", direction = -1) +
theme_ridges()
ggplot()+
stat_density_ridges(data=t_combine, aes(x=X1, y=X2),geom="density_ridges_gradient",color="blue" ,calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linetype="dotted")
ggplot()+
stat_density_ridges(data=t_combine, aes(x=X1, y=X2, fill=c(0.025,0.975)),geom="density_ridges_gradient",color="blue" ,calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linetype="dotted")
ggplot()+
stat_density_ridges(data=t_combine, aes(x=X1, y=X2),geom="density_ridges_gradient",color="blue" ,calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linetype="dotted")
ggplot()+
stat_density_ridges(data=t_combine, aes(x=X1, y=X2, fill=factor(stat(quantile))),geom="density_ridges_gradient",color="blue",calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linetype="dotted")
ggplot()+
stat_density_ridges(data=t_combine, aes(x=X1, y=X2, fill=0.95),geom="density_ridges_gradient",color="blue",calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linetype="dotted")
ggplot()+
stat_density_ridges(data=t_combine, aes(x=X1, y=X2),geom="density_ridges_gradient",color="blue",calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linetype="dotted")
ggplot(data=t_combine, aes(x=X1, y=X2))+
stat_density_ridges(geom="density_ridges_gradient",
color="blue",calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linetype="dotted")
ggplot(data=t_combine,aes(x=X1, y=X2,fill=factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
color="blue",calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linetype="dotted")
ggplot(data=t_combine,aes(x=X1, y=X2,fill=factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
color="blue",calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")
ggplot(data=t_combine,aes(x=X1, y=X2,fill=factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
color="blue",calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+labs(y="Model")
ggplot(data=t_combine,aes(x=X1, y=X2,fill=factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
color="blue",calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+labs(y="Model",x="Dose Level (Dotted line - MA BMD")
ggplot(data=t_combine,aes(x=X1, y=X2,fill=factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
color="blue",calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+labs(y="Model",x="Dose Level (Dotted line: MA BMD)")
ggplot(data=t_combine,aes(x=X1, y=X2,fill=factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
color="blue",calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+labs(y="Model",x="Dose Level (Dotted Line : MA BMD)")
A$posterior_probs
A$ma_bmd
A$bmd
ggplot(data=t_combine,aes(x=X1, y=X2,fill=factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
color="blue",calc_ecdf=TRUE,confidence=0.95,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+labs(y="Model",x="Dose Level (Dotted Line : MA BMD)")
ggplot(data=t_combine,aes(x=X1, y=X2))+
stat_density_ridges(geom="density_ridges_gradient",
color="blue",calc_ecdf=TRUE,confidence=0.95,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+labs(y="Model",x="Dose Level (Dotted Line : MA BMD)")
ggplot(data=t_combine,aes(x=X1, y=X2, fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
color="blue",
calc_ecdf=TRUE)+
scale_fill_manual()
ggplot(data=t_combine,aes(x=X1, y=X2, fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
color="blue",
calc_ecdf=TRUE)+
xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+labs(y="Model",x="Dose Level (Dotted Line : MA BMD)")
ggplot(data=t_combine,aes(x=X1, y=X2, fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
color="blue",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+labs(y="Model",x="Dose Level (Dotted Line : MA BMD)")
name = "Probability", values = c("#FF0000A0", "#A0A0A0A0", "#0000FFA0"),
labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]")
geom_vline(xintercept = A$bmd[1],linetype="longdash")+labs(y="Model",x="Dose Level (Dotted Line : MA BMD)")
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)")
ggplot(data=t_combine,aes(x=X1, y=X2, fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
color="blue",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
scale_fill_manual(name = "Probability", values = c("#FF0000A0", "#A0A0A0A0", "#0000FFA0"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)")
ggplot(data=t_combine,aes(x=X1, y=X2, fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
color="blue",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
scale_fill_manual(name = "Probability", values = c("blue", "#A0A0A0A0", "blue"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)")
ggplot(data=t_combine,aes(x=X1, y=X2, fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
color="blue",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
scale_fill_manual(name = "Probability", values = c("red", "lightblue", "red"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)")
ggplot(data=t_combine,aes(x=X1, y=X2, fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
color="blue",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
scale_fill_manual(name = "Probability", values = c("blue", "lightblue", "blue"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)")
ggplot(data=t_combine,aes(x=X1, y=X2, fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
color="blue",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
scale_fill_manual(name = "Probability", values = c("blue", "lightblue", "blue"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)")+theme_classic()
ggplot(data=t_combine,aes(x=X1, y=X2, fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
color="blue",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
scale_fill_manual(name = "Probability", values = c("blue", "lightblue", "blue"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)")+theme_minimal()
ggplot(data=t_combine,aes(x=X1, y=X2, fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
color="blue",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
scale_fill_manual(name = "Probability", values = c("blue", "lightblue", "blue"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)")+theme_bw()
ggplot(data=t_combine,aes(x=X1, y=X2, fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
color="blue",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
scale_fill_manual(name = "Probability", values = c("blue", "lightblue", "blue"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)")+theme_classic()
out_bmd
out_bmd<-ggplot()+
geom_density(data=t_combine,aes(x=X1), fill = "blue", alpha=0.5)+
labs(x="Dose Level",title="Cleveland Plot")+
theme_classic()+xlim(c(min(doses),20))+
facet_wrap(~X2,nrow=length(fit_idx), scales="free_y")+  geom_vline(xintercept = A$bmd[1],linetype="longdash")
out_bmd
out_bmd<-ggplot()+
geom_density(data=t_combine,aes(x=X1), fill = "blue", alpha=0.5)+
labs(x=" (Dotted Line : MA BMD)",title="Cleveland Plot")+
theme_classic()+xlim(c(min(doses),20))+
facet_wrap(~X2,nrow=length(fit_idx), scales="free_y")+ geom_vline(xintercept = A$bmd[1],linetype="longdash")
out_bmd<-ggplot()+
geom_density(data=t_combine,aes(x=X1), fill = "blue", alpha=0.5)+
labs(x="Dose Level (Dotted Line : MA BMD)",title="Cleveland Plot")+
theme_classic()+xlim(c(min(doses),20))+
facet_wrap(~X2,nrow=length(fit_idx), scales="free_y")+ geom_vline(xintercept = A$bmd[1],linetype="longdash")
out_bmd
ggplot(data=t_combine,aes(x=X1, y=X2, fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
color="blue",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
scale_fill_manual(name = "Probability", values = c("blue", "lightblue", "blue"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)")+theme_classic()
ggplot(data=t_combine,aes(x=X1, y=X2, fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
scale_fill_manual(name = "Probability", values = c("blue", "grey", "blue"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)")+theme_classic()
ggplot(data=t_combine,aes(x=X1, y=X2, fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
scale_fill_manual(name = "Probability", values = c("lightblue", "blue", "lightblue"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)")+theme_classic()
ggplot(data=t_combine,aes(x=X1, y=X2, fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
scale_fill_manual(name = "Probability", values = c("red", "blue", "red"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)")+theme_classic()
ggplot(data=t_combine,aes(x=X1, y=X2, fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
scale_fill_manual(name = "Probability", values = c("red", "blue", "red"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)", title="Density plot for each fitted model")+theme_classic()
ggplot(data=t_combine,aes(x=X1, y=X2, fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
scale_fill_manual(name = "Probability", values = c("red", "blue", "red"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)", title="Density plots for each fitted model")+theme_classic()
ggplot(data=t_combine,aes(x=X1, y=X2, fill = factor(stat(quantile))))+
stat_density_ridges(geom="density_ridges_gradient",
calc_ecdf=TRUE,quantiles=c(0.025,0.975))+
xlim(c(0,20))+
scale_fill_manual(name = "Probability", values = c("red", "blue", "red"), labels = c("(0, 0.025]", "(0.025, 0.975]", "(0.975, 1]"))+
geom_vline(xintercept = A$bmd[1],linetype="longdash")+
labs(y="Model",x="Dose Level (Dotted Line : MA BMD)", title="Density plots for each fitted model")+theme_classic()+
theme(legend.position="none")
