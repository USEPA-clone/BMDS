}
if (fit$model=="gamma"){
temp_f[ii,] <- dich_gamma_f(fit$mcmc_result$PARM_samples[ii,],test_doses)
temp_bmd[ii] <- fit$mcmc_result$BMD_samples[ii]
}
if (fit$model == "logistic"){
temp_f[ii,] <- dich_logist_f(fit$mcmc_result$PARM_samples[ii,],test_doses)
temp_bmd[ii] <- fit$mcmc_result$BMD_samples[ii]
}
if (fit$model=="log-logistic"){
temp_f[ii,] <- dich_llogist_f(fit$mcmc_result$PARM_samples[ii,],test_doses)
temp_bmd[ii] <- fit$mcmc_result$BMD_samples[ii]
}
if (fit$model=="probit"){
temp_f[ii,] <- dich_probit_f(fit$mcmc_result$PARM_samples[ii,],test_doses)
temp_bmd[ii] <- fit$mcmc_result$BMD_samples[ii]
}
if (fit$model=="log-probit"){
temp_f[ii,] <- dich_lprobit_f(fit$mcmc_result$PARM_samples[ii,],test_doses)
temp_bmd[ii] <- fit$mcmc_result$BMD_samples[ii]
}
if (fit$model=="multistage"){
temp_f[ii,] <-dich_multistage_f(fit$mcmc_result$PARM_samples[ii,],test_doses)
temp_bmd[ii] <- fit$mcmc_result$BMD_samples[ii]
}
if (fit$model=="qlinear"){
temp_f[ii,] <-dich_qlinear_f(fit$mcmc_result$PARM_samples[ii,],test_doses)
temp_bmd[ii] <- fit$mcmc_result$BMD_samples[ii]
}
if (fit$model=="weibull"){
temp_f[ii,] <-dich_weibull_f(fit$mcmc_result$PARM_samples[ii,],test_doses)
temp_bmd[ii] <- fit$mcmc_result$BMD_samples[ii]
}
}
me <- colMeans(temp_f)
lq <- apply(temp_f,2,quantile, probs = qprob)
uq <- apply(temp_f,2,quantile, probs = 1-qprob)
col1 = alphablend(credint_col,1)
polygon(c(test_doses,test_doses[length(test_doses):1]),
c(uq,lq[length(test_doses):1]),col = col1,border=col1)
lines(test_doses,me,lwd=2)
temp_fit <- splinefun(test_doses,me)
bmd <- quantile(temp_bmd,c(qprob,0.5,1-qprob),na.rm = TRUE)
if(sum(!is.nan(test_doses) + !is.infinite(test_doses)) == 0){
lines( c(bmd[1],bmd[1]),c(0,temp_fit(bmd[1])))
lines( c(bmd[2],bmd[2]),c(0,temp_fit(bmd[2])))
lines( c(bmd[3],bmd[3]),c(0,temp_fit(bmd[3])))
}
temp = temp_bmd[!is.nan(temp_bmd)]
temp = temp[!is.infinite(temp)]
temp = temp[temp < 30*max(doses)]
Dens =  density(temp,cut=c(quantile(temp_bmd,0.995,na.rm = TRUE)))
Dens$y = Dens$y/max(Dens$y) * (max(Response)-min(Response))*0.4
temp = which(Dens$x < max(test_doses*30))
D1_y = Dens$y[temp]
D1_x = Dens$x[temp]
qm = min(Response)
polygon(c(0,D1_x,max(doses)),c(qm,qm+D1_y,qm),col = alphablend(col=density_col,0.2),border =alphablend(col=density_col,0.2))
#plot the individual models proportional to their weight
temp_f <- rep(0,length(test_doses))
for (ii in 1:length(fit_idx)){
fit <- A[[fit_idx[ii]]]
if (fit$model=="hill"){
temp_f <- dich_hill_f(fit$fitted_model$parameters,test_doses)
}
if (fit$model=="gamma"){
temp_f <- dich_gamma_f(fit$fitted_model$parameters,test_doses)
}
if (fit$model == "logistic"){
temp_f <- dich_logist_f(fit$fitted_model$parameters,test_doses)
}
if (fit$model=="log-logistic"){
temp_f <- dich_llogist_f(fit$fitted_model$parameters,test_doses)
}
if (fit$model=="probit"){
temp_f <- dich_probit_f(fit$fitted_model$parameters,test_doses)
}
if (fit$model=="log-probit"){
temp_f<- dich_lprobit_f(fit$fitted_model$parameters,test_doses)
}
if (fit$model=="multistage"){
temp_f <-dich_multistage_f(fit$fitted_model$parameters,test_doses)
}
if (fit$model=="qlinear"){
temp_f<-dich_qlinear_f(fit$fitted_model$parameters,test_doses)
}
if (fit$model=="weibull"){
temp_f<-dich_weibull_f(fit$fitted_model$parameters,test_doses)
}
col = alphablend(col='coral3',A$posterior_probs[ii])
lines(test_doses,temp_f,col=col,lwd = 2)
}
}else{
}
points(doses,probs)
arrows(x0=doses, y0=lerror, x1=doses,
y1=uerror, code=3, angle=90, length=0.1)
}
plot.BMDdichotomous_MA(B)
library(ToxicR)
mData <- matrix(c(0, 1,10,
0.3, 4,10,
1, 4,10,
4, 7,10),nrow=4,ncol=3,byrow=T)
mData <- matrix(c(0, 1,20,
0.3, 2,20,
1, 3,20,
4, 14,50),nrow=4,ncol=3,byrow=T)
B = ma_dichotomous_fit(mData[,1],mData[,2],mData[,3],fit_type = "mcmc")
plot(B)
mData <- matrix(c(0, 1,50,
1, 2,50,
2.5, 3,50,
4, 14,50),nrow=4,ncol=3,byrow=T)
B = ma_dichotomous_fit(mData[,1],mData[,2],mData[,3],fit_type = "mcmc")
plot(B)
setwd("~/OneDrive - National Institutes of Health/ToxExpression/untitled folder/Raw read count file 24 chemical study- sent to Wheeler")
setwd("~/OneDrive - National Institutes of Health/ToxExpression")
load("~/OneDrive - National Institutes of Health/ToxExpression/untitled folder/Raw read count file 24 chemical study- sent to Wheeler/all_data.Rdata")
setwd("~/Documents/r_software/RBMDS")
library(ToxicR)
#library(rstan)
# Input data - Continuous2.dax - Individual dose-response
M =matrix(0,nrow=27,ncol=4)
colnames(M) <- c("Dose","Resp","","")
M[,1] <- c(0.1,0,0,0,0,0,18,18,18,18,20,20,20,20,30,30,30,30,35,35,35,35,39,39,39,39,39)
M[,2] <- c(39.0,39.0,39,38.4,36.3,37.1,40.2,45.3,42.1,38.3,42.5,45.2,40.1,39.8,50.1,53.4,48.2,52.1,56.1,50.4,53.2,
55.2,55.1,59.1,56.3,52.9,53.7)
data <- list(N=length(M[,1]),
d = M[,1],
y = M[,2])
A = ma_continuous_fit(M[,1,drop=F],M[,2,drop=F],fit_type="mcmc",BMR=2)
plot(A)
library(ToxicR)
mData <- matrix(c(0, 1,10,
0.3, 4,10,
1, 4,10,
4, 7,10),nrow=4,ncol=3,byrow=T)
mData <- matrix(c(0, 1,50,
1, 2,50,
2.5, 3,50,
4, 14,50),nrow=4,ncol=3,byrow=T)
B = ma_dichotomous_fit(mData[,1],mData[,2],mData[,3],fit_type = "mcmc")
plot(B)
plot(B$Individual_Model_5)
B = ma_dichotomous_fit(mData[,1],mData[,2],mData[,3],fit_type = "laplace")
plot(B)
mData <- matrix(c(0, 1,10,
0.3, 4,10,
1, 4,10,
4, 7,10),nrow=4,ncol=3,byrow=T)
mData <- matrix(c(0, 1,50,
1, 2,50,
2.5, 3,50,
4, 14,50),nrow=4,ncol=3,byrow=T)
B = ma_dichotomous_fit(mData[,1],mData[,2],mData[,3],fit_type = "laplace")
plot(B)
plot(B$Individual_Model_5)
A = ma_dichotomous_fit(mData[,1],mData[,2],mData[,3],fit_type = "laplace")
D = single_dichotomous_fit(mData[,1],mData[,2],mData[,3],model_type = "logistic",fit_type = "laplace")
E = single_dichotomous_fit(mData[,1],mData[,2],mData[,3],model_type = "log-probit",fit_type = "laplace")
G = single_dichotomous_fit(mData[,1],mData[,2],mData[,3],model_type = "hill",fit_type = "mcmc")
H = single_dichotomous_fit(mData[,1],mData[,2],mData[,3],model_type = "weibull",fit_type = "mcmc")
I = single_dichotomous_fit(mData[,1],mData[,2],mData[,3],model_type = "log-logistic",fit_type = "laplace")
J = single_dichotomous_fit(mData[,1],mData[,2],mData[,3],model_type = "qlinear",fit_type = "laplace")
J = single_dichotomous_fit(mData[,1],mData[,2],mData[,3],model_type = "probit",fit_type = "laplace")
J = single_dichotomous_fit(mData[,1],mData[,2],mData[,3],model_type = "multistage",fit_type = "laplace")
plot(G)
plog(J)
plot(J)
plot(A)
M =matrix(0,nrow=27,ncol=4)
colnames(M) <- c("Dose","Resp","","")
M[,1] <- c(0.1,0,0,0,0,0,18,18,18,18,20,20,20,20,30,30,30,30,35,35,35,35,39,39,39,39,39)
M[,2] <- c(39.0,39.0,39,38.4,36.3,37.1,40.2,45.3,42.1,38.3,42.5,45.2,40.1,39.8,50.1,53.4,48.2,52.1,56.1,50.4,53.2,
55.2,55.1,59.1,56.3,52.9,53.7)
data <- list(N=length(M[,1]),
d = M[,1],
y = M[,2])
A = ma_continuous_fit(M[,1,drop=F],M[,2,drop=F],fit_type="mcmc",BMR=2)
plot(A)
library(ToxicR)
#library(rstan)
# Input data - Continuous2.dax - Individual dose-response
M =matrix(0,nrow=27,ncol=4)
colnames(M) <- c("Dose","Resp","","")
M[,1] <- c(0.1,0,0,0,0,0,18,18,18,18,20,20,20,20,30,30,30,30,35,35,35,35,39,39,39,39,39)
M[,2] <- c(39.0,39.0,39,38.4,36.3,37.1,40.2,45.3,42.1,38.3,42.5,45.2,40.1,39.8,50.1,53.4,48.2,52.1,56.1,50.4,53.2,
55.2,55.1,59.1,56.3,52.9,53.7)
data <- list(N=length(M[,1]),
d = M[,1],
y = M[,2])
A = ma_continuous_fit(M[,1,drop=F],M[,2,drop=F],fit_type="mcmc",BMR=2)
plot(A)
library(ToxicR)
mData <- matrix(c(0, 1,10,
0.3, 4,10,
1, 4,10,
4, 7,10),nrow=4,ncol=3,byrow=T)
mData <- matrix(c(0, 1,50,
1, 2,50,
2.5, 3,50,
4, 14,50),nrow=4,ncol=3,byrow=T)
A = ma_dichotomous_fit(mData[,1],mData[,2],mData[,3],fit_type = "laplace")
A = ma_dichotomous_fit(mData[,1],mData[,2],mData[,3],fit_type = "laplace")
D = single_dichotomous_fit(mData[,1],mData[,2],mData[,3],model_type = "logistic",fit_type = "laplace")
E = single_dichotomous_fit(mData[,1],mData[,2],mData[,3],model_type = "log-probit",fit_type = "laplace")
G = single_dichotomous_fit(mData[,1],mData[,2],mData[,3],model_type = "hill",fit_type = "mcmc")
H = single_dichotomous_fit(mData[,1],mData[,2],mData[,3],model_type = "weibull",fit_type = "mcmc")
I = single_dichotomous_fit(mData[,1],mData[,2],mData[,3],model_type = "log-logistic",fit_type = "laplace")
J = single_dichotomous_fit(mData[,1],mData[,2],mData[,3],model_type = "qlinear",fit_type = "laplace")
J = single_dichotomous_fit(mData[,1],mData[,2],mData[,3],model_type = "probit",fit_type = "laplace")
J = single_dichotomous_fit(mData[,1],mData[,2],mData[,3],model_type = "multistage",fit_type = "laplace")
plot(D)
plot(G)
# Dichotomous case- Sample data input
mData <- matrix(c(1, 3,50,
3, 10, 50,
16, 18,50,
32, 40,50,
50, 48,50),nrow=5,ncol=3,byrow=T)
# three input
A<-ma_dichotomous_fit(mData[,1],mData[,2],mData[,3], fit_type="mcmc", BMR=0.1)
library(ggplot2)
library(ToxicR)
mData <- matrix(c(1, 3,50,
3, 10, 50,
16, 18,50,
32, 40,50,
50, 48,50),nrow=5,ncol=3,byrow=T)
# three input
A<-ma_dichotomous_fit(mData[,1],mData[,2],mData[,3], fit_type="mcmc", BMR=0.1)
fit_idx    <- grep("Individual_Model",class_list)
# Construct bmd sample plots for mcmc
class_list <- names(A)
class_list
A$ma_bmd
fit_idx
fit_idx
# Construct bmd sample plots for mcmc
class_list <- names(A)
fit_idx    <- grep("Individual_Model",class_list)
fit_idx
class_list
# Grap function extract # of indices from the text with same pattern
fit_idx    <- grep("Individual_Model",class_list)
fit_idx
for (i in 1:length(fit_idx)){
# BMD -Median
bmd_ind[i,1]<-A[[i]]$bmd[1]
# BMD -5%
bmd_ind[i,2]<-A[[i]]$bmd[2]
# BMD -95%
bmd_ind[i,3]<-A[[i]]$bmd[3]
# Model name
bmd_ind[i,4]<-A[[i]]$model
bmd_ind[i,5]<-A$posterior_probs[i]
#
#   if (i==(length(fit_idx)+1)){
#
#     # BMD -Median
#     bmd_ind[i,1]<-A$bmd[1]
#     # BMD -5%
#     bmd_ind[i,2]<-A$bmd[2]
#     # BMD -95%
#     bmd_ind[i,3]<-A$bmd[3]
#
#     # Model name
#     bmd_ind[i,4]<-"Model Average"
#
#     bmd_ind[i,5]<-1
#
#   }
}
# Create an empty matrix to contain BMD information from each model
bmd_ind<-matrix(0,length(fit_idx)+1,5)
for (i in 1:length(fit_idx)){
# BMD -Median
bmd_ind[i,1]<-A[[i]]$bmd[1]
# BMD -5%
bmd_ind[i,2]<-A[[i]]$bmd[2]
# BMD -95%
bmd_ind[i,3]<-A[[i]]$bmd[3]
# Model name
bmd_ind[i,4]<-A[[i]]$model
bmd_ind[i,5]<-A$posterior_probs[i]
#
#   if (i==(length(fit_idx)+1)){
#
#     # BMD -Median
#     bmd_ind[i,1]<-A$bmd[1]
#     # BMD -5%
#     bmd_ind[i,2]<-A$bmd[2]
#     # BMD -95%
#     bmd_ind[i,3]<-A$bmd[3]
#
#     # Model name
#     bmd_ind[i,4]<-"Model Average"
#
#     bmd_ind[i,5]<-1
#
#   }
}
bmd_ind[length(fit_idx)+1,1]<-A$bmd[1]
bmd_ind[length(fit_idx)+1,2]<-A$bmd[2]
bmd_ind[length(fit_idx)+1,3]<-A$bmd[3]
bmd_ind[length(fit_idx)+1,4]<-"Model Average"
bmd_ind[length(fit_idx)+1,5]<-1
bmd_ind_df<-data.frame(bmd_ind)
bmd_ind_df
print(bmd_ind_df)
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(X5)),color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
theme_minimal()+labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",size="Posterior Probability")+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
# The data structure will show 50% (BMD), 5% (BMDL), 95% upper bound from 9 different model
print(bmd_ind_df)
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(X5)),color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
theme_minimal()+labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",size="Posterior Probability")+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
fct_reoder
library(dplyr)
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(X5)),color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
theme_minimal()+labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",size="Posterior Probability")+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
library(ggplot2)
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(X5)),color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
theme_minimal()+labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",size="Posterior Probability")+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
library(tidyverse)
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(X5)),color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
theme_minimal()+labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",size="Posterior Probability")+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(sqrt(X5)),color="red")+
d
a
d
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(sqrt(X5))),color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
theme_minimal()+labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",size="Posterior Probability")+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
bmd_ind_df
bmd_ind_df$X6<-sqrt(X5)
bmd_ind_df$X6<-sqrt(bmd_ind_df$X5)
bmd_ind_df$X5
sqrt(as.numeric(bmd_ind_df$X5))
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(sqrt(as.numeric(bmd_ind_df$X5))
)),color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
theme_minimal()+labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",size="Posterior Probability")+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(sqrt(as.numeric(bmd_ind_df$X5)))),color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
theme_minimal()+labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",size="Posterior Probability")+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(sqrt(as.numeric(X5)))),color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
theme_minimal()+labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",size="Posterior Probability")+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(sqrt(as.numeric(X5)))))+
scale_colour_gradient(low = "gray", high = "black")+
theme_minimal()+labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",size="Posterior Probability")+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
#
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(sqrt(as.numeric(X5)))))+
#scale_colour_gradient(low = "gray", high = "black")+
theme_minimal()+labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",size="Posterior Probability")+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(sqrt(as.numeric(X5)))), color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
theme_minimal()+labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",size="Posterior Probability")+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(sqrt(as.numeric(X5)))), color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
theme_minimal()+
labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",legend=,size="Posterior Probability")+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(sqrt(as.numeric(X5)))), color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
theme_minimal()+
labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",legend.title=element_blank(),size="Posterior Probability")+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(sqrt(as.numeric(X5)))), color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
theme_minimal()+
labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",size="Posterior Probability")+
theme_bw(legend.title=element_blank())+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(sqrt(as.numeric(X5)))), color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
theme_minimal()+
labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",size="Posterior Probability")+
theme(legend.title=element_blank())+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(sqrt(as.numeric(X5)))), color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
theme_minimal()+
labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",size="Posterior Probability")+
theme(legend.postion="none")+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(sqrt(as.numeric(X5)))), color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
theme_minimal()+
labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",size="Posterior Probability")+
theme(legend.position="none")+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
# I should add a vertical line from the bmd;
bmd_ind_df
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(sqrt(as.numeric(X5)))), color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
geom_vline(aex(x=bmd_ind_df$X5))
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(sqrt(as.numeric(X5)))), color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
geom_vline(aes(x=bmd_ind_df$X5))+
theme_minimal()+
labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",size="Posterior Probability")+
theme(legend.position="none")+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(sqrt(as.numeric(X5)))), color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
geom_vline(aes(x=5.9))+
theme_minimal()+
labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",size="Posterior Probability")+
theme(legend.position="none")+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(sqrt(as.numeric(X5)))), color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
geom_vline(aes(xintercept=5.9))+
theme_minimal()+
labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",size="Posterior Probability")+
theme(legend.position="none")+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
# The data structure will show 50% (BMD), 5% (BMDL), 95% upper bound from 9 different model
print(bmd_ind_df)
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(sqrt(as.numeric(X5)))), color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
geom_vline(aes(xintercept=bmd_ind_df$X5[10]))+
theme_minimal()+
labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",size="Posterior Probability")+
theme(legend.position="none")+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
bmd_ind_df$X5
# The data structure will show 50% (BMD), 5% (BMDL), 95% upper bound from 9 different model
print(bmd_ind_df)
bmd_ind_df$X1
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(sqrt(as.numeric(X5)))), color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
geom_vline(aes(xintercept=bmd_ind_df$X1[10]))+
theme_minimal()+
labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",size="Posterior Probability")+
theme(legend.position="none")+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(sqrt(as.numeric(X5)))), color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
geom_vline(aes(xintercept=as.numeric(bmd_ind_df$X1[10])))+
theme_minimal()+
labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",size="Posterior Probability")+
theme(legend.position="none")+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(sqrt(as.numeric(X5)))), color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
geom_vline(aes(xintercept=as.numeric(bmd_ind_df$X1[10])), line_type="dotted")+
theme_minimal()+
labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",size="Posterior Probability")+
theme(legend.position="none")+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(sqrt(as.numeric(X5)))), color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
geom_vline(xintercept=as.numeric(bmd_ind_df$X1[10]), line_type="dotted")+
theme_minimal()+
labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",size="Posterior Probability")+
theme(legend.position="none")+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
ggplot()+
geom_point(data=bmd_ind_df, aes(x=as.numeric(X1), y=fct_reorder(X4,X5,.desc=T),size=(sqrt(as.numeric(X5)))), color="red")+
#scale_colour_gradient(low = "gray", high = "black")+
geom_vline(xintercept=as.numeric(bmd_ind_df$X1[10]), linetype="dotted")+
theme_minimal()+
labs(x="Dose Level",y="Model",title="BMD Estimates by Each Model (Sorted by Posterior Probability)",size="Posterior Probability")+
theme(legend.position="none")+
geom_errorbar(data=bmd_ind_df, width=0.2,aes(xmin=as.numeric(X2), xmax=as.numeric(X3), y=fct_reorder(X4,X5,.desc=T)),color="blue",alpha=0.3)
