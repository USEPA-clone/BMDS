BMD_TYPE="sd",BMR=1, distribution = "normal",prior=prior,
fit_type="laplace",model_type = "hill")})
plot(C)
plot(c)
c$parameters
# Ensure that ToxicR package is loaded.
# Uncomment the next 2 lines if pkgs are not being manually loaded
#library(Rcpp)
library(ToxicR)
#library(rstan)
# Input data - Continuous2.dax - Individual dose-response
M =matrix(0,nrow=26,ncol=4)
colnames(M) <- c("Dose","Resp","","")
M[,1] <- (1/49)*c(0,0,0,0,0,18,18,18,18,20,20,20,20,30,30,30,30,35,35,35,35,49,49,49,49,49)
M[,2] <- c(39.0,39,38.4,36.3,37.1,40.2,45.3,42.1,38.3,42.5,45.2,40.1,39.8,50.1,53.4,48.2,52.1,56.1,50.4,53.2,
55.2,55.1,59.1,56.3,52.9,53.7)
data <- list(N=length(M[,1]),
d = M[,1],
y = M[,2])
#A = ma_continuous_fit(M[,1,drop=F],M[,2,drop=F],fit_type="mcmc",BMR=2)
#plot(A)
#h_fit <- stan(file="stan-check-hill.stan",data=data,
#   control = list(adapt_delta=0.9),iter=10000)
prior <- create_prior_list(lnormprior(0,1,-100,100),
normprior( 0, 1,-1000,1000),#normprior(1,2,-18,18),
lnormprior(0 ,.75,0,100),
lnormprior(0,.75,0,18),
normprior(0,2,-18,18));
system.time({c = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "normal",prior=prior,
fit_type="laplace",model_type = "hill")})
# Ensure that ToxicR package is loaded.
# Uncomment the next 2 lines if pkgs are not being manually loaded
#library(Rcpp)
library(ToxicR)
#library(rstan)
# Input data - Continuous2.dax - Individual dose-response
M =matrix(0,nrow=26,ncol=4)
colnames(M) <- c("Dose","Resp","","")
M[,1] <- (1/49)*c(0,0,0,0,0,18,18,18,18,20,20,20,20,30,30,30,30,35,35,35,35,49,49,49,49,49)
M[,2] <- 0.2*c(39.0,39,38.4,36.3,37.1,40.2,45.3,42.1,38.3,42.5,45.2,40.1,39.8,50.1,53.4,48.2,52.1,56.1,50.4,53.2,
55.2,55.1,59.1,56.3,52.9,53.7)
data <- list(N=length(M[,1]),
d = M[,1],
y = M[,2])
#A = ma_continuous_fit(M[,1,drop=F],M[,2,drop=F],fit_type="mcmc",BMR=2)
#plot(A)
#h_fit <- stan(file="stan-check-hill.stan",data=data,
#   control = list(adapt_delta=0.9),iter=10000)
prior <- create_prior_list(lnormprior(0,1,-100,100),
normprior( 0, 1,-1000,1000),#normprior(1,2,-18,18),
lnormprior(0 ,.75,0,100),
lnormprior(0,.75,0,18),
normprior(0,2,-18,18));
system.time({c = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "normal",prior=prior,
fit_type="laplace",model_type = "hill")})
# Ensure that ToxicR package is loaded.
# Uncomment the next 2 lines if pkgs are not being manually loaded
#library(Rcpp)
library(ToxicR)
#library(rstan)
# Input data - Continuous2.dax - Individual dose-response
M =matrix(0,nrow=26,ncol=4)
colnames(M) <- c("Dose","Resp","","")
M[,1] <- (1/49)*c(0,0,0,0,0,18,18,18,18,20,20,20,20,30,30,30,30,35,35,35,35,49,49,49,49,49)
M[,2] <- 0.2*c(39.0,39,38.4,36.3,37.1,40.2,45.3,42.1,38.3,42.5,45.2,40.1,39.8,50.1,53.4,48.2,52.1,56.1,50.4,53.2,
55.2,55.1,59.1,56.3,52.9,53.7)
data <- list(N=length(M[,1]),
d = M[,1],
y = M[,2])
#A = ma_continuous_fit(M[,1,drop=F],M[,2,drop=F],fit_type="mcmc",BMR=2)
#plot(A)
#h_fit <- stan(file="stan-check-hill.stan",data=data,
#   control = list(adapt_delta=0.9),iter=10000)
prior <- create_prior_list(lnormprior(0,1,-100,100),
normprior( 0, 1,-1000,1000),#normprior(1,2,-18,18),
lnormprior(0 ,.75,0,100),
lnormprior(0,.75,0,18),
normprior(0,2,-18,18));
system.time({c = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "lognormal",prior=prior,
fit_type="laplace",model_type = "hill")})
#h_fit <- stan(file="stan-check-hill.stan",data=data,
#   control = list(adapt_delta=0.9),iter=10000)
prior <- create_prior_list(lnormprior(0,1,-100,100),
normprior( 0, 40,-1000,1000),#normprior(1,2,-18,18),
lnormprior(0 ,.75,0,100),
lnormprior(0,.75,0,18),
normprior(0,2,-18,18));
system.time({c = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "lognormal",prior=prior,
fit_type="laplace",model_type = "hill")})
# Input data - Continuous2.dax - Individual dose-response
M =matrix(0,nrow=26,ncol=4)
colnames(M) <- c("Dose","Resp","","")
M[,1] <- (1/49)*c(0,0,0,0,0,18,18,18,18,20,20,20,20,30,30,30,30,35,35,35,35,49,49,49,49,49)
M[,2] <- c(39.0,39,38.4,36.3,37.1,40.2,45.3,42.1,38.3,42.5,45.2,40.1,39.8,50.1,53.4,48.2,52.1,56.1,50.4,53.2,
55.2,55.1,59.1,56.3,52.9,53.7)
data <- list(N=length(M[,1]),
d = M[,1],
y = M[,2])
#A = ma_continuous_fit(M[,1,drop=F],M[,2,drop=F],fit_type="mcmc",BMR=2)
#plot(A)
#h_fit <- stan(file="stan-check-hill.stan",data=data,
#   control = list(adapt_delta=0.9),iter=10000)
prior <- create_prior_list(lnormprior(0,1,-100,100),
normprior( 0, 40,-1000,1000),#normprior(1,2,-18,18),
lnormprior(0 ,.75,0,100),
lnormprior(0,.75,0,18),
normprior(0,2,-18,18));
system.time({c = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "lognormal",prior=prior,
fit_type="laplace",model_type = "hill")})
M[,1] <- c(0,0,0,0,0,18,18,18,18,20,20,20,20,30,30,30,30,35,35,35,35,49,49,49,49,49)
M[,2] <- 0.2*c(39.0,39,38.4,36.3,37.1,40.2,45.3,42.1,38.3,42.5,45.2,40.1,39.8,50.1,53.4,48.2,52.1,56.1,50.4,53.2,
55.2,55.1,59.1,56.3,52.9,53.7)
data <- list(N=length(M[,1]),
d = M[,1],
y = M[,2])
#A = ma_continuous_fit(M[,1,drop=F],M[,2,drop=F],fit_type="mcmc",BMR=2)
#plot(A)
#h_fit <- stan(file="stan-check-hill.stan",data=data,
#   control = list(adapt_delta=0.9),iter=10000)
prior <- create_prior_list(lnormprior(0,1,-100,100),
normprior( 0, 40,-1000,1000),#normprior(1,2,-18,18),
lnormprior(0 ,.75,0,100),
lnormprior(0,.75,0,18),
normprior(0,2,-18,18));
system.time({c = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "lognormal",prior=prior,
fit_type="laplace",model_type = "hill")})
system.time({c = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "normal",prior=prior,
fit_type="laplace",model_type = "hill")})
#h_fit <- stan(file="stan-check-hill.stan",data=data,
#   control = list(adapt_delta=0.9),iter=10000)
prior <- create_prior_list(lnormprior(0,1,-100,100),
normprior( 0, 1,-1000,1000),#normprior(1,2,-18,18),
lnormprior(0 ,.75,0,100),
lnormprior(0,.75,0,18),
normprior(0,2,-18,18));
system.time({c = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "normal",prior=prior,
fit_type="laplace",model_type = "hill")})
system.time({c = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "lognormal",prior=prior,
fit_type="laplace",model_type = "hill")})
#h_fit <- stan(file="stan-check-hill.stan",data=data,
#   control = list(adapt_delta=0.9),iter=10000)
prior <- create_prior_list(lnormprior(0,1,-100,100),
normprior( 0, 1,-1000,1000),#normprior(1,2,-18,18),
lnormprior(0 ,.5,0,100),
lnormprior(0,.5,0,18),
normprior(0,2,-18,18));
system.time({c = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "lognormal",prior=prior,
fit_type="laplace",model_type = "hill")})
system.time({c = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "normal",prior=prior,
fit_type="laplace",model_type = "hill")})
#h_fit <- stan(file="stan-check-hill.stan",data=data,
#   control = list(adapt_delta=0.9),iter=10000)
prior <- create_prior_list(lnormprior(0,1,-100,100),
normprior( 0, 1,-1000,1000),#normprior(1,2,-18,18),
lnormprior(0 ,.25,0,100),
lnormprior(0,.25,0,18),
normprior(0,2,-18,18));
system.time({c = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "normal",prior=prior,
fit_type="laplace",model_type = "hill")})
#h_fit <- stan(file="stan-check-hill.stan",data=data,
#   control = list(adapt_delta=0.9),iter=10000)
prior <- create_prior_list(lnormprior(0,1,-100,100),
normprior( 0, 1,-1000,1000),#normprior(1,2,-18,18),
lnormprior(0 ,1,0,100),
lnormprior(0,1,0,18),
normprior(0,2,-18,18));
system.time({c = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "normal",prior=prior,
fit_type="laplace",model_type = "hill")})
# Input data - Continuous2.dax - Individual dose-response
M =matrix(0,nrow=26,ncol=4)
colnames(M) <- c("Dose","Resp","","")
M[,1] <- c(0,0,0,0,0,18,18,18,18,20,20,20,20,30,30,30,30,35,35,35,35,49,49,49,49,49)
M[,2] <- c(39.0,39,38.4,36.3,37.1,40.2,45.3,42.1,38.3,42.5,45.2,40.1,39.8,50.1,53.4,48.2,52.1,56.1,50.4,53.2,
55.2,55.1,59.1,56.3,52.9,53.7)
data <- list(N=length(M[,1]),
d = M[,1],
y = M[,2])
#A = ma_continuous_fit(M[,1,drop=F],M[,2,drop=F],fit_type="mcmc",BMR=2)
#plot(A)
#h_fit <- stan(file="stan-check-hill.stan",data=data,
#   control = list(adapt_delta=0.9),iter=10000)
prior <- create_prior_list(lnormprior(0,1,-100,100),
normprior( 0, 1,-1000,1000),#normprior(1,2,-18,18),
lnormprior(0 ,1,0,100),
lnormprior(0,1,0,18),
normprior(0,2,-18,18));
system.time({c = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "normal",prior=prior,
fit_type="laplace",model_type = "hill")})
# Ensure that ToxicR package is loaded.
# Uncomment the next 2 lines if pkgs are not being manually loaded
#library(Rcpp)
library(ToxicR)
#library(rstan)
# Input data - Continuous2.dax - Individual dose-response
M =matrix(0,nrow=26,ncol=4)
colnames(M) <- c("Dose","Resp","","")
M[,1] <- c(0,0,0,0,0,18,18,18,18,20,20,20,20,30,30,30,30,35,35,35,35,49,49,49,49,49)
M[,2] <- c(39.0,39,38.4,36.3,37.1,40.2,45.3,42.1,38.3,42.5,45.2,40.1,39.8,50.1,53.4,48.2,52.1,56.1,50.4,53.2,
55.2,55.1,59.1,56.3,52.9,53.7)
data <- list(N=length(M[,1]),
d = M[,1],
y = M[,2])
#A = ma_continuous_fit(M[,1,drop=F],M[,2,drop=F],fit_type="mcmc",BMR=2)
#plot(A)
#h_fit <- stan(file="stan-check-hill.stan",data=data,
#   control = list(adapt_delta=0.9),iter=10000)
prior <- create_prior_list(lnormprior(0,1,-100,100),
normprior( 0, 1,-1000,1000),#normprior(1,2,-18,18),
lnormprior(0 ,1,0,100),
lnormprior(0,1,0,18),
normprior(0,2,-18,18));
system.time({c = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "normal",prior=prior,
fit_type="laplace",model_type = "hill")})
c$parameters
exp(3.89)
# Input data - Continuous2.dax - Individual dose-response
M =matrix(0,nrow=26,ncol=4)
colnames(M) <- c("Dose","Resp","","")
M[,1] <- c(0,0,0,0,0,18,18,18,18,20,20,20,20,30,30,30,30,35,35,35,35,49,49,49,49,49)
M[,2] <- 0.2*c(39.0,39,38.4,36.3,37.1,40.2,45.3,42.1,38.3,42.5,45.2,40.1,39.8,50.1,53.4,48.2,52.1,56.1,50.4,53.2,
55.2,55.1,59.1,56.3,52.9,53.7)
log(25.169)
system.time({c = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "normal",prior=prior,
fit_type="laplace",model_type = "hill")})
c$parameters
exp(2.0271)
M[,1] <- c(0,0,0,0,0,18,18,18,18,20,20,20,20,30,30,30,30,35,35,35,35,49,49,49,49,49)
M[,2] <- c(39.0,39,38.4,36.3,37.1,40.2,45.3,42.1,38.3,42.5,45.2,40.1,39.8,50.1,53.4,48.2,52.1,56.1,50.4,53.2,
55.2,55.1,59.1,56.3,52.9,53.7)
data <- list(N=length(M[,1]),
d = M[,1],
y = M[,2])
#A = ma_continuous_fit(M[,1,drop=F],M[,2,drop=F],fit_type="mcmc",BMR=2)
#plot(A)
#h_fit <- stan(file="stan-check-hill.stan",data=data,
#   control = list(adapt_delta=0.9),iter=10000)
prior <- create_prior_list(lnormprior(0,1,-100,100),
normprior( 0, 1,-1000,1000),#normprior(1,2,-18,18),
lnormprior(0 ,1,0,100),
lnormprior(0,1,0,18),
normprior(0,2,-18,18));
system.time({d = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "normal",prior=prior,
fit_type="laplace",model_type = "hill")})
d$parameters
c$parameters
dnorm(3.76,0,1860.0,log=T)
dnorm(18.83,0,1860.0,log=T)
dnorm(18.83,0,372.0,log=T)
dlnorm(37.7759,0,1,log=T)
dlnorm(37.775,3.63653,1,log=T)
dlnorm(7.56,2.0271,1,log=T)
log(37.779)
log(7.56)
prior <- create_prior_list(normprior(0,1,-100,100),
normprior( 0, 1,-1000,1000),#normprior(1,2,-18,18),
normprior(0 ,1,0,100),
normprior(0,1,0,18),
normprior(0,2,-18,18));
system.time({d = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "normal",prior=prior,
fit_type="laplace",model_type = "hill")})
M[,1] <- c(0,0,0,0,0,18,18,18,18,20,20,20,20,30,30,30,30,35,35,35,35,49,49,49,49,49)
M[,2] <- 0.2*c(39.0,39,38.4,36.3,37.1,40.2,45.3,42.1,38.3,42.5,45.2,40.1,39.8,50.1,53.4,48.2,52.1,56.1,50.4,53.2,
55.2,55.1,59.1,56.3,52.9,53.7)
data <- list(N=length(M[,1]),
d = M[,1],
y = M[,2])
#A = ma_continuous_fit(M[,1,drop=F],M[,2,drop=F],fit_type="mcmc",BMR=2)
#plot(A)
#h_fit <- stan(file="stan-check-hill.stan",data=data,
#   control = list(adapt_delta=0.9),iter=10000)
prior <- create_prior_list(normprior(0,1,-100,100),
normprior( 0, 1,-1000,1000),#normprior(1,2,-18,18),
normprior(0 ,1,0,100),
normprior(0,1,0,18),
normprior(0,2,-18,18));
system.time({d = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "normal",prior=prior,
fit_type="laplace",model_type = "hill")})
setwd("~/Documents/r_software/RBMDS/ToxicR/src/include")
#library(Rcpp)
library(ToxicR)
#library(rstan)
# Input data - Continuous2.dax - Individual dose-response
M =matrix(0,nrow=26,ncol=4)
colnames(M) <- c("Dose","Resp","","")
M[,1] <- c(0,0,0,0,0,18,18,18,18,20,20,20,20,30,30,30,30,35,35,35,35,49,49,49,49,49)
M[,2] <- 0.2*c(39.0,39,38.4,36.3,37.1,40.2,45.3,42.1,38.3,42.5,45.2,40.1,39.8,50.1,53.4,48.2,52.1,56.1,50.4,53.2,
55.2,55.1,59.1,56.3,52.9,53.7)
data <- list(N=length(M[,1]),
d = M[,1],
y = M[,2])
#A = ma_continuous_fit(M[,1,drop=F],M[,2,drop=F],fit_type="mcmc",BMR=2)
#plot(A)
prior <- create_prior_list(normprior(0,1,-100,100),
normprior(0, 1,-1000,1000),#normprior(1,2,-18,18),
normprior(0 ,1,0,100),
normprior(0,1,0,18),
normprior(0,2,-18,18));
system.time({d = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "normal",prior=prior,
fit_type="laplace",model_type = "hill")})
M[,1] <- c(0,0,0,0,0,18,18,18,18,20,20,20,20,30,30,30,30,35,35,35,35,49,49,49,49,49)
M[,2] <- c(39.0,39,38.4,36.3,37.1,40.2,45.3,42.1,38.3,42.5,45.2,40.1,39.8,50.1,53.4,48.2,52.1,56.1,50.4,53.2,
55.2,55.1,59.1,56.3,52.9,53.7)
data <- list(N=length(M[,1]),
d = M[,1],
y = M[,2])
#A = ma_continuous_fit(M[,1,drop=F],M[,2,drop=F],fit_type="mcmc",BMR=2)
#plot(A)
#h_fit <- stan(file="stan-check-hill.stan",data=data,
#   control = list(adapt_delta=0.9),iter=10000)
prior <- create_prior_list(normprior(0,1,-100,100),
normprior(0, 1,-1000,1000),#normprior(1,2,-18,18),
normprior(0 ,1,0,100),
normprior(0,1,0,18),
normprior(0,2,-18,18));
system.time({d = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "normal",prior=prior,
fit_type="laplace",model_type = "hill")})
system.time({d = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "normal",prior=prior,
fit_type="mle",model_type = "hill")})
system.time({d = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "normal",prior=prior,
fit_type="laplace",model_type = "hill")})
M[,1] <- (1/49)*c(0,0,0,0,0,18,18,18,18,20,20,20,20,30,30,30,30,35,35,35,35,49,49,49,49,49)
M[,2] <- c(39.0,39,38.4,36.3,37.1,40.2,45.3,42.1,38.3,42.5,45.2,40.1,39.8,50.1,53.4,48.2,52.1,56.1,50.4,53.2,
55.2,55.1,59.1,56.3,52.9,53.7)
data <- list(N=length(M[,1]),
d = M[,1],
y = M[,2])
#A = ma_continuous_fit(M[,1,drop=F],M[,2,drop=F],fit_type="mcmc",BMR=2)
#plot(A)
#h_fit <- stan(file="stan-check-hill.stan",data=data,
#   control = list(adapt_delta=0.9),iter=10000)
prior <- create_prior_list(normprior(0,1,-100,100),
normprior(0, 1,-1000,1000),#normprior(1,2,-18,18),
normprior(0 ,1,0,100),
normprior(0,1,0,18),
normprior(0,2,-18,18));
system.time({d = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "normal",prior=prior,
fit_type="laplace",model_type = "hill")})
system.time({d = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "normal",
fit_type="laplace",model_type = "hill")})
system.time({d = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "lognormal",
fit_type="laplace",model_type = "hill")})
# Ensure that ToxicR package is loaded.
# Uncomment the next 2 lines if pkgs are not being manually loaded
#library(Rcpp)
library(ToxicR)
#library(rstan)
# Input data - Continuous2.dax - Individual dose-response
M =matrix(0,nrow=26,ncol=4)
colnames(M) <- c("Dose","Resp","","")
M[,1] <- c(0,0,0,0,0,18,18,18,18,20,20,20,20,30,30,30,30,35,35,35,35,49,49,49,49,49)
M[,2] <- c(39.0,39,38.4,36.3,37.1,40.2,45.3,42.1,38.3,42.5,45.2,40.1,39.8,50.1,53.4,48.2,52.1,56.1,50.4,53.2,
55.2,55.1,59.1,56.3,52.9,53.7)
data <- list(N=length(M[,1]),
d = M[,1],
y = M[,2])
#A = ma_continuous_fit(M[,1,drop=F],M[,2,drop=F],fit_type="mcmc",BMR=2)
#plot(A)
#h_fit <- stan(file="stan-check-hill.stan",data=data,
#   control = list(adapt_delta=0.9),iter=10000)
prior <- create_prior_list(normprior(0,1,-100,100),
normprior(0, 1,-1000,1000),#normprior(1,2,-18,18),
normprior(0 ,1,0,100),
normprior(0,1,0,18),
normprior(0,2,-18,18));
system.time({d = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "lognormal",
fit_type="laplace",model_type = "hill")})
# Ensure that ToxicR package is loaded.
# Uncomment the next 2 lines if pkgs are not being manually loaded
#library(Rcpp)
library(ToxicR)
#library(rstan)
# Input data - Continuous2.dax - Individual dose-response
M =matrix(0,nrow=26,ncol=4)
colnames(M) <- c("Dose","Resp","","")
M[,1] <- c(0,0,0,0,0,18,18,18,18,20,20,20,20,30,30,30,30,35,35,35,35,49,49,49,49,49)
M[,2] <- c(39.0,39,38.4,36.3,37.1,40.2,45.3,42.1,38.3,42.5,45.2,40.1,39.8,50.1,53.4,48.2,52.1,56.1,50.4,53.2,
55.2,55.1,59.1,56.3,52.9,53.7)
data <- list(N=length(M[,1]),
d = M[,1],
y = M[,2])
#A = ma_continuous_fit(M[,1,drop=F],M[,2,drop=F],fit_type="mcmc",BMR=2)
#plot(A)
#h_fit <- stan(file="stan-check-hill.stan",data=data,
#   control = list(adapt_delta=0.9),iter=10000)
prior <- create_prior_list(normprior(0,1,-100,100),
normprior(0, 1,-1000,1000),#normprior(1,2,-18,18),
normprior(0 ,1,0,100),
normprior(0,1,0,18),
normprior(0,2,-18,18));
system.time({d = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "normal",
fit_type="laplace",model_type = "hill")})
# Input data - Continuous2.dax - Individual dose-response
M =matrix(0,nrow=26,ncol=4)
colnames(M) <- c("Dose","Resp","","")
M[,1] <- c(0,0,0,0,0,18,18,18,18,20,20,20,20,30,30,30,30,35,35,35,35,49,49,49,49,49)
M[,2] <- 0.2*c(39.0,39,38.4,36.3,37.1,40.2,45.3,42.1,38.3,42.5,45.2,40.1,39.8,50.1,53.4,48.2,52.1,56.1,50.4,53.2,
55.2,55.1,59.1,56.3,52.9,53.7)
data <- list(N=length(M[,1]),
d = M[,1],
y = M[,2])
#A = ma_continuous_fit(M[,1,drop=F],M[,2,drop=F],fit_type="mcmc",BMR=2)
#plot(A)
#h_fit <- stan(file="stan-check-hill.stan",data=data,
#   control = list(adapt_delta=0.9),iter=10000)
prior <- create_prior_list(normprior(0,1,-100,100),
normprior(0, 1,-1000,1000),#normprior(1,2,-18,18),
normprior(0 ,1,0,100),
normprior(0,1,0,18),
normprior(0,2,-18,18));
system.time({d = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "normal",
fit_type="laplace",model_type = "hill")})
system.time({d = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "lognormal",
fit_type="laplace",model_type = "hill")})
M[,1] <- 0.2*c(0,0,0,0,0,18,18,18,18,20,20,20,20,30,30,30,30,35,35,35,35,49,49,49,49,49)
M[,2] <- 0.2*c(39.0,39,38.4,36.3,37.1,40.2,45.3,42.1,38.3,42.5,45.2,40.1,39.8,50.1,53.4,48.2,52.1,56.1,50.4,53.2,
55.2,55.1,59.1,56.3,52.9,53.7)
data <- list(N=length(M[,1]),
d = M[,1],
y = M[,2])
#A = ma_continuous_fit(M[,1,drop=F],M[,2,drop=F],fit_type="mcmc",BMR=2)
#plot(A)
#h_fit <- stan(file="stan-check-hill.stan",data=data,
#   control = list(adapt_delta=0.9),iter=10000)
prior <- create_prior_list(normprior(0,1,-100,100),
normprior(0, 1,-1000,1000),#normprior(1,2,-18,18),
normprior(0 ,1,0,100),
normprior(0,1,0,18),
normprior(0,2,-18,18));
system.time({d = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "lognormal",
fit_type="laplace",model_type = "hill")})
M =matrix(0,nrow=26,ncol=4)
colnames(M) <- c("Dose","Resp","","")
M[,1] <- 1/49*c(0,0,0,0,0,18,18,18,18,20,20,20,20,30,30,30,30,35,35,35,35,49,49,49,49,49)
M[,2] <- 0.2*c(39.0,39,38.4,36.3,37.1,40.2,45.3,42.1,38.3,42.5,45.2,40.1,39.8,50.1,53.4,48.2,52.1,56.1,50.4,53.2,
55.2,55.1,59.1,56.3,52.9,53.7)
data <- list(N=length(M[,1]),
d = M[,1],
y = M[,2])
#A = ma_continuous_fit(M[,1,drop=F],M[,2,drop=F],fit_type="mcmc",BMR=2)
#plot(A)
#h_fit <- stan(file="stan-check-hill.stan",data=data,
#   control = list(adapt_delta=0.9),iter=10000)
prior <- create_prior_list(normprior(0,1,-100,100),
normprior(0, 1,-1000,1000),#normprior(1,2,-18,18),
normprior(0 ,1,0,100),
normprior(0,1,0,18),
normprior(0,2,-18,18));
system.time({d = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,
BMD_TYPE="sd",BMR=1, distribution = "lognormal",
fit_type="laplace",model_type = "hill")})
#h_fit <- stan(file="stan-check-hill.stan",data=data,
#              control = list(adapt_delta=0.9),iter=10000)
system.time({r = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,BMD_TYPE="sd",BMR=1, distribution = "normal",fit_type="mcmc",model_type = "exp-5")})
system.time({fit = ma_continuous_fit(M[,1,drop=F],M[,2,drop=F],fit_type="mcmc")})
system.time({d = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,prior=prior,
BMD_TYPE="sd",BMR=1, distribution = "lognormal",
fit_type="laplace",model_type = "hill")})
# Input data - Continuous2.dax - Individual dose-response
M =matrix(0,nrow=26,ncol=4)
colnames(M) <- c("Dose","Resp","","")
M[,1] <- c(0,0,0,0,0,18,18,18,18,20,20,20,20,30,30,30,30,35,35,35,35,49,49,49,49,49)
M[,2] <- 0.2*c(39.0,39,38.4,36.3,37.1,40.2,45.3,42.1,38.3,42.5,45.2,40.1,39.8,50.1,53.4,48.2,52.1,56.1,50.4,53.2,
55.2,55.1,59.1,56.3,52.9,53.7)
data <- list(N=length(M[,1]),
d = M[,1],
y = M[,2])
#A = ma_continuous_fit(M[,1,drop=F],M[,2,drop=F],fit_type="mcmc",BMR=2)
#plot(A)
#h_fit <- stan(file="stan-check-hill.stan",data=data,
#   control = list(adapt_delta=0.9),iter=10000)
prior <- create_prior_list(normprior(0,1,-100,100),
normprior(0, 1,-1000,1000),#normprior(1,2,-18,18),
normprior(0 ,1,0,100),
normprior(0,1,0,18),
normprior(0,2,-18,18));
system.time({d = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,prior=prior,
BMD_TYPE="sd",BMR=1, distribution = "lognormal",
fit_type="laplace",model_type = "hill")})
system.time({d = single_continuous_fit(M[,1,drop=F],M[,2,drop=F],sstat=F,prior=prior,
BMD_TYPE="sd",BMR=1, distribution = "normal",
fit_type="laplace",model_type = "hill")})
